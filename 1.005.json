{"ExportedSolution":{"SolutionID":"1.005","Description":"1.005_Monthly_revision","Status":"Created","CreatedTime":"2025-02-04T15:06:28.312763+08:00","ExportedTime":"0001-01-01T06:55:25+06:55","LastUpdated":"0001-01-01T06:55:25+06:55","CreatedUser":"api_user","UpdatedUser":"","ExportedUser":"","ExportComponents":[{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"commonBO"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"conso_checking"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"consolidation"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"createEinvoice"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"docUpload"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"excel_data"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"getInvDocs"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"initializeUserGroup"},{"SolutionID":"1.005","ComponentType":"BusinessObject","ComponentID":"submitEinvoiceToPortal"},{"SolutionID":"1.005","ComponentType":"Dataset","ComponentID":"getSubmissionUUID"},{"SolutionID":"1.005","ComponentType":"Dataset","ComponentID":"getUploadedFile"},{"SolutionID":"1.005","ComponentType":"Dataset","ComponentID":"getValidation"},{"SolutionID":"1.005","ComponentType":"List","ComponentID":"m_status"},{"SolutionID":"1.005","ComponentType":"Role","ComponentID":"ntpm_normal_user"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"buyers"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"cancel_cn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"cancel_inv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"cancel_scn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"cancel_sinv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"create_temp"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"download_doc_get_sub"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"download_doc_get_vld"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_conso"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_filing_cn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_filing_inv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_filing_scn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_filing_sinv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_vld_cn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_vld_inv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_vld_scn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"for_vld_sinv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"layouts"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_clas_via_gl"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_country"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_currency"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_einv_types"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_itm_clas"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_paym"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_state"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_tax_types"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"master_unit"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"param_cancel"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"param_conso"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"param_entity_ds"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"param_imp"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"param_self_einv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"submit_cn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"submit_inv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"submit_scn"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"submit_sinv"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"suppliers"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"test_screen"},{"SolutionID":"1.005","ComponentType":"Screen","ComponentID":"upld_doc"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"cancel_header"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"conso_header"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"conso_line"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"conso_parameter"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"einv_header"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"entity_data_set"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"inv_interim_excl"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"msic_codes"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"uploaded_file_details"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"user_access_configuration"},{"SolutionID":"1.005","ComponentType":"Topic","ComponentID":"user_access_control"}]},"Topics":[{"Topic":{"Name":"cancel_header","Description":"Cancellation Header","Keys":["e_inv_no","seqn"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"e_inv_no","Description":"E-Invoice Number","Sequence":1,"DataType":"String","Length":50,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"seqn","Description":"Sequence","Sequence":2,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":2,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"data_set","Description":"Data Set","Sequence":3,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"comp","Description":"Company","Sequence":4,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tran","Description":"Transaction Type","Sequence":5,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"idoc","Description":"Invoice Number","Sequence":6,"DataType":"Integer","Length":8,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"doct","Description":"Invoice Type","Sequence":7,"DataType":"String","Length":2,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reason","Description":"Reason","Sequence":8,"DataType":"String","Length":200,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adcn","Description":"Additional Document Reference","Sequence":9,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cdte","Description":"Cancelled Date \u0026 Time","Sequence":10,"DataType":"DateTime","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"errm","Description":"Error Message","Sequence":11,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"with_ship","Description":"With Shipment","Sequence":12,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"with_rec","Description":"With Receipt","Sequence":13,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"scale","Description":"Scale","Sequence":14,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"scale","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"seri","Description":"Series","Sequence":15,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ord_typ","Description":"Order Type","Sequence":16,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sls_pur_off","Description":"Sales/Purchase Office","Sequence":17,"DataType":"String","Length":6,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ret_reason","Description":"Return Reason","Sequence":18,"DataType":"String","Length":6,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tran_type","Description":"Transaction Type","Sequence":19,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"all_lines","Description":"All Lines","Sequence":20,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"target_doc","Description":"Target Document","Sequence":21,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"targetDocument","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":false,"CreatedBy":"parthi","ModifiedBy":"parthi","CreatedDate":"2024-05-06T19:29:11.891534+08:00","ModifiedDate":"2025-01-08T19:48:01.183673+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{cancel_header}} "},"BeforeSave":"//**** Hook before_save Created by parthi on 09-May-2024 16:51:17\n\t\t\t function before_save(){\n\t\t\t\t if (jscall.input.idoc){\n\t\t\t\t\tjscall.input.idoc = jscall.input.idoc.toString()\n\t\t\t\t }\n\t\t\t  return true;\n\t\t\t}","AfterSave":"//**** Hook after_save Created by mithiran on 10-Sep-2024 15:59:12\n\t\t\tfunction after_save(){\n\t\t\t  return true;\n\t\t\t}","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"conso_header","Description":"Consolidation Header - Interim Table","Keys":["inv_no"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"inv_no","Description":"Invoice Number","Sequence":1,"DataType":"String","Length":50,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"comp","Description":"Financial Company","Sequence":2,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tran","Description":"Finance Type","Sequence":3,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"idoc","Description":"Invoice Number","Sequence":4,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"doct","Description":"Invoice Type","Sequence":5,"DataType":"String","Length":2,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"itbp","Description":"Buyer Code","Sequence":6,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"itoa","Description":"Buyer Address","Sequence":7,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccur","Description":"Invoice Currency Code","Sequence":8,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"rate","Description":"Currency Exchange Rate","Sequence":9,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"paym","Description":"Payment Mode","Sequence":10,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"term","Description":"Payment Term","Sequence":11,"DataType":"String","Length":120,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tote","Description":"Total Excluding Tax","Sequence":12,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"toti","Description":"Total Including Tax","Sequence":13,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tott","Description":"Total Tax Amount","Sequence":14,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cvat","Description":"Tax Type","Sequence":15,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"stbp","Description":"Shipping Recipient’s Name","Sequence":16,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sadr","Description":"Shipping Recipient’s Address","Sequence":17,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dtrm","Description":"Incoterms","Sequence":18,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"styp","Description":"Sales Transaction Type","Sequence":19,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cein","Description":"Consolidate E-Invoice","Sequence":20,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"disb","Description":"Disbursement","Sequence":21,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dshp","Description":"Dropshipment","Sequence":22,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sinc","Description":"Sales Invoice Correction","Sequence":23,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"fbil","Description":"Frequency of Billing","Sequence":24,"DataType":"String","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bsdt","Description":"Billing Period Start Date","Sequence":25,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bedt","Description":"Billing Period End Date","Sequence":26,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pamt","Description":"Payment Amount","Sequence":27,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pydt","Description":"Payment Date","Sequence":28,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pytm","Description":"PaymentTime","Sequence":29,"DataType":"DateTime","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pref","Description":"Payment Reference Number","Sequence":30,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bref","Description":"Bill Reference Number","Sequence":31,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tpat","Description":"Total Payable Amount","Sequence":32,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tnat","Description":"Total Net Amount","Sequence":33,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tdis","Description":"Total Discount Value","Sequence":34,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tfee","Description":"Total Fee / Charge Amount","Sequence":35,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ramt","Description":"Rounding Amount","Sequence":36,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ttax","Description":"Total Taxable Amount Per Tax Type","Sequence":37,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ttat","Description":"Total Tax Amount Per Tax Type","Sequence":38,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adis","Description":"Invoice Additional Discount Amount","Sequence":39,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"afee","Description":"Invoice Additional Fee Amount","Sequence":40,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"frm1","Description":"Reference No of Customs form No 1, 9, etc","Sequence":41,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ftrd","Description":"Free Trade Agreement(FTA) Information","Sequence":42,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"anum","Description":"Authorisation Number for Certified Exporter","Sequence":43,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"frm2","Description":"Reference Number of Customs Form No.2","Sequence":44,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg","Description":"Details of other charges","Sequence":45,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg_amnt","Description":"Details of other charges - Amount","Sequence":46,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg_reason","Description":"Details of other charges - Reason","Sequence":47,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"esta","Description":"LHDN Status","Sequence":48,"DataType":"String","Length":30,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"lhdn_status","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"etim","Description":"LHDN Validated Date \u0026 Time","Sequence":49,"DataType":"DateTime","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"submission_uid","Description":"LHDN Submission UID","Sequence":50,"DataType":"String","Length":26,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"err_msg","Description":"Error Message","Sequence":51,"DataType":"String","Length":600,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"line_cnt","Description":"Line Count","Sequence":52,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"trgt","Description":"Target","Sequence":53,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"val_err","Description":"Validation Error Category","Sequence":54,"DataType":"String","Length":30,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"error_type","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cncl","Description":"Cancelled","Sequence":55,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"det_tax","Description":"Detail of Tax Exemption(Invoice Level)","Sequence":56,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amnt_ex","Description":"Amount Exemption from Tax(Invoice Level)","Sequence":57,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"e_invdt","Description":"E-Invoice Date \u0026 Time","Sequence":58,"DataType":"DateTime","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"src_type","Description":"Source Type","Sequence":59,"DataType":"String","Length":30,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"src_inv_type","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adis_reason","Description":"Invoice Additional Discount Amount Reason","Sequence":60,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"afee_reason","Description":"Invoice Additional Fee Amount Reason","Sequence":61,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"par_cncl","Description":"Partially Cancelled","Sequence":62,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"s_line_cnt","Description":"Source Line Count","Sequence":63,"DataType":"Integer","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"einv_stat","Description":"E-Invoice Status","Sequence":64,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"einv_status","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"conso_inv","Description":"Consolidation E-Invoice Number","Sequence":65,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"inv_date","Description":"Invoice Date","Sequence":66,"DataType":"DateTime","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"data_set","Description":"Data Set","Sequence":67,"DataType":"String","Length":5,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[{"Topic":"conso_header","IndexNo":2,"Description":"Invoice Number","Fields":["inv_no"],"Unique":true,"Cascade":false},{"Topic":"conso_header","IndexNo":4,"Description":"Invoice Number","Fields":["inv_no"],"Unique":true,"Cascade":false},{"Topic":"conso_header","IndexNo":1,"Description":"Invoice Number","Fields":["inv_no"],"Unique":true,"Cascade":false}],"SharedTable":false,"CreatedBy":"malai","ModifiedBy":"api_user","CreatedDate":"2024-06-03T18:10:15.383108+08:00","ModifiedDate":"2025-01-07T18:59:28.296663+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{conso_header}} "},"BeforeSave":"//**** Hook before_save Created by malai on 23-Aug-2024 17:47:31\nfunction before_save(){\n\tif (jscall.input.idoc){\n\t\tjscall.input.idoc = jscall.input.idoc.toString()\n\t}\n\tif (!jscall.input.inv_no){\n\t\tjscall.input.inv_no = jscall.input.tran + jscall.input.idoc.toString()\n\t}\n\treturn true;\n}","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"conso_line","Description":"Consolidation Line - Interim Table","Keys":["inv_no","line"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"inv_no","Description":"Invoice Number","Sequence":1,"DataType":"String","Length":50,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"line","Description":"Invoice Line No","Sequence":2,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":2,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"item","Description":"Item Code","Sequence":3,"DataType":"String","Length":47,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"item_desc","Description":"Description of Product or Service","Sequence":4,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pric","Description":"Unit Price","Sequence":5,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cvat","Description":"Tax Type","Sequence":6,"DataType":"String","Length":2,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pvat","Description":"Tax Rate","Sequence":7,"DataType":"Float","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"txai","Description":"Tax Amount","Sequence":8,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ceno","Description":"Detail of Tax Exemption","Sequence":9,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amtt","Description":"Amount Exempted from Tax","Sequence":10,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"stot","Description":"Sub Total","Sequence":11,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amti","Description":"Total Excluding Tax","Sequence":12,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dqua","Description":"Quantity","Sequence":13,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cuni","Description":"Measurement","Sequence":14,"DataType":"String","Length":5,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"disc","Description":"Discount Rate","Sequence":15,"DataType":"Float","Length":6,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ldai","Description":"Discount Amount","Sequence":16,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccde","Description":"Product Tariff","Sequence":17,"DataType":"String","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccty","Description":"Country of Origin","Sequence":18,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"clas","Description":"Classification","Sequence":19,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"feer","Description":"Fee / Charge Rate","Sequence":20,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"feea","Description":"Fee / Charge Amount","Sequence":21,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"err_msg","Description":"Error Message","Sequence":22,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"lsta","Description":"Line Status","Sequence":23,"DataType":"String","Length":30,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"lhdn_status","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"disc_reason","Description":"Discount Reason","Sequence":24,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"fee_reason","Description":"Fees Reason","Sequence":25,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":false,"CreatedBy":"malai","ModifiedBy":"parthi","CreatedDate":"2024-06-04T13:10:40.372533+08:00","ModifiedDate":"2025-01-08T19:48:01.189519+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{conso_line}} "},"BeforeSave":"//**** Hook before_save Created by malai on 11-Dec-2024 10:49:40\n\t\t\tfunction before_save(){\n\t\t\t  if (!jscall.input.inv_no){\n\t\t\t\t  if (jscall.input.tran \u0026\u0026 jscall.input.idoc){\n\t\t\t\t\t  jscall.input.inv_no = jscall.input?.tran + jscall.input?.idoc.toString()\n\t\t\t\t  } else {\n\t\t\t\t\t  jscall.input.inv_no = ''\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  return true;\n\t\t\t}","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"conso_parameter","Description":"Consolidation Parameter","Keys":["criteria","seq"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"criteria","Description":"Criteria","Sequence":1,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"seq","Description":"Sequence","Sequence":2,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":2,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"is_buyer","Description":"Buyer","Sequence":3,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"field_name","Description":"Field Name","Sequence":4,"DataType":"String","Length":200,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"condition","Description":"Condition","Sequence":5,"DataType":"String","Length":200,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"by_range","Description":"Range","Sequence":6,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"from_range","Description":"From","Sequence":7,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"to_range","Description":"To","Sequence":8,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"joiner","Description":"Joiner","Sequence":9,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":false,"CreatedBy":"malai","ModifiedBy":"malai","CreatedDate":"2024-12-06T17:58:23.656844+08:00","ModifiedDate":"2025-01-07T18:59:28.313195+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{conso_parameter}} "},"BeforeSave":"//**** Hook before_save Created by malai on 06-Dec-2024 15:47:47\nfunction before_save(){\n\tif (jscall.mode == 'insert'){\n\t\tjscall.input.seq = CralDB.QueryByComp(`select count(seq) from {{conso_parameter}} where criteria=${jscall.input.criteria}`, jscall.company)[0].count + 1\n\t}\n\tif (jscall.input.by_range \u0026\u0026 jscall.input.is_buyer){\n\t\tjscall_error = `Only one condition can be applied in one sequence.`\n\t\treturn false;\n\t} else if (!jscall.input.by_range \u0026\u0026 !jscall.input.is_buyer){\n\t\tif (!jscall.input.field_name || !jscall.input.condition){\n\t\t\tjscall_error = `Field Name and Condition is Mandatory.`;\n\t\t\treturn false;\n\t\t}\n\t} else if (jscall.input.by_range) {\n\t\tif (!jscall.input.field_name){\n\t\t\tjscall_error = `Field Name is Mandatory.`\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (jscall.input.seq \u003e 1 \u0026\u0026 !jscall.input.joiner){\n\t\tjscall_error = 'Joiner is Mandatory';\n\t\treturn false;\n\t}\n\treturn true;\n}","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"einv_header","Description":"E-Invoice Header","Keys":["e_inv_no"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"e_inv_no","Description":"E-Invoice Number","Sequence":1,"DataType":"String","Length":50,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"comp","Description":"Financial Company","Sequence":2,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tran","Description":"Finance Type","Sequence":3,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"idoc","Description":"Invoice Number","Sequence":4,"DataType":"Integer","Length":8,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"doct","Description":"Invoice Type","Sequence":5,"DataType":"String","Length":2,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccur","Description":"Invoice Currency Code","Sequence":6,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"paym","Description":"Payment Mode","Sequence":7,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cvat","Description":"Tax Type","Sequence":8,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sctg","Description":"Sales Category","Sequence":9,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"sales_catg","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dataset","Description":"Dataset","Sequence":10,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"line_cnt","Description":"Line Count","Sequence":11,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"s_line_cnt","Description":"Source Line Count","Sequence":12,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_name","Description":"Supplier Name","Sequence":13,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_cont_num","Description":"Supplier Contact Number","Sequence":14,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_email","Description":"Supplier Mail","Sequence":15,"DataType":"String","Length":320,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_sst_reg","Description":"Supplier SST Registration","Sequence":16,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_ttx_no","Description":"Supplier Tourism Tax Number","Sequence":17,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_tin","Description":"Supplier TIN","Sequence":18,"DataType":"String","Length":14,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_brn","Description":"Supplier Registration Number","Sequence":19,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_nric","Description":"Supplier NRIC","Sequence":20,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_passport","Description":"Supplier Passport Number","Sequence":21,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_army","Description":"Supplier Army Identification","Sequence":22,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_badsca","Description":"Supplier Business Activity","Sequence":23,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_bank_acc","Description":"Supplier Bank Account Number","Sequence":24,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_msic","Description":"Supplier MSIC Code","Sequence":25,"DataType":"String","Length":5,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs","Description":"Supplier Address Code","Sequence":26,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_city","Description":"Supplier City","Sequence":27,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_postal_zone","Description":"Supplier Postal Code","Sequence":28,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs_line0","Description":"Supplier Address Line 0","Sequence":29,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs_line1","Description":"Supplier Address Line 1","Sequence":30,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs_line2","Description":"Supplier Address Line 2","Sequence":31,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_country","Description":"Supplier Country Code","Sequence":32,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"ccty","RefersTo":"country"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_cste","Description":"Supplier State Code","Sequence":33,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"code","RefersTo":"state_codes"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"inv_bp","Description":"Buyer Code","Sequence":34,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_name","Description":"Buyer Name","Sequence":35,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_cont_num","Description":"Buyer Contact Number","Sequence":36,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_email","Description":"Buyer Mail","Sequence":37,"DataType":"String","Length":320,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_sst_reg","Description":"Buyer SST Registration","Sequence":38,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_tin","Description":"Buyer TIN","Sequence":39,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_brn","Description":"Buyer Registration Number","Sequence":40,"DataType":"String","Length":14,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_nric","Description":"Buyer NRIC","Sequence":41,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_passport","Description":"Buyer Passport","Sequence":42,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_army","Description":"Buyer Army","Sequence":43,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs","Description":"Buyer Address","Sequence":44,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_city","Description":"Buyer City","Sequence":45,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_postal_zone","Description":"Buyer Postal Code","Sequence":46,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs_line0","Description":"Buyer Address Line 0","Sequence":47,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs_line1","Description":"Buyer Address Line 1","Sequence":48,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs_line2","Description":"Buyer Address Line 2","Sequence":49,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_country","Description":"Buyer Country Code","Sequence":50,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"ccty","RefersTo":"country"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_cste","Description":"Buyer State Code","Sequence":51,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"code","RefersTo":"state_codes"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dtrm","Description":"Incoterms","Sequence":52,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_bp","Description":"Shipper Code","Sequence":53,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_name","Description":"Shipper Name","Sequence":54,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_tin","Description":"Shipper TIN","Sequence":55,"DataType":"String","Length":14,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_brn","Description":"Shipper Registration Number","Sequence":56,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_nric","Description":"Shipper NRIC","Sequence":57,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_passport","Description":"Shipper Passport","Sequence":58,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_army","Description":"Shipper Army","Sequence":59,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs","Description":"Shipper Address Code","Sequence":60,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_city","Description":"Shipper City","Sequence":61,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_postal_zone","Description":"Shipper Postal Code","Sequence":62,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs_line0","Description":"Shipper Address Line 0","Sequence":63,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs_line1","Description":"Shipper Address Line 1","Sequence":64,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs_line2","Description":"Shipper Address Line 2","Sequence":65,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_country","Description":"Shipper Country Code","Sequence":66,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"ccty","RefersTo":"country"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_cste","Description":"Shipper State Code","Sequence":67,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"code","RefersTo":"state_codes"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"frm1","Description":"Reference No of Customs form No 1, 9, etc","Sequence":68,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"frm2","Description":"Reference Number of Customs Form No.2","Sequence":69,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"rate","Description":"Currency Exchange Rate","Sequence":70,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tote","Description":"Total Excluding Tax","Sequence":71,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"toti","Description":"Total Including Tax","Sequence":72,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tott","Description":"Total Tax Amount","Sequence":73,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pamt","Description":"PrePayment Amount","Sequence":74,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pydt","Description":"PrePayment Date","Sequence":75,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pytm","Description":"PrePayment Time","Sequence":76,"DataType":"DateTime","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pref","Description":"PrePayment Reference Number","Sequence":77,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tpat","Description":"Total Payable Amount","Sequence":78,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tnat","Description":"Total Net Amount","Sequence":79,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tdis","Description":"Total Discount Value","Sequence":80,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tfee","Description":"Total Fee / Charge Amount","Sequence":81,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ramt","Description":"Rounding Amount","Sequence":82,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ttax","Description":"Total Taxable Amount Per Tax Type","Sequence":83,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ttat","Description":"Total Tax Amount Per Tax Type","Sequence":84,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adis","Description":"Invoice Additional Discount Amount","Sequence":85,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adis_reason","Description":"Invoice Additional Discount Amount Reason","Sequence":86,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"afee","Description":"Invoice Additional Fee Amount","Sequence":87,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"afee_reason","Description":"Invoice Additional Fee Amount Reason","Sequence":88,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"fbil","Description":"Frequency of Billing","Sequence":89,"DataType":"String","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"org_e_inv_no","Description":"Original E-Invoice Reference Number","Sequence":90,"DataType":"String","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"term","Description":"Payment Term","Sequence":91,"DataType":"String","Length":120,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bref","Description":"Bill Reference Number","Sequence":92,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ftrd","Description":"Free Trade Agreement(FTA) Information","Sequence":93,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"anum","Description":"Authorisation Number for Certified Exporter","Sequence":94,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg","Description":"Details of other charges","Sequence":95,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg_amnt","Description":"Details of other charges - Amount","Sequence":96,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg_reason","Description":"Details of other charges - Reason","Sequence":97,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"det_tax","Description":"Detail of Tax Exemption(Invoice Level)","Sequence":98,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bsdt","Description":"Billing Period Start Date","Sequence":99,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bedt","Description":"Billing Period End Date","Sequence":100,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amnt_ex","Description":"Amount Exemption from Tax(Invoice Level)","Sequence":101,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dshp","Description":"Dropshipment","Sequence":102,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"submission_uid","Description":"LHDN Submission UID","Sequence":103,"DataType":"String","Length":26,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"doc_uuid","Description":"LHDN UUID","Sequence":104,"DataType":"String","Length":26,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"esta","Description":"LHDN Status","Sequence":105,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"lhdn_status","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"err_msg","Description":"Error Message","Sequence":106,"DataType":"String","Length":600,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"e_invdt","Description":"E-Invoice Date \u0026 Time","Sequence":107,"DataType":"DateTime","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"einv_stat","Description":"E-Invoice Status","Sequence":108,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"einv_status","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"etim","Description":"LHDN Validated Date \u0026 Time","Sequence":109,"DataType":"DateTime","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"modi_stat","Description":"Header Modification Status","Sequence":110,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"m_status","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"src_type","Description":"Sales Type","Sequence":111,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"src_inv_type","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"inv_pdf","Description":"PDF Resource ID","Sequence":112,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference0","Description":"LN Invoice Date","Sequence":113,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference1","Description":"Reference 1","Sequence":114,"DataType":"String","Length":500,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference2","Description":"Reference 2","Sequence":115,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference3","Description":"Reference 3","Sequence":116,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference4","Description":"Reference 4","Sequence":117,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference5","Description":"Reference 5","Sequence":118,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference6","Description":"Reference 6","Sequence":119,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference7","Description":"Reference 7","Sequence":120,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference8","Description":"Reference 8","Sequence":121,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference9","Description":"Reference 9","Sequence":122,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_code","Description":"Supplier Code","Sequence":123,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"qr_code","Description":"QR Code","Sequence":124,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"org_doc_uuid","Description":"Original Document UUID","Sequence":125,"DataType":"String","Length":26,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"einv_version","Description":"E-Invoice Version","Sequence":126,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[{"Name":"einv_header","Sequence":1,"Columns":["dataset"],"RefersTo":"data_set","ReferenceFields":["data_set"],"OnDelete":"RESTRICT","OnUpdate":"RESTRICT"}],"Indices":[],"SharedTable":false,"CreatedBy":"malai","ModifiedBy":"malai","CreatedDate":"2024-06-26T18:20:00.911604+08:00","ModifiedDate":"2025-01-24T14:36:09.332464+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{einv_header}} "},"BeforeSave":"//**** Hook before_save Created by malai on 24-Apr-2024 11:08:36\nvar einvois = require(\"./scripts/Business_Objects/createEinvoice\")\nfunction before_save(){\n\tif (jscall.mode == \"insert\"){\n\t\t// jscall.input.e_inv_no = jscall.input.e_inv_no.toUpperCase() // convert to uppercase\n\t\tentity_ds = CralDB.QueryByComp(`select skip_einv_no_iter from {{entity_data_set}} where sup_company=${jscall.input.comp} and data_set='${jscall.input.dataset}'`, jscall.company)\n\t\tif (entity_ds.length == 0){\n\t\t\tjscall_error = `Entity Data Set is Not Maintained for ${jscall.input.comp} - ${jscall.input.dataset}`\n\t\t\treturn false;\n\t\t}\n\t\tif (!jscall.input.e_inv_no){\n\t\t\titer_num = CralDB.QueryByComp(\"select comp,tran,idoc,src_type from {{einv_header}} where comp='$1' and tran='$2' and idoc=$3\", jscall.company, jscall.input.comp, jscall.input.tran, parseInt(jscall.input.idoc))\n\t\t\tfor (i=0;i\u003citer_num.length;i++){\n\t\t\t\tif (jscall.input.src_type == iter_num[i].src_type){\n\t\t\t\t\tjscall_error = \"Record Alreday Exists\"\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tjscall.input.e_inv_no = jscall.input.tran + jscall.input.idoc.toString()\n\n\t\t\tif (!entity_ds[0].skip_einv_no_iter){\n\t\t\t\titeration = (iter_num?.length + 1).toString()\n\t\t\t\twhile(iteration.length \u003c 2){\n\t\t\t\t\titeration = \"0\" + iteration\n\t\t\t\t}\n\t\t\t\tjscall.input.e_inv_no = jscall.input.e_inv_no + \"_\" + iteration\n\t\t\t}\n\t\t}\n\t\tjscall.input.e_invdt = einvois.getCurrentDateTimeUTC()\n\t\t// fin_fld = [\"rate\", \"tote\", \"toti\", \"tott\", \"pamt\", \"tpat\", \"tnat\", \"tdis\", \"tfee\", \"ramt\", \"ttax\", \"ttat\", \"adis\", \"afee\", \"ochg_amnt\", \"amnt_ex\"]\n\t\t// for (i=0;i\u003cfin_fld?.length;i++){\n\t\t// \tjscall.input[fin_fld[i]] = parseFloat(jscall.input[fin_fld[i]].toFixed(2))\n\t\t// }\n\t}\n\tdebug(\"out\" + jscall.input.e_inv_no)\n\tif (jscall.input.idoc != \"\" \u0026\u0026 jscall.input.idoc != null \u0026\u0026 jscall.input.idoc != undefined){\n\t\tjscall.input.idoc = jscall.input.idoc.toString()\n\t}\n\t// isPDFAvil = CralDB.QueryByComp(\"select inv_pdf from {{einv_header}} where e_inv_no='$1'\", jscall.company, jscall.input.e_inv_no)\n\t// println(isPDFAvil)\n\t// if (isPDFAvil.length != 0){\n\t// \tif (jscall.input.einv_stat == \"30\" \u0026\u0026 (isPDFAvil[0].inv_pdf == \"\" || isPDFAvil[0].inv_pdf == null || isPDFAvil[0].inv_pdf == undefined)){\n\t// \t\tprintln(\"IN\")\n\t// \t\tpdf = printPDF.printReportLayout(jscall.input.e_inv_no)\n\t// \t\tif (pdf.result != null || pdf.result != undefined){\n\t// \t\t\tif (pdf.result == \"\"){\n\t// \t\t\t\tjscall_error = pdf.error\n\t// \t\t\t\treturn false\n\t// \t\t\t}\n\t// \t\t\tjscall.input.inv_pdf = pdf.result\n\t// \t\t}\n\t// \t}\n\t// }\n\treturn true;\n}","AfterSave":"","BeforeDelete":"//**** Hook before_delete Created by malai on 02-May-2024 13:17:13\n\t\t\tfunction before_delete(){\n\t\t\t\t// jscall_error = JSON.stringify(jscall.input)\n\t\t\t\tprintln(jscall.input)\n\t\t\t\t// return false\n\t\t\t\tline_records = CralDB.QueryByComp(\"select e_inv_no,line from {{einv_lines}} where e_inv_no='$1'\", jscall.company, jscall.input.e_inv_no);\n\t\t\t\tfor (let i = 0; i \u003c line_records.length; i++){\n\t\t\t\t\tret = CralDB.PublishTopic(\"einv_lines\", jscall.company, \"Delete\", line_records[i], jscall.user)\n\t\t\t\t\tif (ret.Success == false){\n\t\t\t\t\t\tjscall_error = ret.Message\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvld_records = jscall.RunQuery(`DELETE FROM einv_validation_${jscall.company.toString().padStart(4, '0')} where einv_code='${jscall.input.e_inv_no}'`)\n\t\t\t\tif (vld_records.error){\n\t\t\t\t\tjscall_error = vld_records.error;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t  return true;\n\t\t\t}","AfterDelete":""},{"Topic":{"Name":"entity_data_set","Description":"Entity Data Set","Keys":["sup_company","data_set"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"sup_company","Description":"Supplier Company","Sequence":1,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"sup_company","RefersTo":"supplier_companies"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"data_set","Description":"Data Set","Sequence":2,"DataType":"String","Length":10,"IsKey":true,"IndexSequence":2,"Props":{"List":false,"ListID":"","ReferenceField":"data_set","RefersTo":"data_set"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"skip_master","Description":"Skip Master","Sequence":3,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"skip_einv_no_iter","Description":"Skip E-Invoice Number Iteration","Sequence":4,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sum_line250","Description":"Sum Line Over 250","Sequence":5,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sum_lineb250","Description":"Sum Line within 250","Sequence":6,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"skip_duplicate_files","Description":"Skip Duplicate Files","Sequence":7,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"user_getvalid","Description":"User Based on Get Validation","Sequence":8,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"user_submission","Description":"User Based on Get Submission","Sequence":9,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"user_access_control","Description":"User Access Control","Sequence":10,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[{"Name":"entity_data_set","Sequence":1,"Columns":["data_set"],"RefersTo":"data_set","ReferenceFields":["data_set"],"OnDelete":"RESTRICT","OnUpdate":"RESTRICT"},{"Name":"entity_data_set","Sequence":2,"Columns":["sup_company"],"RefersTo":"supplier_companies","ReferenceFields":["sup_company"],"OnDelete":"RESTRICT","OnUpdate":"RESTRICT"}],"Indices":[],"SharedTable":true,"CreatedBy":"parthi","ModifiedBy":"parthi","CreatedDate":"2024-06-15T10:21:16.338548+08:00","ModifiedDate":"2025-01-07T19:02:51.389699+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{entity_data_set}} "},"BeforeSave":"//**** Hook before_save Created by malai on 12-Sep-2024 15:09:22\n\t\t\tfunction before_save(){\n\t\t\t  return true;\n\t\t\t}","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"inv_interim_excl","Description":"Invoice Interim - Excel","Keys":["inv_no","line"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"inv_no","Description":"E-Invoice Number","Sequence":1,"DataType":"String","Length":50,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"line","Description":"Invoice Line Number","Sequence":2,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":2,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"comp","Description":"Supplier Code","Sequence":3,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tran","Description":"Finance Type","Sequence":4,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"idoc","Description":"Invoice Number","Sequence":5,"DataType":"Integer","Length":8,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"doct","Description":"Invoice Type","Sequence":6,"DataType":"String","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccur","Description":"Invoice Currency Code","Sequence":7,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"paym","Description":"Payment Mode","Sequence":8,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cvat","Description":"Tax Type","Sequence":9,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sctg","Description":"Sales Category","Sequence":10,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"sales_catg","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"data_set","Description":"Dataset","Sequence":11,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"line_cnt","Description":"Line Count","Sequence":12,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"s_line_cnt","Description":"Source Line Count","Sequence":13,"DataType":"Integer","Length":4,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_name","Description":"Supplier Name","Sequence":14,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_cont_num","Description":"Supplier Contact Number","Sequence":15,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_email","Description":"Supplier Mail","Sequence":16,"DataType":"String","Length":320,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_sst_reg","Description":"Supplier SST Registration","Sequence":17,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_ttx_no","Description":"Supplier Tourism Tax Number","Sequence":18,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_tin","Description":"Supplier TIN","Sequence":19,"DataType":"String","Length":14,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_brn","Description":"Supplier Registration Number","Sequence":20,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_nric","Description":"Supplier NRIC","Sequence":21,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_passport","Description":"Supplier Passport Number","Sequence":22,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_reg_army","Description":"Supplier Army Identification","Sequence":23,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_badsca","Description":"Supplier Business Activity","Sequence":24,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_bank_acc","Description":"Supplier Bank Account Number","Sequence":25,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_msic","Description":"Supplier MSIC Code","Sequence":26,"DataType":"String","Length":5,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs","Description":"Supplier Address Code","Sequence":27,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_city","Description":"Supplier City","Sequence":28,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_postal_zone","Description":"Supplier Postal Code","Sequence":29,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs_line0","Description":"Supplier Address Line 0","Sequence":30,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs_line1","Description":"Supplier Address Line 1","Sequence":31,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_adrs_line2","Description":"Supplier Address Line 2","Sequence":32,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_country","Description":"Supplier Country Code","Sequence":33,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"sup_cste","Description":"Supplier State Code","Sequence":34,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"inv_bp","Description":"Buyer Code","Sequence":35,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_name","Description":"Buyer Name","Sequence":36,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_cont_num","Description":"Buyer Contact Number","Sequence":37,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_email","Description":"Buyer Mail","Sequence":38,"DataType":"String","Length":320,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_sst_reg","Description":"Buyer SST Registration","Sequence":39,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_tin","Description":"Buyer TIN","Sequence":40,"DataType":"String","Length":17,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_brn","Description":"Buyer Registration Number","Sequence":41,"DataType":"String","Length":14,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_nric","Description":"Buyer NRIC","Sequence":42,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_passport","Description":"Buyer Passport","Sequence":43,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_reg_army","Description":"Buyer Army","Sequence":44,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs","Description":"Buyer Address","Sequence":45,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_city","Description":"Buyer City","Sequence":46,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_postal_zone","Description":"Buyer Postal Code","Sequence":47,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs_line0","Description":"Buyer Address Line 0","Sequence":48,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs_line1","Description":"Buyer Address Line 1","Sequence":49,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_adrs_line2","Description":"Buyer Address Line 2","Sequence":50,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_country","Description":"Buyer Country Code","Sequence":51,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"buy_cste","Description":"Buyer State Code","Sequence":52,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dtrm","Description":"Incoterms","Sequence":53,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_bp","Description":"Shipper Code","Sequence":54,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_name","Description":"Shipper Name","Sequence":55,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_tin","Description":"Shipper TIN","Sequence":56,"DataType":"String","Length":14,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_brn","Description":"Shipper Registration Number","Sequence":57,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_nric","Description":"Shipper NRIC","Sequence":58,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_passport","Description":"Shipper Passport","Sequence":59,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_reg_army","Description":"Shipper Army","Sequence":60,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs","Description":"Shipper Address Code","Sequence":61,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_city","Description":"Shipper City","Sequence":62,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_postal_zone","Description":"Shipper Postal Code","Sequence":63,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs_line0","Description":"Shipper Address Line 0","Sequence":64,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs_line1","Description":"Shipper Address Line 1","Sequence":65,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_adrs_line2","Description":"Shipper Address Line 2","Sequence":66,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_country","Description":"Shipper Country Code","Sequence":67,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ship_cste","Description":"Shipper State Code","Sequence":68,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"frm1","Description":"Reference No of Customs form No 1, 9, etc","Sequence":69,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"frm2","Description":"Reference Number of Customs Form No.2","Sequence":70,"DataType":"String","Length":12,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"rate","Description":"Currency Exchange Rate","Sequence":71,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tote","Description":"Total Excluding Tax","Sequence":72,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"toti","Description":"Total Including Tax","Sequence":73,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tott","Description":"Total Tax Amount","Sequence":74,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pamt","Description":"PrePayment Amount","Sequence":75,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pydt","Description":"PrePayment Date","Sequence":76,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pytm","Description":"PrePayment Time","Sequence":77,"DataType":"DateTime","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pref","Description":"PrePayment Reference Number","Sequence":78,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tpat","Description":"Total Payable Amount","Sequence":79,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tnat","Description":"Total Net Amount","Sequence":80,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tdis","Description":"Total Discount Value","Sequence":81,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tfee","Description":"Total Fee / Charge Amount","Sequence":82,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ramt","Description":"Rounding Amount","Sequence":83,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ttax","Description":"Total Taxable Amount Per Tax Type","Sequence":84,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ttat","Description":"Total Tax Amount Per Tax Type","Sequence":85,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adis","Description":"Invoice Additional Discount Amount","Sequence":86,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"adis_reason","Description":"Invoice Additional Discount Amount Reason","Sequence":87,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"afee","Description":"Invoice Additional Fee Amount","Sequence":88,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"afee_reason","Description":"Invoice Additional Fee Amount Reason","Sequence":89,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"fbil","Description":"Frequency of Billing","Sequence":90,"DataType":"String","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"org_e_inv_no","Description":"Original E-Invoice Reference Number","Sequence":91,"DataType":"String","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"term","Description":"Payment Term","Sequence":92,"DataType":"String","Length":120,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bref","Description":"Bill Reference Number","Sequence":93,"DataType":"String","Length":150,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ftrd","Description":"Free Trade Agreement(FTA) Information","Sequence":94,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"anum","Description":"Authorisation Number for Certified Exporter","Sequence":95,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg","Description":"Details of other charges","Sequence":96,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg_amnt","Description":"Details of other charges - Amount","Sequence":97,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ochg_reason","Description":"Details of other charges - Reason","Sequence":98,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"det_tax","Description":"Detail of Tax Exemption(Invoice Level)","Sequence":99,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bsdt","Description":"Billing Period Start Date","Sequence":100,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"bedt","Description":"Billing Period End Date","Sequence":101,"DataType":"Date","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amnt_ex","Description":"Amount Exemption from Tax(Invoice Level)","Sequence":102,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dshp","Description":"Dropshipment","Sequence":103,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"cuni","Description":"Unit of Measure","Sequence":104,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccty","Description":"Country of Origin","Sequence":105,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"clas_grp","Description":"Classification Group","Sequence":106,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"class_map","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"clas","Description":"Classification","Sequence":107,"DataType":"String","Length":3,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"item","Description":"Item Code","Sequence":108,"DataType":"String","Length":47,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"item_desc","Description":"Item Description","Sequence":109,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pric","Description":"Price","Sequence":110,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"pvat","Description":"Tax Rate","Sequence":111,"DataType":"Float","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"txai","Description":"Tax Amount","Sequence":112,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"tex_cer_no","Description":"Tax Exemption Certificate Number","Sequence":113,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amtt","Description":"Amount","Sequence":114,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"stot","Description":"Sub Total","Sequence":115,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"amti","Description":"Line Invoice Amount","Sequence":116,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dqua","Description":"Delivered Quantity","Sequence":117,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"disc","Description":"Discount %","Sequence":118,"DataType":"Float","Length":6,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ldai","Description":"Line Discount Amount","Sequence":119,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ccde","Description":"Product Tariff","Sequence":120,"DataType":"String","Length":25,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"feer","Description":"Fee / Charge Rate","Sequence":121,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"feea","Description":"Fee / Charge Amount","Sequence":122,"DataType":"Float","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"disc_reason","Description":"Discount Reason","Sequence":123,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"fee_reason","Description":"Fees Reason","Sequence":124,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"fld_category","Description":"Field Category","Sequence":125,"DataType":"String","Length":30,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"fld_category","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"src_type","Description":"Sales Type","Sequence":126,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":true,"ListID":"src_inv_type","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"temp_code","Description":"Template Code","Sequence":127,"DataType":"String","Length":9,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"mandatory","Description":"Mandatory Fields","Sequence":128,"DataType":"Json","Length":200,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"unmapped","Description":"Unmapped Data","Sequence":129,"DataType":"Json","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"upload_id","Description":"Upload ID","Sequence":130,"DataType":"Integer","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"upload_id","RefersTo":"uploaded_file_details"},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"org_doc_uuid","Description":"Original Document UUID","Sequence":131,"DataType":"String","Length":26,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"err_msg","Description":"Error message","Sequence":132,"DataType":"String","Length":400,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference1","Description":"Reference1","Sequence":133,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference2","Description":"Reference2","Sequence":134,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference3","Description":"Reference3","Sequence":135,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference4","Description":"Reference4","Sequence":136,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference5","Description":"Reference5","Sequence":137,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference6","Description":"Reference6","Sequence":138,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference7","Description":"Reference7","Sequence":139,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference8","Description":"Reference8","Sequence":140,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"reference9","Description":"Reference9","Sequence":141,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"l_cvat","Description":"Line Tax Type","Sequence":142,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[{"Name":"inv_interim_excl","Sequence":1,"Columns":["data_set"],"RefersTo":"data_set","ReferenceFields":["data_set"],"OnDelete":"RESTRICT","OnUpdate":"RESTRICT"}],"Indices":[{"Topic":"inv_interim_excl","IndexNo":1,"Description":"template_code","Fields":["temp_code","inv_no","line"],"Unique":false,"Cascade":false}],"SharedTable":false,"CreatedBy":"malai","ModifiedBy":"saravanan","CreatedDate":"2024-07-23T12:58:01.882613+08:00","ModifiedDate":"2025-01-24T14:36:09.54366+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{inv_interim_excl}} "},"BeforeSave":"//**** Hook before_save Created by malai on 29-Jul-2024 15:54:33\nfunction before_save(){\n\t// if (jscall.mode == \"insert\"){\n\t// \tjscall.input.inv_no = jscall.input.inv_no.toUpperCase() // convert to uppercase\n\t// }\n\tif (!CralDB.QueryByComp(`select line from {{inv_interim_excl}} where inv_no='${jscall.input.inv_no}' and line=${jscall.input.line}`, jscall.company).length){\n\t\tentity_ds = CralDB.QueryByComp(`select skip_master,skip_einv_no_iter from {{entity_data_set}} where sup_company=${jscall.input.comp} and data_set='${jscall.input.data_set}'`, jscall.company)\n\t\tif (entity_ds.length == 0){\n\t\t\tjscall_error = `Entity Data Set is Not Maintained for ${jscall.input.comp} - ${jscall.input.data_set}`\n\t\t\treturn false;\n\t\t}\n\t\tif (!jscall.input.inv_no){\n\t\t\titer_num = CralDB.QueryByComp(\"select src_type,DISTINCT inv_no from {{inv_interim_excl}} where comp=$1 and tran='$2' and idoc=$3\", jscall.company, jscall.input.comp, jscall.input.tran, parseInt(jscall.input.idoc))\n\t\t\tfor (let i = 0; i \u003c iter_num.length; i++) {\n\t\t\t\tif (jscall.input.src_type === iter_num[i].src_type) {\n\t\t\t\t\tjscall.input.inv_no = iter_num[i].inv_no;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!jscall.input.inv_no) {\n\t\t\t\tjscall.input.inv_no = jscall.input.tran + jscall.input.idoc;\n\t\t\t\tif (!entity_ds[0].skip_einv_no_iter) {\n\t\t\t\t\tjscall.input.inv_no += `_${(iter_num.length + 1).toString().padStart(2, '0')}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if (jscall.mode == \"insert\"){\n\t\t\t\tjscall.input.inv_no = jscall.input.inv_no.toUpperCase() // convert to uppercase\n\t\t\t// }\n\n\t\t}\n\t} else {\n\t\tif (!jscall.input.comp || !jscall.input.data_set){\n\t\t\trec = CralDB.QueryByComp(`select comp,data_set from {{inv_interim_excl}} where inv_no='${jscall.input.inv_no}'`, jscall.company)\n\t\t\tjscall.input.comp = rec[0].comp\n\t\t\tjscall.input.data_set = rec[0].data_set\n\t\t}\n\t\tentity_ds = CralDB.QueryByComp(`select skip_master,skip_einv_no_iter from {{entity_data_set}} where sup_company=${jscall.input.comp} and data_set='${jscall.input.data_set}'`, jscall.company)\n\t\tif (entity_ds.length == 0){\n\t\t\tjscall_error = `Entity Data Set is Not Maintained for ${jscall.input.comp} - ${jscall.input.data_set}`\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (jscall.input.idoc != \"\" \u0026\u0026 jscall.input.idoc != null \u0026\u0026 jscall.input.idoc != undefined){\n\t\tjscall.input.idoc = jscall.input.idoc.toString()\n\t}\n\tisSubmitted = CralDB.QueryByComp(`select einv_stat from {{einv_header}} where e_inv_no='${jscall.input.inv_no}'`, jscall.company)\n\tif (isSubmitted?.length != 0 \u0026\u0026 isSubmitted[0]?.einv_stat != \"60\"){\n\t\tjscall_error = \"Invoice Already Submitted\" // Message used for tracking in Excel upload. Message was handled in docUpload.\n\t\treturn false;\n\t}\n\tif (!entity_ds[0].skip_master){\n\t\tbuyer_update()\n\t\tadrs_update()\n\t\t\n\t\tif (jscall.input?.ccur){\n\t\t\tmaster_update = masterDataUpdate(\"currency_codes\", \"src_ccur\", jscall.input.ccur)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"Currency\", master_update)\n\t\t}\n\t\tif (jscall.input?.cvat){\n\t\t\tmaster_update = masterDataUpdate(\"tax_types\", \"src_ttype\", jscall.input.cvat)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"TaxTypes\", master_update)\n\t\t}\n\t\tif (jscall.input?.paym){\n\t\t\tmaster_update = masterDataUpdate(\"payment_modes\", \"src_paym\", jscall.input.paym)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"PaymentModes\", master_update)\n\t\t}\n\t\tif (jscall.input?.sup_country){\n\t\t\tmaster_update = masterDataUpdate(\"country_codes\", \"src_ccty\", jscall.input.sup_country)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"Country\", master_update)\n\t\t}\n\t\tif (jscall.input?.buy_country){\n\t\t\tmaster_update = masterDataUpdate(\"country_codes\", \"src_ccty\", jscall.input.buy_country)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"Country\", master_update)\n\t\t}\n\t\tif (jscall.input?.ship_country){\n\t\t\tmaster_update = masterDataUpdate(\"country_codes\", \"src_ccty\", jscall.input.ship_country)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"Country\", master_update)\n\t\t}\n\t\tif (jscall.input?.cuni){\n\t\t\tmaster_update = masterDataUpdate(\"uom_codes\", \"src_unit\", jscall.input.cuni)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"UOM\", master_update)\n\t\t}\n\t\tif (jscall.input?.sup_cste \u0026\u0026 jscall.input?.sup_country){\n\t\t\tmaster_update = masterDataUpdate(\"map_state_codes\", \"src_ccty\", jscall.input.sup_country, \"src_cste\", jscall.input.sup_cste)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"State\", master_update)\n\t\t}\n\t\tif (jscall.input?.buy_cste \u0026\u0026 jscall.input?.buy_country){\n\t\t\tmaster_update = masterDataUpdate(\"map_state_codes\", \"src_ccty\", jscall.input.buy_country, \"src_cste\", jscall.input.buy_cste)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"State\", master_update)\n\t\t}\n\t\tif (jscall.input?.ship_cste \u0026\u0026 jscall.input?.ship_country){\n\t\t\tmaster_update = masterDataUpdate(\"map_state_codes\", \"src_ccty\", jscall.input.ship_country,\"src_cste\",  jscall.input.ship_cste)\n\t\t\tCralUtil.LogInfo(\"ExcelUpload\" ,\"State\", master_update)\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction buyer_update(){\n\tflds = [\n\t\t[\"inv_bp\", \"buy_name\", \"buy_tin\", \"buy_reg_nric\", \"buy_reg_brn\", \"buy_reg_passport\", \"buy_reg_army\", \"buy_sst_reg\", \"buy_email\", \"buy_cont_num\", \"buy_adrs\"],\n\t\t[\"ship_bp\", \"ship_name\", \"ship_tin\", \"ship_reg_nric\", \"ship_reg_brn\", \"ship_reg_passport\", \"ship_reg_army\", \"\", \"\", \"\", \"ship_adrs\"]\n\t]\n\tfor (i=0; i\u003cflds.length ; i++){\n\t\tif (flds[i].every(key =\u003e jscall.input.hasOwnProperty(key))){\n\t\t\tif (!jscall.input[flds[i][0]]){\n\t\t\t\tbuyer_code = findData(\"buyer_companies\", \"buy_code\",\n\t\t\t\t[\"buy_name\", \"buy_tin\", \"buy_reg_nric\", \"buy_reg_brn\", \"buy_reg_passport\", \"buy_reg_army\", \"buy_sst_reg\", \"buy_email\", \"buy_cont_num\", \"buy_adrs\"],\n\t\t\t\t[jscall.input[flds[i][1]], jscall.input[flds[i][2]], jscall.input[flds[i][3]], jscall.input[flds[i][4]], jscall.input[flds[i][5]],\n\t\t\t\tjscall.input[flds[i][6]], jscall.input[flds[i][7]], jscall.input[flds[i][8]], jscall.input[flds[i][9]], jscall.input[flds[i][10]]])\n\t\t\t\tif (buyer_code){\n\t\t\t\t\tjscall.input[flds[i][0]] = buyer_code\n\t\t\t\t} else {\n\t\t\t\t\tjscall.input[flds[i][0]] = getNewCode(\"EBP\", \"buyer_companies\", \"buy_code\")\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuyer_update = masterDataUpdate(\"buyer_companies\", \"buy_code\", jscall.input[flds[i][0]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_name\", jscall.input[flds[i][1]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_tin\", jscall.input[flds[i][2]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_reg_nric\", jscall.input[flds[i][3]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_reg_brn\", jscall.input[flds[i][4]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_reg_passport\", jscall.input[flds[i][5]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_reg_army\", jscall.input[flds[i][6]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_sst\", (jscall.input[flds[i][7]])?true:false,\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_sst_reg\", jscall.input[flds[i][7]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_email\", jscall.input[flds[i][8]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_cont_num\", jscall.input[flds[i][9]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_adrs\", jscall.input[flds[i][10]],\n\t\t\t\t\t\t\t\t\t\t\t\t\"buy_comp_active\", true)\n\t\t\t// CralUtil.LogInfo(\"ExcelUpload\", \"Buyer Companies\", buyer_update)\n\t\t}\n\t}\n}\n\nfunction adrs_update(){\n\tadrs = []\n\tflds = [\n\t\t[\"sup_adrs\",\"sup_adrs_line0\", \"sup_adrs_line1\", \"sup_adrs_line2\", \"sup_city\", \"sup_postal_zone\", \"sup_cste\", \"sup_country\"], \n\t\t[\"buy_adrs\",\"buy_adrs_line0\", \"buy_adrs_line1\", \"buy_adrs_line2\", \"buy_city\", \"buy_postal_zone\", \"buy_cste\", \"buy_country\"], \n\t\t[\"ship_adrs\",\"ship_adrs_line0\", \"ship_adrs_line1\", \"ship_adrs_line2\", \"ship_city\", \"ship_postal_zone\", \"ship_cste\", \"ship_country\"]\n\t]\n\tfor (i=0; i\u003c flds.length; i++){\n\t\tif (flds[i].every(key =\u003e jscall.input.hasOwnProperty(key))){\n\t\t\tif (jscall.input[flds[i][4]] \u0026\u0026 jscall.input[flds[i][6]] \u0026\u0026 jscall.input[flds[i][7]]){\n\t\t\t\tif (!jscall.input[flds[i][0]]){\n\t\t\t\t\taddr_code = findData(\"address_master\", \"adrs_code\", \n\t\t\t\t\t[\"adrs_line0\", \"adrs_line1\", \"adrs_line2\", \"postal_zone\", \"adrs_city\", \"adrs_state\", \"adrs_country\"], \n\t\t\t\t\t[jscall.input[flds[i][1]], jscall.input[flds[i][2]], jscall.input[flds[i][3]], jscall.input[flds[i][5]], jscall.input[flds[i][4]], jscall.input[flds[i][6]], jscall.input[flds[i][7]]])\n\t\t\t\t\tif (addr_code){\n\t\t\t\t\t\tjscall.input[flds[i][0]] = addr_code\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjscall.input[flds[i][0]] = getNewCode(\"EADR\", \"address_master\", \"adrs_code\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tadrs.push(masterDataUpdate(\"address_master\", \"adrs_code\", jscall.input[flds[i][0]],\n\t\t\t\t\t\t\t\t\t\t\t\"adrs_line0\", jscall.input[flds[i][1]],\n\t\t\t\t\t\t\t\t\t\t\t\"adrs_line1\", jscall.input[flds[i][2]],\n\t\t\t\t\t\t\t\t\t\t\t\"adrs_line2\", jscall.input[flds[i][3]],\n\t\t\t\t\t\t\t\t\t\t\t\"postal_zone\", jscall.input[flds[i][5]],\n\t\t\t\t\t\t\t\t\t\t\t\"adrs_city\", jscall.input[flds[i][4]],\n\t\t\t\t\t\t\t\t\t\t\t\"adrs_state\", jscall.input[flds[i][6]],\n\t\t\t\t\t\t\t\t\t\t\t\"adrs_country\", jscall.input[flds[i][7]]))\n\t\t\t}\n\t\t}\n\t}\n\treturn adrs\n}\n\nfunction getNewCode(string, table, field)\n{\n    max_val = CralDB.QueryByComp(`select MAX(${field}) from {{${table}}} where LEFT(${field},${string.length})='${string}'`, jscall.company)\n\tif (max_val[0]?.max){\n\t\treturn string + ((parseInt((max_val[0].max).slice(string.length)) + 1).toString()).padStart(max_val[0].max.length - string.length, '0')\n\t} else {\n\t\treturn string + (\"1\").padStart(9 - string.length, '0')\n\t}\n}\n\nfunction findData(topic, key_field, tbl_fields, tbl_values){\n\twhere_cond = \"\"\n\tfor (j = 0; j \u003c Math.min(tbl_fields.length, tbl_values.length); j++){\n\t\tif (tbl_values[j]){\n\t\t\tif (!where_cond){\n\t\t\t\twhere_cond = `${tbl_fields[j]}='${tbl_values[j]}'`\n\t\t\t} else {\n\t\t\t\twhere_cond = `${where_cond} and ${tbl_fields[j]}='${tbl_values[j]}'`\n\t\t\t}\n\t\t}\n\t}\n\tquery = `SELECT ${key_field} FROM {{${topic}}} WHERE ` + where_cond\n\tqret = CralDB.QueryByComp(query, jscall.company)\n\t// if (qret?.length == 1){\n\tif (qret?.length != 0){\n\t\treturn qret[0][key_field]\n\t}\n\treturn \"\"\n}\n\nfunction masterDataUpdate(topic, ...args){\n\tpayload = {\n\t\t\"data_set\": jscall.input.data_set\n\t}\n\tfor (i=0;i\u003cargs.length;i++){\n\t\tif (args[i+1]){\n\t\t\tpayload[args[i]] = args[++i]\n\t\t} else {\n\t\t\ti += 1\n\t\t}\n\t}\n\tCralUtil.LogInfo(\"Excel-Upload Master Data: Payload\", topic, payload)\n\treturn CralDB.PublishTopic(topic, jscall.company, \"Upsert\", payload, jscall.user)\n}","AfterSave":"//**** Hook after_save Created by malai on 01-Aug-2024 13:59:06\n\nvar einvois = require(\"./scripts/Business_Objects/createEinvoice\")\nfunction after_save(){\n\tif (jscall.input?.data_set){\n\t\t// CralUtil.LogInfo(\"ExcelUpload\" ,\"Buyer\", (buyer_update()))\n\t\t// CralUtil.LogInfo(\"ExcelUpload\" ,\"Address\", (adrs_update()))\n\t\t// if (jscall.input?.ccur){\n\t\t// \tCralUtil.LogInfo(\"ExcelUpload\" ,\"Currency\", (masterUpdate(\"currency_codes\", \"src_ccur\", jscall.input.ccur)))\n\t\t// }\n\t\t// if (jscall.input?.cvat){\n\t\t// \tCralUtil.LogInfo(\"ExcelUpload\" ,\"TaxTypes\", (masterUpdate(\"tax_types\", \"src_ttype\", jscall.input.cvat)))\n\t\t// }\n\t\t// if (jscall.input?.paym){\n\t\t// \tCralUtil.LogInfo(\"ExcelUpload\" ,\"PaymentModes\", (masterUpdate(\"payment_modes\", \"src_paym\", jscall.input.paym)))\n\t\t// }\n\t\t// if (jscall.input?.sup_country){\n\t\t// \tCralUtil.LogInfo(\"ExcelUpload\" ,\"Country\", (masterUpdate(\"country_codes\", \"src_ccty\", jscall.input.sup_country)))\n\t\t// }\n\t\t// if (jscall.input?.buy_country){\n\t\t// \tCralUtil.LogInfo(\"ExcelUpload\" ,\"Country\", (masterUpdate(\"country_codes\", \"src_ccty\", jscall.input.buy_country)))\n\t\t// }\n\t\t// if (jscall.input?.ship_country){\n\t\t// \tCralUtil.LogInfo(\"ExcelUpload\" ,\"Country\", (masterUpdate(\"country_codes\", \"src_ccty\", jscall.input.ship_country)))\n\t\t// }\n\t}\n\treturn true;\n}\n\n// function ccur_update(){\n// \tpayload_ccur = {\n// \t\t\"data_set\": jscall.input.data_set,\n// \t\t\"src_ccur\": jscall.input.ccur\n// \t}\n// \treturn CralDB.PublishTopic(\"currency_codes\", jscall.company, \"Upsert\", payload_ccur, jscall.user)\n// }\n\n// function masterUpdate(topic, fld, value){\n// \tpayload = {\n// \t\t\"data_set\": jscall.input.data_set\n// \t}\n// \tpayload[fld] = value\n// \treturn CralDB.PublishTopic(topic, jscall.company, \"Upsert\", payload, jscall.user)\n// }\n\n// function buyer_update(){\n// \tif (jscall.input?.inv_bp \u0026\u0026 jscall.input.inv_bp == \"\u003cnil\u003e\"){\n// \t\tinv_bp = jscall.input.inv_bp\n// \t} else {\n// \t\tinv_bp = getNewCode(\"EBP\", \"buyer_companies\", \"buy_code\")\n// \t}\n//     payload_buyer = {\n//         \"data_set\": jscall.input.data_set,\n//         \"buy_code\": inv_bp,\n//         \"buy_name\": jscall.input.buy_name,\n//         \"buy_tin\": jscall.input.buy_tin,\n//         \"buy_reg_nric\": jscall.input.buy_reg_nric,\n//         \"buy_reg_brn\": jscall.input.buy_reg_brn,\n//         \"buy_reg_passport\": jscall.input.buy_reg_passport,\n//         \"buy_reg_army\": jscall.input.buy_reg_army,\n//         \"buy_sst\": (jscall.input?.buy_sst_reg)?true:false,\n//         \"buy_sst_reg\": jscall.input.buy_sst_reg,\n//         \"buy_email\": jscall.input.buy_email,\n//         \"buy_cont_num\": jscall.input.buy_cont_num,\n//         \"buy_adrs\": jscall.input.buy_adrs,\n//         \"buy_comp_active\": true,\n//         // \"buy_msic\": \"Lorem\",\n//         // \"buy_badsca\": \"LoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsumLoremipsum\",\n//         // \"buy_ttx\": true,\n//         // \"buy_ttx_reg\": \"LoremipsumLoremip\",\n//         // \"delf\": true,\n//         \"conso_buyer\": false\n//     }\n//     return CralDB.PublishTopic(\"buyer_companies\", jscall.company, \"Upsert\", payload_buyer, jscall.user)\n// }\n\n// function adrs_update(){\n// \tadrs = []\n// \tflds = [\n// \t\t[\"sup_adrs\",\"sup_adrs_line0\", \"sup_adrs_line1\", \"sup_adrs_line2\", \"sup_city\", \"sup_postal_zone\", \"sup_cste\", \"sup_country\"], \n// \t\t[\"buy_adrs\",\"buy_adrs_line0\", \"buy_adrs_line1\", \"buy_adrs_line2\", \"buy_city\", \"buy_postal_zone\", \"buy_cste\", \"buy_country\"], \n// \t\t[\"ship_adrs\",\"ship_adrs_line0\", \"ship_adrs_line1\", \"ship_adrs_line2\", \"ship_city\", \"ship_postal_zone\", \"ship_cste\", \"ship_country\"]\n// \t]\n// \tfor (i=0; i\u003c flds.length; i++){\n// \t\tif (jscall.input[flds[i][4]] \u0026\u0026 jscall.input[flds[i][6]] \u0026\u0026 jscall.input[flds[i][7]]){\n// \t\t\tif (jscall.input[flds[i][0]]){\n// \t\t\t\tadrs_code = jscall.input[flds[i][0]]\n// \t\t\t} else {\n// \t\t\t\tadrs_code = getNewCode(\"EADS\", \"address_master\", \"adrs_code\")\n// \t\t\t}\n// \t\t\tpayload_adrs = {\n// \t\t\t\t\"adrs_nama\": \"\",\n// \t\t\t\t\"adrs_line0\": jscall.input[flds[i][1]],\n// \t\t\t\t\"adrs_line1\": jscall.input[flds[i][2]],\n// \t\t\t\t\"adrs_line2\": jscall.input[flds[i][3]],\n// \t\t\t\t\"postal_zone\": jscall.input[flds[i][5]],\n// \t\t\t\t\"adrs_city\": jscall.input[flds[i][4]],\n// \t\t\t\t\"adrs_state\": jscall.input[flds[i][6]],\n// \t\t\t\t\"adrs_country\": jscall.input[flds[i][7]],\n// \t\t\t\t\"adrs_telp\": \"\",\n// \t\t\t\t\"delf\": false,\n// \t\t\t\t\"data_set\": jscall.input.data_set,\n// \t\t\t\t\"adrs_code\": adrs_code\n// \t\t\t}\n// \t\t\tadrs.push(CralDB.PublishTopic(\"address_master\", jscall.company, \"Upsert\", payload_adrs, jscall.user))\n// \t\t}\n// \t}\n// \treturn adrs\n// }\n\n// function getNewCode(string, table, field)\n// {\n//     max_val = CralDB.QueryByComp(`select MAX(${field}) from {{${table}}} where LEFT(${field},${string.length})='${string}'`, jscall.company)\n// \tif (max_val[0]?.max){\n// \t\treturn string + ((parseInt((max_val[0].max).slice(string.length)) + 1).toString()).padStart(9 - max_val[0].max.length, '0')\n// \t} else {\n// \t\treturn string + (\"1\").padStart(9 - string.length, '0')\n// \t}\n// }","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"msic_codes","Description":"MSIC Code","Keys":["code"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"code","Description":"MSIC Code","Sequence":1,"DataType":"String","Length":5,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"dsca","Description":"MSIC Description","Sequence":2,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"ctgy","Description":"MSIC Category","Sequence":3,"DataType":"String","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":true,"CreatedBy":"saravanan","ModifiedBy":"parthi","CreatedDate":"2024-02-22T15:45:58.236329+08:00","ModifiedDate":"2025-01-21T17:32:55.113203+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{msic_codes}} "},"BeforeSave":"//**** Hook before_save Created by saravanan on 23-Feb-2024 14:01:38\nfunction before_save(){\n\t// if (check_mandatory() != true){\n\t// \treturn false;\n\t// }\n\treturn true;\n}\n\n// function check_mandatory(){\n// \tif (jscall.input.code.trim() == \"\") {\n// \t\tjscall_error = \"MSIC Code is Mandatory\"\n// \t\treturn false;\n// \t} else if (jscall.input.ctgy.trim() == \"\") {\n// \t\tjscall_error = \"MSIC Category is Mandatory\"\n// \t\treturn false;\n// \t}else{\n// \t\treturn true;\n// \t}\n// }","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"uploaded_file_details","Description":"Uploaded File Details","Keys":["upload_id"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"upload_id","Description":"Upload ID","Sequence":1,"DataType":"Integer","Length":10,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"file_name","Description":"File Name","Sequence":2,"DataType":"String","Length":300,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"upload_user","Description":"Uploaded User","Sequence":3,"DataType":"String","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"upload_time","Description":"Uploaded Date \u0026 Time","Sequence":4,"DataType":"DateTime","Length":20,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"revi","Description":"Revision","Sequence":5,"DataType":"Integer","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"temp_code","Description":"Template Code","Sequence":6,"DataType":"String","Length":10,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":false,"CreatedBy":"malai","ModifiedBy":"parthi","CreatedDate":"2024-09-03T09:07:41.349233+08:00","ModifiedDate":"2025-01-07T19:02:51.396338+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{uploaded_file_details}} "},"BeforeSave":"//**** Hook before_save Created by leka on 03-Sep-2024 10:44:51\n\t\t\tfunction before_save(){\n\t\t\t\tupld_id = CralDB.QueryByComp(`select max(upload_id) from {{uploaded_file_details}}`,jscall.company)\n\t\t\t\tjscall.input.upload_id = upld_id[0].max + 1\n\t\t\t  return true;\n\t\t\t}","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"user_access_configuration","Description":"User Access Configurations","Keys":["user_name"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"user_name","Description":"User","Sequence":1,"DataType":"String","Length":100,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"company","Description":"Company","Sequence":2,"DataType":"Json","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"data_set","Description":"Data Set","Sequence":3,"DataType":"Json","Length":50,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":true,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":true,"CreatedBy":"parthi","ModifiedBy":"parthi","CreatedDate":"2024-12-04T13:19:06.022321+08:00","ModifiedDate":"2025-01-07T19:02:51.40178+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{user_access_configuration}} "},"BeforeSave":"","AfterSave":"","BeforeDelete":"","AfterDelete":""},{"Topic":{"Name":"user_access_control","Description":"User Access Control for data","Keys":["user_name","seq"],"SendAlertOnFail":true,"DistributionList":[],"HotTopic":true,"FieldDefs":[{"FieldName":"user_name","Description":"User","Sequence":1,"DataType":"String","Length":100,"IsKey":true,"IndexSequence":1,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"seq","Description":"Sequence","Sequence":2,"DataType":"Integer","Length":4,"IsKey":true,"IndexSequence":2,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"by_group","Description":"Restrict by Group","Sequence":3,"DataType":"Boolean","Length":1,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"group","Description":"Group","Sequence":4,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"field","Description":"Field Name","Sequence":5,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""},{"FieldName":"condition","Description":"Condition","Sequence":6,"DataType":"String","Length":100,"IsKey":false,"IndexSequence":0,"Props":{"List":false,"ListID":"","ReferenceField":"","RefersTo":""},"SetDefault":false,"Default":"","AutoGen":false,"Mandatory":false,"ClassValidators":"","DecimalPlaces":0,"UIComponent":""}],"Segments":[],"AdditionalProps":null,"References":[],"Indices":[],"SharedTable":true,"CreatedBy":"parthi","ModifiedBy":"parthi","CreatedDate":"2024-12-04T13:22:36.948636+08:00","ModifiedDate":"2025-01-07T19:02:51.408358+08:00","EnableComments":false,"ReferenceFields":null,"ReadQuery":"SELECT * FROM {{user_access_control}} "},"BeforeSave":"//**** Hook before_save Created by parthi on 09-Dec-2024 10:44:53\nfunction before_save(){\n\tif(jscall.input.user_name \u0026\u0026 jscall.mode=='insert'){\n\t\tsequence = CralDB.QueryByComp(\"select seq from {{user_access_control}} where user_name='$1'\",jscall.company,jscall.input.user_name)\n\t\t// jscall_error = sequence\n\t\t// jscall.input.seq = sequence + 1\n\t}else{\n\t\tjscall_error = \"else\"\n\t}\n\n\nreturn true;\n}","AfterSave":"","BeforeDelete":"","AfterDelete":""}],"BizObjects":[{"Bizobj":{"ObjectName":"commonBO","Description":"Common BO for E-Invoicing","external":true,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object commonBO Created by malai on 11-May-2024 12:39:04 ****//\r\n\r\nfunction getCancellationDefaults01(){\r\n    switch(jscall.input.SourceType){\r\n        case \"10\":\r\n            default_seri = CralDB.QueryByComp(\"select man_inv_seri,man_inv_ngrp from {{number_defaults}} where comp=$1\", jscall.company, jscall.input.Company)\r\n            series_list = CralDB.QueryByComp(\"select seri,dsca from {{number_grp}} where ngrp='$1'\", jscall.company, default_seri[0].man_inv_ngrp)\r\n            seri_list = []\r\n            series_list.forEach(\r\n                function(record){\r\n                    seri_list.push({\r\n                        \"Series\": record.seri,\r\n                        \"Description\": record.dsca\r\n                    })\r\n                }\r\n            )\r\n            manual_id = default_seri[0].man_inv_seri\r\n            break;\r\n        case \"20\":\r\n            default_seri = CralDB.QueryByComp(\"select man_soinv_seri,man_soinv_ngrp from {{number_defaults}} where comp=$1\", jscall.company, jscall.input.Company)\r\n            series_list = CralDB.QueryByComp(\"select seri,dsca from {{number_grp}} where ngrp='$1'\", jscall.company, default_seri[0].man_soinv_ngrp)\r\n            seri_list = []\r\n            series_list.forEach(\r\n                function(record){\r\n                    seri_list.push({\r\n                        \"Series\": record.seri,\r\n                        \"Description\": record.dsca\r\n                    })\r\n                }\r\n            )\r\n            manual_id = default_seri[0].man_soinv_seri\r\n            break;\r\n        \r\n        default:\r\n            jscall_error = \"Invalid Source Type.\"\r\n            return false;\r\n            break;\r\n    }\r\n    return {\r\n        \"manual_Id\": manual_id,\r\n        \"seri\": seri_list\r\n    }\r\n}\r\n\r\n\r\nfunction ctrlParamPage(){\r\n    if (jscall.company == 0){\r\n        return {\r\n            \"Self E-invoices\": true,\r\n            \"Consolidation Filing Selector\": true,\r\n            \"Cancellation Defaults\": true,\r\n            \"ExcelUpload\": true,\r\n            \"MasterData\": true\r\n        }\r\n    }\r\n    ret = {\r\n        \"Self E-invoices\": false,\r\n        \"Consolidation Filing Selector\": false,\r\n        \"Cancellation Defaults\": false,\r\n        \"ExcelUpload\": false,\r\n        \"MasterData\": false\r\n    }\r\n    einv_imp = CralDB.QueryByComp(\"select ctrl_cancellation,ctrl_consolidation,ctrl_slf_inv,ctrl_slf_crd_nt,ctrl_excel_upload from {{einv_implementation}}\", jscall.company)\r\n    if (einv_imp?.length != 0){\r\n        ret[\"Cancellation Defaults\"] = einv_imp[0]?.ctrl_cancellation\r\n        ret[\"Consolidation Filing Selector\"] = einv_imp[0]?.ctrl_consolidation\r\n        if (einv_imp[0]?.ctrl_slf_inv == true || einv_imp[0]?.ctrl_slf_crd_nt == true){\r\n            ret[\"Self E-invoices\"] = true\r\n        }\r\n        ret[\"ExcelUpload\"] = einv_imp[0]?.ctrl_excel_upload ? true : false\r\n    }\r\n    isSikpMaster = CralDB.QueryByComp(`select skip_master from {{entity_data_set}} where sup_company=${jscall.company} and skip_master=false`, jscall.company)\r\n    if (isSikpMaster?.length){\r\n        ret[\"MasterData\"] = true\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction isExcelUpload(){\r\n    einv_imp = CralDB.QueryByComp(\"select excel_upload from {{einv_implementation}}\", jscall.company)\r\n    if (einv_imp[0]?.excel_upload == true ){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction getMandatoryFields()\r\n{\r\n    mand_flds = CralDB.QueryByComp(`select excl_interim_field from {{fld_parameter}} where mandatory = true`,jscall.company)\r\n    ret_mand_flds = []\r\n    for(i = 0;i\u003cmand_flds.length;i++)\r\n    {\r\n        ret_mand_flds.push(mand_flds[i].excl_interim_field)\r\n    }\r\n    return ret_mand_flds\r\n}\r\nfunction deleteOldResources(){\r\n    results = []\r\n    allResources = Resources.ListResources()\r\n    if (allResources?.error == \"\"){\r\n        current_date = new Date()\r\n        for (i = 0; i \u003c allResources.result.length; i++){\r\n            res = allResources.result[i]\r\n            res_date = res.CreatedTime.toString().split(\" \")[0]\r\n            \r\n            if (CralUtil.Date.Add(res_date.substring(0,23), \"48h00m00s\") \u003c current_date.toISOString() \r\n                \u0026\u0026 ['Reports', 'PDF'].includes(res.Category)){  //To check the Category for Only E-Invoice PDFs.\r\n                result = Resources.DeleteResource(res.ID)\r\n                results.push({\r\n                    \"ID\": res.ID,\r\n                    \"status\": result?.error\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return results\r\n}\r\n\r\nfunction isExcelTempAvil(){\r\n    if (CralDB.QueryByComp(`select temp_code from {{excl_temp}} where temp_code='${jscall.input.temp_code}'`, jscall.company)?.length != 0){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction UploadExcelFields(){\r\n    old_fields = CralDB.QueryByComp(\"DELETE from {{excl_temp}} where temp_code='$1'\", jscall.company, jscall.input.temp_code)\r\n    old_mapping = CralDB.QueryByComp(\"UPDATE {{upld_temp_lines}} SET excl_fld='', excl_fld_val='', check_mapping=false where temp_code='$1'\", jscall.company, jscall.input.temp_code)\r\n    topic = \"excl_temp\" \r\n    var company = jscall.company\r\n    var records = jscall.input.records \r\n    var results = []\r\n    records.forEach(\r\n        function (rec){\r\n           var result  = CralDB.PublishTopic(topic,company,\"Upsert\",rec,jscall.user,false)\r\n           results.push(result)\r\n        }\r\n    )\r\n    return results\r\n}\r\nfunction getCancellationDefaults(){\r\n\r\n    default_seri = CralDB.QueryByComp(\"select * from {{number_defaults}} where data_set = '$1' and comp = $2\",jscall.company,jscall.input.Dataset,jscall.input.Company)\r\n\r\n    seriesList = []\r\n\r\n    switch (jscall.input.SourceType) {\r\n        \r\n        case \"10\":\r\n            series_list = CralDB.QueryByComp(\"select seri,dsca from {{number_grp}} where ngrp='$1'\", jscall.company, default_seri[0].man_inv_ngrp)\r\n            seri_list = []\r\n            ManualSales = []\r\n            ManualSalesList = []\r\n            if(jscall.input.DocumentType == \"01\"){\r\n                        \r\n                series_list.forEach(\r\n                        function(record){\r\n                            ManualSalesList.push({\r\n                                \"Series\": record.seri,\r\n                                \"Description\": record.dsca\r\n                            })\r\n                        }\r\n                    )\r\n\r\n                ManualSales.push(default_seri[0].man_inv_seri)\r\n\r\n                seriesList.push(ManualSales)\r\n                seriesList.push(ManualSalesList)\r\n\r\n                return {\r\n                    seriesList\r\n                }    \r\n\r\n            }else{\r\n               \r\n                series_list.forEach(\r\n                    function(record){\r\n                        ManualSalesList.push({\r\n                            \"Series\": record.seri,\r\n                            \"Description\": record.dsca\r\n                        })\r\n                    }\r\n                )\r\n\r\n                ManualSales.push(default_seri[0].man_inv_seri) \r\n                \r\n                seriesList.push({ManualSales})\r\n                seriesList.push({ManualSalesList})\r\n\r\n                return {\r\n                   \r\n                    seriesList\r\n                } \r\n            }\r\n\r\n            break;\r\n        \r\n        case \"20\":\r\n            \r\n            if(jscall.input.withReceipts.toUpperCase() == \"YES\"){\r\n            \r\n                default_seri.forEach(\r\n                    function(record){\r\n                        seriesList.push({\r\n                            \"SOR_Order_Type\":record.sor_ord_typ,\r\n                            \"SOR_Sales_Office\":record.sls_ofc,\r\n                            \"SOR_Return_Reason\":record.ret_reason,\r\n                            \"SOR_Invoice_Number_Group\":record.man_soinv_ngrp,\r\n                            \"SOR_Invoice_Series\":record.man_soinv_seri\r\n                        })\r\n                    }\r\n                )\r\n                seriesList.push(seriDesc(default_seri,false))\r\n\r\n                return{\r\n                    seriesList\r\n                }\r\n                \r\n            }else{\r\n\r\n                salesOrder = []\r\n                series_list = CralDB.QueryByComp(\"select seri,dsca from {{number_grp}} where ngrp='$1'\", jscall.company, default_seri[0].man_inv_ngrp)\r\n            \r\n                SalesOrderList = []\r\n                series_list.forEach(\r\n                    function(record){\r\n                        SalesOrderList.push({\r\n                            \"Series\": record.seri,\r\n                            \"Description\": record.dsca\r\n                        })\r\n                    }\r\n                )\r\n\r\n                salesOrder.push(default_seri[0].man_inv_seri) \r\n                \r\n                seriesList.push({salesOrder})\r\n                seriesList.push({SalesOrderList})\r\n\r\n                return {\r\n                   \r\n                    seriesList\r\n                }\r\n            }z\r\n\r\n            break;\r\n\r\n        case \"30\":\r\n        case \"50\":\r\n            \r\n            if(jscall.input.withShipments .toUpperCase() == \"YES\"){\r\n\r\n                default_seri.forEach(\r\n                    function(record){\r\n                        seriesList.push({\r\n                            \"Pur_Order_Type\":record.pur_ord_typ,\r\n                            \"Pur_Sales_Office\":record.pur_ofc,\r\n                            \"Pur_Return_Reason\":record.pur_ret_reson,\r\n                            \"Pur_Invoice_Number_Group\":record.pur_inv_ngrp,\r\n                            \"Pur_Invoice_Series\":record.pur_inv_seri\r\n                        })\r\n                    }\r\n                )\r\n                // pur_inv = true\r\n                seriesList.push(seriDesc(default_seri,true))\r\n\r\n            }else{\r\n                Transaction_types = []\r\n                Pur_Tran_Type = []\r\n                tranType = CralDB.QueryByComp(\"select src_tran_type, src_dsca from {{src_tran_types}} where tran_category = '$1'\",jscall.company,\"Purchase Credit Notes\") \r\n                // return tranType\r\n                tranType.forEach(\r\n                    function(record){\r\n                        Transaction_types.push({\r\n                            \"Transaction_Type\":record.src_tran_type,\r\n                            \"Description\":record.src_dsca \r\n                        })\r\n                    }\r\n                )\r\n\r\n                tranType_dsca = CralDB.QueryByComp(\"select src_tran_type, src_dsca from {{src_tran_types}} where src_tran_type = '$1'\",jscall.company,default_seri[0].pur_tran_typ)\r\n                Pur_Tran_Type.push(tranType_dsca[0].src_tran_type,tranType_dsca[0].src_dsca) \r\n                \r\n        \r\n                seriesList.push({Pur_Tran_Type})\r\n                seriesList.push({Transaction_types})\r\n            }\r\n            \r\n            return{\r\n                seriesList\r\n            }\r\n\r\n            break;\r\n\r\n        case \"40\":\r\n            Transaction_types = []\r\n            Sales_Invoice = []\r\n            seri_list = CralDB.QueryByComp(\"select src_tran_type, src_dsca from {{src_tran_types}} where tran_category = '$1'\",jscall.company,\"Sales Credit Notes\")\r\n            seri_list.forEach(\r\n                function(record){\r\n                    // debug(record)\r\n                    Transaction_types.push({ \r\n                        \"Transaction_Type\":record.src_tran_type,\r\n                        \"Description\":record.src_dsca\r\n                    })\r\n                }\r\n            )\r\n\r\n\r\n            Sales_Invoice.push(default_seri[0].sls_tran_typ) \r\n                \r\n        \r\n            seriesList.push({Sales_Invoice})\r\n            seriesList.push({Transaction_types})\r\n\r\n\r\n            // sls_tran_type = default_seri[0].sls_tran_typ\r\n            return {\r\n                // sls_tran_type,\r\n                // Transaction_types\r\n                seriesList\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            jscall_error = \"Invalid Source Type.\"\r\n            return false;\r\n            break;\r\n    }\r\n}\r\nfunction seriDesc(default_seri,pur_inv){\r\n\r\n    // Series_List = []\r\n    // Order_Type = []\r\n    // Sales_Office = [] \r\n    // Return_Reason =[]\r\n    // Invoice_Number_Group =[]\r\n    // PurOrdType = []\r\n    // Pur_sls_offc =[]\r\n\r\n    ordType = CralDB.QueryByComp(\"select ord_typ,dsca from {{ord_type}} where data_set = '$1'\",jscall.company,default_seri[0].data_set) \r\n    slsOfc = CralDB.QueryByComp(\"select sls_ofc,dsca from {{sls_off}} where data_set = '$1'\",jscall.company,default_seri[0].data_set)\r\n    retReason = CralDB.QueryByComp(\"select ret_reason,dsca from {{ret_reason}} where data_set = '$1'\",jscall.company,default_seri[0].data_set)\r\n       // Purchase Sale_Office \u0026 Purchase Order_Type Query\r\n    pur_ordType = CralDB.QueryByComp(\"select pur_ord_type,dsca from {{pur_ord_type}} where data_set = '$1'\",jscall.company,default_seri[0].data_set) \r\n    pur_slsOfc = CralDB.QueryByComp(\"select pur_off,dsca from {{pur_off}} where data_set = '$1'\",jscall.company,default_seri[0].data_set)\r\n\r\n    if(pur_inv == true){\r\n\r\n        numberGroup = CralDB.QueryByComp(\"select ngrp,seri,dsca from {{number_grp}} where data_set = '$1' and ngrp ='$2'\",jscall.company,default_seri[0].data_set,default_seri[0].pur_inv_ngrp)\r\n\r\n        Return_Reason =[]\r\n        Invoice_Number_Group =[]\r\n        PurOrdType = []\r\n        Pur_sls_offc =[]\r\n\r\n        pur_ordType.forEach(\r\n            function(record){\r\n                PurOrdType.push({\r\n                    \"OrderType\":record.pur_ord_type,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        );\r\n        \r\n        pur_slsOfc.forEach(\r\n            function(record){\r\n                Pur_sls_offc.push({\r\n                    \"SalesOffice\":record.pur_off,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        )\r\n\r\n        retReason.forEach(\r\n            function(record){\r\n                Return_Reason.push({\r\n                    \"ReturnReason\":record.ret_reason,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        )\r\n\r\n        numberGroup.forEach(\r\n            function(record){\r\n                Invoice_Number_Group.push({\r\n                    \"InvNumberGroup\":record.ngrp,\r\n                    \"InvNumberSeries\":record.seri,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        )\r\n        return {\r\n            PurOrdType,\r\n            Pur_sls_offc,\r\n            Return_Reason,\r\n            Invoice_Number_Group\r\n        }\r\n    }else{\r\n\r\n        numberGroup = CralDB.QueryByComp(\"select ngrp,seri,dsca from {{number_grp}} where data_set = '$1' and ngrp ='$2'\",jscall.company,default_seri[0].data_set,default_seri[0].man_soinv_ngrp)\r\n\r\n        Order_Type = []\r\n        Sales_Office = []\r\n        Return_Reason = []\r\n        Invoice_Number_Group = []\r\n\r\n        ordType.forEach(\r\n            function(record){\r\n                Order_Type.push({\r\n                    \"OrderType\":record.ord_typ,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        );\r\n        \r\n        slsOfc.forEach(\r\n            function(record){\r\n                Sales_Office.push({\r\n                    \"SalesOffice\":record.sls_ofc,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        )\r\n\r\n        retReason.forEach(\r\n            function(record){\r\n                Return_Reason.push({\r\n                    \"ReturnReason\":record.ret_reason,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        )\r\n\r\n        numberGroup.forEach(\r\n            function(record){\r\n                Invoice_Number_Group.push({\r\n                    \"InvNumberGroup\":record.ngrp,\r\n                    \"InvNumberSeries\":record.seri,\r\n                    \"Description\":record.dsca\r\n                })\r\n            }\r\n        )\r\n        return {\r\n            Order_Type,\r\n            Sales_Office,\r\n            Return_Reason,\r\n            Invoice_Number_Group\r\n        }\r\n    }\r\n    // return {\r\n    //     Order_Type,\r\n    //     Sales_Office,\r\n    //     Return_Reason,\r\n    //     Invoice_Number_Group\r\n    // }\r\n}\r\n\r\nfunction getNumberingDefaultValues(){\r\n    return {\r\n        \"SalesOrderType\": CralDB.QueryByComp(`SELECT ord_typ AS \"OrderType\", dsca AS \"Description\" FROM {{ord_type}}`, jscall.company),\r\n        \"SalesOffice\": CralDB.QueryByComp(`SELECT sls_ofc AS \"SalesOffice\", dsca AS \"Description\" FROM {{sls_off}}`, jscall.company),\r\n        \"ReturnReason\": CralDB.QueryByComp(`SELECT ret_reason AS \"ReturnReason\", dsca AS \"Description\" from {{ret_reason}}`, jscall.company),\r\n        \r\n        \"SalesTransactionType\": CralDB.QueryByComp(`SELECT src_tran_type AS \"TransactionType\", src_dsca AS \"Description\" FROM {{src_tran_types}} WHERE tran_category = 'Sales Credit Notes'`, jscall.company) ,\r\n\r\n        // Common Number Group for Both Sales and Purchase Finance.\r\n        \"NumberGroup\": CralDB.QueryByComp(`SELECT DISTINCT ngrp AS \"InvNumberGroup\" from {{number_grp}}`, jscall.company),\r\n        \"Series\": CralDB.QueryByComp(`SELECT ngrp AS \"InvNumberGroup\", seri AS \"InvNumberSeries\", dsca AS \"Description\" from {{number_grp}}`, jscall.company),\r\n        // \"SOR_NumberGroup\": CralDB.QueryByComp(`SELECT ngrp AS \"InvNumberGroup\" from {{number_grp}}`, jscall.company),\r\n        // \"SOR_Series\": CralDB.QueryByComp(`SELECT ngrp AS \"InvNumberGroup\", seri AS \"InvNumberSeries\", dsca AS \"Description\" from {{number_grp}}`, jscall.company),\r\n\r\n        \"PurchaseTransactionType\": CralDB.QueryByComp(`SELECT src_tran_type AS \"TransactionType\", src_dsca AS \"Description\" FROM {{src_tran_types}} WHERE tran_category = 'Purchase Credit Notes'`, jscall.company) ,\r\n        \"PurchaseOrderType\": CralDB.QueryByComp(`SELECT pur_ord_type AS \"PurOrderType\", dsca AS \"Description\" FROM {{pur_ord_type}}`, jscall.company),\r\n        \"PurchaseOffice\": CralDB.QueryByComp(`SELECT pur_off AS \"PurchaseOffice\", dsca AS \"Description\" FROM {{pur_off}}`, jscall.company)\r\n    }\r\n}"},{"Bizobj":{"ObjectName":"conso_checking","Description":"Consolidation Checking","external":false,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object conso_checking Created by malai on 06-Dec-2024 16:25:23 ****//\r\n\r\nfunction checkConsoInvoice(input_data){\r\n    consoCriteria = CralDB.QueryByComp(`SELECT DISTINCT criteria from {{conso_parameter}}`, jscall.company).map(data =\u003e data.criteria)\r\n    if (consoCriteria?.length){\r\n        for (let i = 0; i \u003c consoCriteria.length; i++){\r\n            if (isConso(consoCriteria[i], input_data)){\r\n                return true;\r\n            };\r\n        };\r\n    };\r\n    return false;\r\n}\r\nexports.checkConsoInvoice = checkConsoInvoice\r\n\r\nfunction isConso(criteria, data){\r\n    let result = false\r\n    let conso_result = false\r\n    let ds = data.dataset ? data.dataset : data.data_set\r\n    let conditions = CralDB.QueryByComp(`SELECT * from {{conso_parameter}} where criteria=${criteria}`, jscall.company)\r\n    conditions.forEach(condition =\u003e {\r\n        if (condition.is_buyer){\r\n            let buyer_query = ` SELECT buy_code FROM {{buyer_companies}}\r\n                                WHERE data_set='${ds}' \r\n                                AND buy_code='${data.inv_bp}'\r\n                                AND conso_buyer=true`;\r\n            result = (CralDB.QueryByComp(buyer_query, jscall.company)?.length) ? true : false;\r\n        } else if (condition.by_range){\r\n            result = (  data[condition.field_name] \u003e= condition.from_range \u0026\u0026 \r\n                        data[condition.field_name] \u003c= condition.to_range) ? true : false;\r\n        } else {\r\n            result = checkByCondition( data[condition.field_name],\r\n                                            condition.condition)\r\n        }\r\n        conso_result = condition.joiner.toUpperCase() == 'AND' ? \r\n                            conso_result \u0026\u0026 result : conso_result || result\r\n    })\r\n    return conso_result\r\n}\r\n\r\nfunction checkByCondition(value, expression){\r\n    switch(expression.slice(0, 2)){\r\n        case '==':\r\n            return (value == expression.slice(2).trim()) ? true : false;\r\n        case '!=':\r\n            return (value != expression.slice(2).trim()) ? true : false;\r\n        case '\u003e=':\r\n            return (value \u003e= expression.slice(2).trim()) ? true : false;\r\n        case '\u003c=':\r\n            return (value \u003c= expression.slice(2).trim()) ? true : false;\r\n        case '\u003e\u003e':\r\n            return (value \u003e expression.slice(2).trim()) ? true : false;\r\n        case '\u003c\u003c':\r\n            return (value \u003c expression.slice(2).trim()) ? true : false;\r\n        default:\r\n            return false\r\n    }\r\n}"},{"Bizobj":{"ObjectName":"consolidation","Description":"Create Consolidation E-Invoice","external":true,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object consolidation Created by Saravanan on 08-Jun-2024 09:44:11 ****//\r\n\r\nvar einvois = require(\"./scripts/Business_Objects/createEinvoice\")\r\nfunction checkConsolidationImp() {\r\n    // Query the consolidation field from the einv_implementation table\r\n    var conso_val = CralDB.QueryByComp(\"select consolidation from {{einv_implementation}} limit 1\", jscall.company);\r\n    \r\n    // Query multiple fields from the conso_filing table\r\n    var sls_ord = CralDB.QueryByComp(\"select conso_sls, conso_man_sls, conso_acr from {{conso_filing}} limit 1\", jscall.company);\r\n    \r\n    // Initialize the result object\r\n    var result = {};\r\n\r\n    // Process consolidation field\r\n    result.Consolidation = conso_val \u0026\u0026 conso_val.length \u003e 0 ? conso_val[0].consolidation : null;\r\n\r\n    // Process fields from sls_ord if available\r\n    if (sls_ord \u0026\u0026 sls_ord.length \u003e 0) {\r\n        var sls_record = sls_ord[0];\r\n        result.SalesOrder = CralUtil.GetListDesc(\"conso_sls_list\", sls_record.conso_sls);\r\n        result.ManualSales = CralUtil.GetListDesc(\"conso_man_sls_list\", sls_record.conso_man_sls);\r\n        result.FinanceACR = CralUtil.GetListDesc(\"conso_acr_list\", sls_record.conso_acr);\r\n    } else {\r\n        // Assign null values if sls_ord is empty\r\n        result.FinanceACR = result.ManualSales = result.SalesOrder = null;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// function getTodayDate(){\r\n//     return (new Date()).getDate();\r\n// }\r\n\r\nfunction createConsoEINV(){\r\n    isConsoImp = CralDB.QueryByComp(\"select consolidation from {{einv_implementation}}\", jscall.company)\r\n    if (!isConsoImp[0].consolidation){\r\n        return \"Consolidation is Not Implemented.\"\r\n    }\r\n    // if ((new Date()).getDate() != 2){\r\n    //     return false\r\n    // }\r\n    conso_results = []\r\n    var [year, month] = getPreviousMonthDetails()\r\n    data_sets = CralDB.QueryByComp(`select data_set from {{data_set}}`, jscall.company)\r\n    for (var d = 0; d \u003c data_sets.length; d++){\r\n        conso_inv_data = []\r\n        all_inv = CralDB.QueryByComp(\"select * from {{conso_header}} where conso_inv='' and data_set='$1'\", jscall.company, data_sets[d].data_set)\r\n        debug(data_sets[d].data_set)\r\n        debug(all_inv.length)\r\n        if (all_inv.length != 0){\r\n            all_inv.forEach(inv =\u003e {\r\n                if ( (inv.inv_date.toString()).slice(0, 4) == year \u0026\u0026 (inv.inv_date.toString()).slice(5, 7) == month){\r\n                    conso_inv_data.push(inv)\r\n                }\r\n            })\r\n        }\r\n        if (conso_inv_data?.length == 0){\r\n            continue\r\n        }\r\n        conso_invoices = getSplitInvoices(conso_inv_data)\r\n        for(var i = 0; i \u003c conso_invoices.length; i++){\r\n            conso_code = `01_${year.toString().slice(-2)}${month.toString().padStart(2, \"0\")}`\r\n            conso_number = \"01\" + year.toString().slice(-2) + month.toString().padStart(2, \"0\")\r\n            conso_iter_num = (CralDB.QueryByComp(`select count(idoc) from {{einv_header}} where e_inv_no LIKE '${conso_code}%'`, jscall.company)[0].count + 1).toString().padStart(2, \"0\")\r\n            conso_code = conso_code + \"_\" + conso_iter_num\r\n            conso_number = conso_number + conso_iter_num\r\n            ce_inv = getConsoEinvoice(conso_invoices[i], \"01\", conso_code, conso_number) // \"01\" - Document Type.\r\n            if (typeof ce_inv == \"string\"){\r\n                conso_results.push({\r\n                    \"Error\": ce_inv,\r\n                    \"DataSet\": data_sets[d].data_set,\r\n                    \"Invoices\": conso_invoices[i].map(einv =\u003e einv.idoc)\r\n                })\r\n            }\r\n            for (var j=0; j\u003cconso_invoices[i].length; j++){\r\n                payload = conso_invoices[i][j]\r\n                payload.conso_inv = ce_inv.Message.e_inv_no\r\n                payload.cein = true\r\n                CralDB.PublishTopic(\"conso_header\", jscall.company, \"Update\", payload, jscall.user)\r\n            }\r\n            conso_result = {\r\n                \"ConsolidatedInvoiceNumber\": ce_inv.Message.e_inv_no,\r\n                \"Invoices\": conso_invoices[i].map(einv =\u003e einv.idoc),\r\n                \"Result\": ce_inv\r\n            }\r\n            CralUtil.LogInfo(\"New Consolidated Invoice\", \"Consolidation\", conso_result)\r\n            conso_results.push(conso_result)\r\n        }\r\n    }\r\n    return conso_results\r\n}\r\n\r\nfunction getSplitInvoices(input_data){\r\n    output_data = []\r\n    for (var k = 0; k \u003c input_data.length; k += 250) {\r\n        output_data.push(input_data.slice(k, k + 250));\r\n    }\r\n    return output_data\r\n}\r\n\r\nfunction getConsoEinvoice(inv_data, invType, invCode, invNumber){\r\n    conso_einv_lines = []\r\n    total_ex_tax = 0\r\n    total_in_tax = 0\r\n    total_tax = 0\r\n    total_net_amnt = 0\r\n    total_disc = 0\r\n    total_fees = 0\r\n    ttaxable_amnt = 0\r\n    ttax_amnt = 0\r\n    total_pay_amnt = 0\r\n    total_inv = 0\r\n    for (var i=0;i\u003cinv_data.length;i++){\r\n        // if ( (inv_data[i].inv_date.toString()).slice(0, 4) == year \u0026\u0026 (inv_data[i].inv_date.toString()).slice(5, 7) == month){\r\n            total_inv += 1\r\n            line_tpat = inv_data[i].tott / inv_data[i].tote * 100\r\n            conso_einv_lines.push({\r\n                \"line\": i+1,\r\n                \"cuni\": \"\",\r\n                \"ccty\": \"\",\r\n                \"clas_grp\": getClassificationGroup(),\r\n                \"clas\": \"004\",\r\n                \"item\": \"\",\r\n                // \"item_desc\": inv_data[i].tran + inv_data[i].idoc,\r\n                \"item_desc\": inv_data[i].inv_no ? inv_data[i].inv_no : inv_data[i].tran + inv_data[i].idoc,\r\n                \"pric\": inv_data[i].tote,\r\n                \"pvat\": (!line_tpat)?0:line_tpat,\r\n                \"txai\": inv_data[i].tott,\r\n                \"tex_cer_no\": \"\",\r\n                \"amtt\": 0,\r\n                \"stot\": inv_data[i].tote + inv_data[i].tdis,\r\n                \"amti\": inv_data[i].tote,\r\n                \"dqua\": 1,\r\n                \"disc\": 0,\r\n                \"ldai\": inv_data[i].tdis,\r\n                \"ccde\": \"\",\r\n                \"feea\": 0,\r\n                \"feer\": 0,\r\n                \"disc_reason\": \"\",\r\n                \"fee_reason\": \"\",\r\n                \"err_msg\": \"\",\r\n                \"lsta\": \"10\",\r\n                \"modi_lsta\": \"\",\r\n                \"cvat\": inv_data[i].cvat,\r\n                \"reference0\": \"\",\r\n                \"reference1\": \"\",\r\n                \"reference2\": \"\",\r\n                \"reference3\": \"\",\r\n                \"reference4\": \"\",\r\n                \"reference5\": \"\",\r\n                \"reference6\": \"\",\r\n                \"reference7\": \"\",\r\n                \"reference8\": \"\",\r\n                \"reference9\": \"\",\r\n                \"reference10\": \"\",\r\n                \"reference11\": \"\",\r\n                \"reference12\": \"\",\r\n                \"reference13\": \"\",\r\n                \"reference14\": \"\",\r\n                \"reference15\": \"\",\r\n                \"reference16\": \"\",\r\n                \"reference17\": \"\",\r\n                \"reference18\": \"\",\r\n                \"reference19\": \"\",\r\n                \"reference20\": \"\"\r\n            })\r\n            total_ex_tax += inv_data[i].tote\r\n            total_in_tax += inv_data[i].toti\r\n            total_tax += inv_data[i].tott\r\n            total_net_amnt += inv_data[i].tnat\r\n            total_disc += inv_data[i].tdis\r\n            total_fees += inv_data[i].tfee\r\n            ttaxable_amnt += inv_data[i].ttax\r\n            ttax_amnt += inv_data[i].ttat\r\n            total_pay_amnt += inv_data[i].tpat\r\n        // }\r\n    }\r\n    debug(JSON.stringify(conso_einv_lines))\r\n    supplier_data = CralDB.QueryByComp(\"select * from {{supplier_companies}} where sup_company=$1\", jscall.company, inv_data[0].comp)\r\n    supplier_adrs = (supplier_data.length != 0)?CralDB.QueryByComp(`select * from {{address_master}} where data_set='${inv_data[0].data_set}' and adrs_code='${supplier_data[0].sup_adrs}'`, jscall.company):[]\r\n    buyer_data = CralDB.QueryByComp(\"select * from {{conso_filing}} where comp=$1\", jscall.company, jscall.company)\r\n    \r\n    // Add Data Set\r\n    buyer_adrs = (buyer_data.length != 0)?CralDB.QueryByComp(\"select * from {{address_master}} where adrs_code='$1'\", jscall.company, buyer_data[0].con_buyer_adrs):[]\r\n    let [sup_ccty, sup_cste] = einvois.get_country_state((supplier_adrs.length != 0)?supplier_adrs[0].adrs_country:\"\", (supplier_adrs.length != 0)?supplier_adrs[0].adrs_state:\"\", inv_data[0].data_set)\r\n\r\n    einv_input = {\r\n        \"e_inv_no\": invCode,\r\n        \"comp\": inv_data[0].comp,\r\n        \"tran\": \"\",\r\n        \"idoc\": 0,\r\n        \"doct\": invType,\r\n        \"ccur\": \"MYR\",\r\n        \"paym\": \"\",\r\n        \"cvat\": inv_data[0].cvat,\r\n        \"sctg\": \"10\",\r\n        \"dataset\": inv_data[0].data_set,\r\n        \"line_cnt\": 0,\r\n        \"s_line_cnt\": total_inv,\r\n        \"sup_name\":         (supplier_data.length != 0)?supplier_data[0].sup_name:\"\",\r\n        \"sup_cont_num\":     (supplier_data.length != 0)?supplier_data[0].sup_cont_num:\"\",\r\n        \"sup_email\":        (supplier_data.length != 0)?supplier_data[0].sup_email:\"\",\r\n        \"sup_sst_reg\":      (supplier_data.length != 0)?supplier_data[0].sup_sst_reg:\"\",\r\n        \"sup_ttx_no\":       (supplier_data.length != 0)?supplier_data[0].sup_ttx_no:\"\",\r\n        \"sup_tin\":          (supplier_data.length != 0)?supplier_data[0].sup_tin:\"\",\r\n        \"sup_reg_brn\":      (supplier_data.length != 0)?supplier_data[0].sup_reg_brn:\"\",\r\n        \"sup_reg_nric\":     (supplier_data.length != 0)?supplier_data[0].sup_reg_nric:\"\",\r\n        \"sup_reg_passport\": (supplier_data.length != 0)?supplier_data[0].sup_reg_passport:\"\",\r\n        \"sup_reg_army\":     (supplier_data.length != 0)?supplier_data[0].sup_reg_army:\"\",\r\n        \"sup_badsca\":       (supplier_data.length != 0)?supplier_data[0].sup_badsca:\"\",\r\n        \"sup_bank_acc\":     (supplier_data.length != 0)?supplier_data[0].sup_bank_acc:\"\",\r\n        \"sup_msic\":         (supplier_data.length != 0)?supplier_data[0].sup_msic:\"\",\r\n        \"sup_adrs\":         (supplier_data.length != 0)?supplier_data[0].sup_adrs:\"\",\r\n        \"sup_city\":         (supplier_adrs.length != 0)?supplier_adrs[0].adrs_city:\"\",\r\n        \"sup_postal_zone\":  (supplier_adrs.length != 0)?supplier_adrs[0].postal_zone:\"\",\r\n        \"sup_adrs_line0\":   (supplier_adrs.length != 0)?supplier_adrs[0].adrs_line0:\"\",\r\n        \"sup_adrs_line1\":   (supplier_adrs.length != 0)?supplier_adrs[0].adrs_line1:\"\",\r\n        \"sup_adrs_line2\":   (supplier_adrs.length != 0)?supplier_adrs[0].adrs_line2:\"\",\r\n        \"sup_country\":      sup_ccty,\r\n        \"sup_cste\":         sup_cste,\r\n        \"inv_bp\": \"\",\r\n        \"buy_name\": (buyer_data.length != 0)?buyer_data[0].con_buyer_name:\"NA\",\r\n        \"buy_cont_num\": (buyer_data.length != 0)?buyer_data[0].con_buyer_cont_num:\"NA\",\r\n        \"buy_email\": \"\",\r\n        \"buy_sst_reg\": (buyer_data.length != 0)?buyer_data[0].con_buyer_sst_reg:\"NA\",\r\n        \"buy_tin\": (buyer_data.length != 0)?buyer_data[0].con_buyer_tin:\"NA\",\r\n        \"buy_reg_brn\": (buyer_data.length != 0)?buyer_data[0].con_buyer_reg_brn:\"NA\",\r\n        \"buy_reg_nric\": (buyer_data.length != 0)?buyer_data[0].con_buyer_reg_nric:\"NA\",\r\n        \"buy_reg_passport\": (buyer_data.length != 0)?buyer_data[0].con_buyer_reg_passport:\"NA\",\r\n        \"buy_reg_army\": (buyer_data.length != 0)?buyer_data[0].con_buyer_reg_army:\"NA\",\r\n        \"buy_adrs\": (buyer_data.length != 0)?buyer_data[0].con_buyer_adrs:\"\",\r\n        \"buy_city\": (buyer_adrs.length != 0)?buyer_adrs[0].adrs_city:\"NA\",\r\n        \"buy_postal_zone\": (buyer_adrs.length != 0)?buyer_adrs[0].postal_zone:\"NA\",\r\n        \"buy_adrs_line0\": (buyer_adrs.length != 0)?buyer_adrs[0].adrs_line0:\"NA\",\r\n        \"buy_adrs_line1\": (buyer_adrs.length != 0)?buyer_adrs[0].adrs_line1:\"NA\",\r\n        \"buy_adrs_line2\": (buyer_adrs.length != 0)?buyer_adrs[0].adrs_line2:\"NA\",\r\n        \"buy_country\": \"MYS\",\r\n        \"buy_cste\": \"17\",\r\n        \"dtrm\": \"\",\r\n        \"ship_bp\": \"\",\r\n        \"ship_name\": \"\",\r\n        \"ship_tin\": \"\",\r\n        \"ship_reg_brn\": \"\",\r\n        \"ship_reg_nric\": \"\",\r\n        \"ship_reg_passport\": \"\",\r\n        \"ship_reg_army\": \"\",\r\n        \"ship_adrs\": \"\",\r\n        \"ship_city\": \"\",\r\n        \"ship_postal_zone\": \"\",\r\n        \"ship_adrs_line0\": \"\",\r\n        \"ship_adrs_line1\": \"\",\r\n        \"ship_adrs_line2\": \"\",\r\n        \"ship_country\": \"\",\r\n        \"ship_cste\": \"\",\r\n        \"frm1\": \"\",\r\n        \"frm2\": \"\",\r\n        \"rate\": 1,\r\n        \"tote\": total_ex_tax,\r\n        \"toti\": total_in_tax,\r\n        \"tott\": total_tax,\r\n        \"pamt\": 0,\r\n        // \"pydt\": \"YYYY-MM-DD\",\r\n        // \"pytm\": \"YYYY-MM-DD HH:MM\",\r\n        \"pref\": \"\",\r\n        // \"tpat\": 0,\r\n        \"tpat\": total_pay_amnt,\r\n        \"tnat\": total_net_amnt,\r\n        \"tdis\": total_disc,\r\n        \"tfee\": total_fees,\r\n        \"ramt\": 0,\r\n        \"ttax\": ttaxable_amnt,\r\n        \"ttat\": ttax_amnt,\r\n        \"adis\": 0,\r\n        \"adis_reason\": \"\",\r\n        \"afee\": 0,\r\n        \"afee_reason\": \"\",\r\n        \"fbil\": \"\",\r\n        \"org_e_inv_no\": \"\",\r\n        \"term\": \"\",\r\n        \"bref\": \"\",\r\n        \"ftrd\": \"\",\r\n        \"anum\": \"\",\r\n        \"ochg\": false,\r\n        \"ochg_amnt\": 0,\r\n        \"ochg_reason\": \"\",\r\n        \"det_tax\": \"\",\r\n        // \"bsdt\": \"YYYY-MM-DD\",\r\n        // \"bedt\": \"YYYY-MM-DD\",\r\n        \"amnt_ex\": 0,\r\n        \"dshp\": false,\r\n        \"submission_uid\": \"\",\r\n        \"doc_uuid\": \"\",\r\n        \"esta\": \"10\",\r\n        \"err_msg\": \"\",\r\n        // \"e_invdt\": \"YYYY-MM-DD HH:MM\",\r\n        \"einv_stat\": \"10\",\r\n        // \"etim\": \"YYYY-MM-DD HH:MM\",\r\n        \"modi_stat\": \"\",\r\n        \"src_type\": \"\",\r\n        \"inv_pdf\": \"\",\r\n        \"sup_code\": inv_data[0].comp,\r\n        \"reference0\": \"\",\r\n        \"reference1\": \"\",\r\n        \"reference2\": \"\",\r\n        \"reference3\": \"\",\r\n        \"reference4\": \"\",\r\n        \"reference5\": \"\",\r\n        \"reference6\": \"\",\r\n        \"reference7\": \"\",\r\n        \"reference8\": \"\",\r\n        \"reference9\": \"\",\r\n        \"qr_code\": \"\",\r\n        \"org_doc_uuid\":\"\"\r\n    }\r\n    if (conso_einv_lines.length != 0){\r\n        debug(einv_input)\r\n        result = CreateEinvois(einv_input, conso_einv_lines)\r\n        if (result?.Message?.e_inv_no){\r\n            SubmitConsoEInvoice(result.Message.e_inv_no)\r\n        } else {\r\n            CralUtil.LogInfo(\"Unable to Create Consolidation.\", \"consolidation\", [result, einv_input])\r\n            return \"Unable to Create Consolidation.\"\r\n        }\r\n        return result\r\n    }\r\n    return \"No Line is Ready to Consolidation\"\r\n}\r\n\r\n// function ConsoMissingLines(){\r\n    \r\n// }\r\n\r\nfunction SubmitConsoEInvoice(einvCode){\r\n    if (einvois.check_validations(einvCode) == true){\r\n        var doc_json = einvois.BuildJSONFormat(einvCode)\r\n        println(\"After Doc\")\r\n        if (typeof doc_json == \"string\"){\r\n            println(\"Error Doc\")\r\n            einvois.CreatePortalValidation(einvCode, 0, doc_json, \"\")\r\n            return result\r\n        } else {\r\n            // Convert JSON to XML and hash the doc to string.\r\n            println(\"Success Doc\")\r\n            submission_ret = einvois.SubmitTOLHDN(doc_json.document, doc_json.InvoiceCodeNumber)\r\n            if (submission_ret == false){\r\n                return result\r\n            } else {\r\n                sub_data = einvois.SubmissionUpdate(submission_ret)\r\n                return result\r\n            }\r\n        }\r\n    }\r\n    return \"Validation Fails\"\r\n}\r\n\r\nfunction CreateEinvois(header_data, lines_data){\r\n    header_result = CralDB.PublishTopic(\"einv_header\", jscall.company, \"Insert\", header_data, jscall.user)\r\n    if (typeof header_result == \"string\"){\r\n        return {\r\n            \"Success\": false,\r\n            \"Message\": header_result\r\n        }\r\n    } else {\r\n        if (header_result.Success == false){\r\n            return header_result\r\n        } else {\r\n            result = insert_lines(lines_data, header_result.Message.e_inv_no)\r\n            header_result.Lines = result\r\n            return header_result\r\n        }\r\n    }\r\n}\r\n\r\nfunction insert_lines(lines, invCode){\r\n    lines_result = []\r\n    for (var i_line = 0; i_line\u003clines.length; i_line++){\r\n        lines[i_line].e_inv_no = invCode\r\n        lines_result.push(CralDB.PublishTopic(\"einv_lines\", jscall.company, \"Insert\", lines[i_line], jscall.user))\r\n    }\r\n    return lines_result\r\n}\r\n\r\nfunction getPreviousMonthDetails() {\r\n    const currentDate = new Date();\r\n    let currentMonth = currentDate.getMonth()+1;\r\n    let currentYear = currentDate.getFullYear();\r\n    // If the current month is January (0), go to December of the previous year\r\n    if (currentMonth === 0) {\r\n        currentMonth = 12;\r\n        currentYear -= 1;\r\n    }\r\n    return [currentYear, currentMonth]\r\n}\r\n\r\n// function isConso(fullDate, year, month) {\r\n//     // Create a Date object from the full date input\r\n//     // inputDate = (new Date(fullDate.replace(\" +0000 UTC\", \"\") + \"Z\")).toISOString();\r\n//     // const date = new Date(inputDate);\r\n//     const date_ = new Date(fullDate)\r\n//     // debug(\"AA\", date_)\r\n//     return (date_.getFullYear() === year \u0026\u0026 date_.getMonth() + 1 === month);\r\n//     // return true\r\n// }\r\n// function convertToISO8601(dateString) {\r\n//     // Remove the \"+0000 UTC\" part of the string\r\n//     debug(dateString)\r\n//     const cleanedDateString = dateString.split(\" +\")[0];\r\n\r\n//     // Create a new Date object using the cleaned date string\r\n//     const date = new Date(cleanedDateString + \"Z\");\r\n\r\n//     // Format the date object to ISO 8601 string\r\n//     const isoString = date.toISOString();\r\n\r\n//     return isoString;\r\n// }\r\n\r\nfunction getClassificationGroup(){\r\n    clas_data = CralDB.QueryByComp(\"select classification from {{supplier_companies}} where sup_company=$1\", 0, jscall.company)\r\n    if (clas_data.length != 0){\r\n        return clas_data[0].classification\r\n    }\r\n    return \"\"\r\n}\r\n\r\nfunction conso_filling(){\r\n    isConsoImp = CralDB.QueryByComp(\"select consolidation from {{einv_implementation}}\", jscall.company)\r\n    if (isConsoImp[0].consolidation == true){\r\n\r\n        // Additional Handling to check conso parameter\r\n        isBuyerBasedFilter = CralDB.QueryByComp(`SELECT criteria FROM {{conso_parameter}} WHERE is_buyer=true limit 1`, jscall.company).length\r\n        if (isBuyerBasedFilter){\r\n            return true\r\n        }\r\n\r\n        \r\n        var conso_fill_val = CralDB.QueryByComp(\"select conso_sls ,conso_man_sls ,conso_acr from {{conso_filing}} limit 1\", jscall.company);\r\n        if (conso_fill_val \u0026\u0026 conso_fill_val.length \u003e 0) {\r\n            if (conso_fill_val[0].conso_sls == \"10\"  || conso_fill_val[0].conso_man_sls == \"10\"  || conso_fill_val[0].conso_acr == \"10\"){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false\r\n}"},{"Bizobj":{"ObjectName":"createEinvoice","Description":"Create E-Invoice","external":false,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object createEinvoice Created by malai on 22-Jun-2024 23:41:03 ****//\r\n\r\n// var lhdn_api = require(\"./scripts/Business_Objects/einvIntFunction\")\r\n// var outUpdate = require(\"./scripts/Business_Objects/updateOutStatus\")\r\nfunction getCurrentDateTime() {\r\n    const now = new Date(); // Gets the current date and time in UTC\r\n    const istOffset = (5 * 30); // IST is UTC + 5 hours and 30 minutes\r\n    const istTime = new Date(now.getTime() + istOffset); // Adjust to IST\r\n\r\n    const year = istTime.getFullYear();\r\n    const month = (istTime.getMonth() + 1).toString().padStart(2, '0'); // months start at 0\r\n    const day = istTime.getDate().toString().padStart(2, '0');\r\n    const hours = istTime.getHours().toString().padStart(2, '0');\r\n    const minutes = istTime.getMinutes().toString().padStart(2, '0');\r\n    const seconds = istTime.getSeconds().toString().padStart(2, '0');\r\n    \r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n}\r\nexports.getCurrentDateTime = getCurrentDateTime\r\n\r\nfunction getCurrentDateTimeUTC() {\r\n\tlet now = new Date();\r\n\tlet year = now.getUTCFullYear();\r\n\tlet month = String(now.getUTCMonth() + 1).padStart(2, '0');\r\n\tlet day = String(now.getUTCDate()).padStart(2, '0');\r\n\tlet hours = String(now.getUTCHours()).padStart(2, '0');\r\n\tlet minutes = String(now.getUTCMinutes()).padStart(2, '0');\r\n\tlet seconds = String(now.getUTCSeconds()).padStart(2, '0');\r\n\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}Z`;\r\n}\r\nexports.getCurrentDateTimeUTC = getCurrentDateTimeUTC\r\n\r\nfunction generateUniqueId(){\r\n    let now = new Date();\r\n    let year = now.getFullYear().toString().slice(-2);\r\n    let month = String(now.getMonth() + 1).padStart(2, '0');\r\n    let date = String(now.getDate()).padStart(2, '0');\r\n    let hours = String(now.getHours()).padStart(2, '0');\r\n    let minutes = String(now.getMinutes()).padStart(2, '0');\r\n    let seconds = String(now.getSeconds()).padStart(2, '0');\r\n    let milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r\n    let randomNumber = Math.floor(Math.random() * 1000000).toString().padStart(6, '0');\r\n    let uniqueId = `${date}${month}${year}${hours}${minutes}${seconds}${milliseconds}${randomNumber}`;\r\n    return uniqueId;\r\n}\r\n\r\nfunction GetNewToken(){\r\n    lhdn = NewLHDN()\r\n    lhdn_token_data = CralDB.QueryByComp(\"select * from {{e_inv_parameter}} where seqn=0\", jscall.company)\r\n    if (lhdn_token_data.length == 0){\r\n        // jscall_error = \"Unable to get Client Id \u0026 Client Secret\"\r\n        CralUtil.LogInfo(\"Unable to get Client Id \u0026 Client Secret\", \"LHDN Token\", lhdn_token_data)\r\n        return false\r\n    } else {\r\n        lhdn_response = lhdn.Login(lhdn_token_data[0].lhdn_user, lhdn_token_data[0].lhdn_pswd, \"client_credentials\", \"InvoicingAPI\", lhdn_token_data[0].istaxpayer, lhdn_token_data[0].inter_tin)\r\n        switch (lhdn_response.Result.Status){\r\n            case 200:\r\n                CralUtil.SetLocal(\"lhdn_token\" + jscall.company.toString(), lhdn_response.Result.Response.access_token)\r\n                CralUtil.SetLocal(\"lhdn_vld\" + jscall.company.toString(), lhdn_response.Result.Response.expiresin)\r\n                CralUtil.LogInfo(\"Successfully Generated New LHDN Token\", \"lhdn_token\" + jscall.company.toString(), lhdn_response.Result.Response)\r\n                return lhdn_response.Result.Response.access_token\r\n                break\r\n            case 400:\r\n                // jscall_error = \"400\" + lhdn_response.Result.error\r\n                CralUtil.LogInfo(\"400\" + lhdn_response.Result.error, \"LHDN Token\", lhdn_response.Result.Response)\r\n                return false\r\n                break\r\n            case 404:\r\n                // jscall_error = \"404\" + lhdn_response.Result.message\r\n                CralUtil.LogInfo(\"404\" + lhdn_response.Result.message, \"LHDN Token\", lhdn_response.Result.Response)\r\n                return false\r\n                break\r\n            default:\r\n                if (typeof lhdn_response.Result.Response == \"string\"){\r\n                    CreatePortalValidation(invID, 0,lhdn_response.Result.Response, \"\")\r\n                    return false\r\n                }\r\n                // jscall_error = lhdn_response.Result.Status.toString() + \" - \" + JSON.stringify(lhdn_response.Result.Response)\r\n                CralUtil.LogInfo(lhdn_response.Result.Status.toString(), \"LHDN Token\", lhdn_response.Result.Response)\r\n                return false;\r\n        }\r\n    }\r\n    return \"\"\r\n}\r\n\r\nfunction get_lhdn_token(){\r\n    token = CralUtil.GetLocal(\"lhdn_token\" + jscall.company.toString())\r\n    token_vld = CralUtil.GetLocal(\"lhdn_vld\" + jscall.company.toString())\r\n      if (token == undefined || token == null || token == \"\" || token_vld == undefined || token_vld == null || token_vld \u003c getCurrentDateTime() || token_vld == \"\"){\r\n          newToken = GetNewToken()\r\n          if (newToken == false || newToken == \"\"){\r\n              return false\r\n          }\r\n          return newToken\r\n      } else {\r\n          return token\r\n      }\r\n    return \"\"\r\n}\r\nexports.get_lhdn_token = get_lhdn_token\r\n\r\n// Function Added on 5th Sept.\r\nfunction submitEinvoiceToLHDN(einv_number){\r\n\r\n    //issuance Date 12-09-2024 line 105 - 126 (Start)\r\n    einvDate = CralDB.QueryByComp(\"select e_inv_no,e_invdt from {{einv_header}} where e_inv_no = '$1'\", jscall.company,einv_number);\r\n    temp = einvDate[0].e_invdt\r\n    invDate = temp.toLocaleString().substring(0,19)\r\n    currentDate = getCurrentDateTimeUTC() //Line 177\r\n    currentDate_UTC = currentDate.substring(0,19)\r\n    isoDateTimeString = new Date(invDate.replace(' ', 'T')).getTime();\r\n    isoDateTimeString_UTC = new Date(currentDate_UTC.replace(' ', 'T')).getTime();\r\n\r\n    hours = convert2hours((isoDateTimeString_UTC - isoDateTimeString)/ (1000 * 60 * 60)) // Line 188\r\n    // return hours\r\n    invHours = hours.split(':')\r\n    // return invHours[0]\r\n    if(invHours[0] \u003e 72){\r\n        \r\n        currentDate = {\r\n            \"e_inv_no\":einvDate[0].e_inv_no,\r\n            \"e_invdt\": getCurrentDateTimeUTC()\r\n        }\r\n        result = CralDB.PublishTopic(\"einv_header\", jscall.company, \"Update\", currentDate, jscall.user)\r\n        // return result\r\n    }\r\n    // End\r\n    forfilling = check_forFiling(einv_number)\r\n    // if (!check_forFiling(einv_number)){\r\n    if (forfilling == \"\"){\r\n        var doc_json = BuildJSONFormat(einv_number)\r\n        println(\"After Doc\")\r\n        if (typeof doc_json == \"string\"){\r\n            println(\"Error Doc\")\r\n            CralUtil.LogInfo(\"Error While JSON document Creation\", einv_number, doc_json)\r\n            CreatePortalValidation(einv_number, 0, doc_json, \"\")\r\n            return {\r\n                \"invoice\": einv_number,\r\n                \"error\": \"Error While Submitting - \" + doc_json,\r\n                \"status\": false\r\n            }\r\n        } else {\r\n            // Convert JSON to XML and hash the doc to string.\r\n            println(\"Success Doc\")\r\n            submission_ret = SubmitTOLHDN(doc_json.document, einv_number)\r\n            if (submission_ret == false){\r\n                jscall_error = \"Error while Submitting\"\r\n                return {\r\n                    \"invoice\": einv_number,\r\n                    \"error\": \"Error While Submitting\",\r\n                    \"status\": false\r\n                }\r\n            } else {\r\n                sub_data = SubmissionUpdate(submission_ret)\r\n                if (CralDB.QueryByComp(\"select einv_code from {{einv_validation}} where einv_code='$1'\", jscall.company, einv_number).length == 0){\r\n                    return {\r\n                        \"invoice\": einv_number,\r\n                        \"error\": \"\",\r\n                        \"status\": true\r\n                    }\r\n                } else {\r\n                    return {\r\n                        \"invoice\": einv_number,\r\n                        \"error\": \"Unable to Submit to LHDN. Invoice is Under Validation.\",\r\n                        \"status\": false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            \"invoice\": einv_number,\r\n            \"error\": \"Invoice is under For Filing. \" + forfilling,\r\n            \"status\": false\r\n        }\r\n    }\r\n}\r\n//issuance Date 12-09-2024 line 177 - 201\r\n// function getCurrentDateTimeUTC_issuance_Date() {\r\n// \tlet now = new Date();\r\n// \tlet year = now.getUTCFullYear();\r\n// \tlet month = String(now.getUTCMonth() + 1).padStart(2, '0');\r\n// \tlet day = String(now.getUTCDate()).padStart(2, '0');\r\n// \tlet hours = String(now.getUTCHours()).padStart(2, '0');\r\n// \tlet minutes = String(now.getUTCMinutes()).padStart(2, '0');\r\n// \tlet seconds = String(now.getUTCSeconds()).padStart(2, '0');\r\n// \treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n// }\r\n\r\nfunction convert2hours(wholeNum){\r\n    const decimalHours = wholeNum;\r\n\r\n    // Extract the whole number part (hours)\r\n    const hours = Math.floor(decimalHours);\r\n\r\n    // Extract the fractional part, convert it to minutes\r\n    const minutes = Math.floor((decimalHours - hours) * 60);\r\n\r\n    // Extract the remaining fractional part, convert it to seconds\r\n    const seconds = Math.round(((decimalHours - hours) * 60 - minutes) * 60);\r\n\r\n    return (`${hours}:${minutes}:${seconds}`);\r\n}\r\n\r\n\r\n\r\nexports.submitEinvoiceToLHDN = submitEinvoiceToLHDN\r\n\r\nfunction check_forFiling(einv_no){\r\n    einvoice_header = CralDB.QueryByComp(`select doct,org_doc_uuid,org_e_inv_no from {{einv_header}} where e_inv_no='${einv_no}'`, jscall.company)\r\n    if ((einvoice_header[0]?.doct != \"01\" \u0026\u0026 einvoice_header[0]?.doct != \"11\") \u0026\u0026 (!einvoice_header[0]?.org_e_inv_no || !einvoice_header[0]?.org_doc_uuid)){\r\n        // return true\r\n        return \"Original Document Reference is Mandatory\" //26-09-2024 Parthi\r\n    }\r\n    einvoice_lines = CralDB.QueryByComp(`select line from {{einv_lines}} where e_inv_no='${einv_no}' and cvat='E' and ceno=''`, jscall.company)\r\n    if (einvoice_lines?.length){\r\n        // return true\r\n        return \"Tax Exemption Certificate Number is Mandatory\" //26-09-2024 Parthi\r\n    }\r\n    // return false\r\n    return \"\" //26-09-2024 Parthi\r\n}\r\n\r\nfunction SubmitTOLHDN(json_doc, invID){\r\n    xmlHashDoc = getHashDocument(json_doc, invID)\r\n    if (xmlHashDoc){\r\n        return SubmitDocuments([xmlHashDoc], [invID])\r\n    }\r\n    return false\r\n}\r\nexports.SubmitTOLHDN = SubmitTOLHDN\r\n\r\nfunction getHashDocument(json_doc, invID){\r\n    lhdn = NewLHDN()\r\n    xml_result = lhdn.JSONtoXML(JSON.stringify(json_doc))\r\n    CralUtil.LogInfo(\"Error: XML\", invID, xml_result.Result.Error)\r\n    if (xml_result.Result.Error || (xml_result.Result.XML == undefined || xml_result.Result.XML == null)){\r\n        CreatePortalValidation(invID, 0, \"Conversion Error: \" + xml_result.Result.Error, \"\")\r\n        return false;\r\n    } else {\r\n        // Sign the Document\r\n        sign_doc = lhdn.SignDocument(\"XML\", invID, xml_result.Result.XML)\r\n        // println(JSON.stringify(sign_doc))\r\n        CralUtil.LogInfo(\"SignDoc\", \"Invoice\", sign_doc)\r\n        if (sign_doc.Result.Error || sign_doc.Result.SignedDoc == undefined || sign_doc.Result.SignedDoc == null){\r\n            CreatePortalValidation(invID, 0, \"Signature Error: \" + sign_doc.Result.Error, \"\")\r\n            return false;\r\n        } else {\r\n            return sign_doc.Result.SignedDoc\r\n        }\r\n    }\r\n}\r\n\r\nfunction SubmitDocuments(docs, docID){\r\n    lhdn = NewLHDN()\r\n    token = get_lhdn_token()\r\n    if (token == false){\r\n        CreatePortalValidation(invID, 0, \"Unable to get LHDN Access Token\", \"\")\r\n        return false;\r\n    } else {\r\n        submit_document = {\r\n            \"documents\": docs\r\n        }\r\n        CralUtil.LogInfo(\"SubmissionObject\", \"InvoiceSubmission\", {\"Payload\": submit_document, \"Invoices\": docID})\r\n        sub_result = lhdn.SubmitDocument(token, JSON.stringify(submit_document))\r\n        CralUtil.LogInfo(\"InvoiceSubmission\", \"\", sub_result)\r\n        switch (sub_result.Result.Status){\r\n            case 202:\r\n                return sub_result.Result.Response\r\n                break\r\n            case 400:\r\n                docID.forEach(documentID =\u003e {\r\n                    CreateLHDN_Validation(documentID, 0, sub_result.Result.Response.error, [])\r\n                })\r\n                return false;\r\n                break;\r\n            case 422:\r\n                vald_catg = \"20\"\r\n                error_Message = sub_result.Result.Response.error;\r\n                break;\r\n            case 429:\r\n                vald_catg = \"20\";\r\n                error_Message = sub_result.Result.Response.message;\r\n                break;\r\n            case 401:\r\n                vald_catg = \"20\";\r\n                error_Message = sub_result.Result.Response.message;\r\n                break;\r\n            case 500:\r\n                vald_catg = \"20\"\r\n                // Submission Error: 500 - \"invalid character '\u003c' looking for beginning of value\"\r\n                if (typeof sub_result.Result.Response == \"string\"){\r\n                    error_Message = `Submission Error: ${sub_result.Result.Status.toString()} - ${sub_result.Result.Response}`\r\n                } else {\r\n                    error_Message = \"Submission Error: \" + sub_result.Result.Status.toString() + \" - \" + JSON.stringify(sub_result.Result.Response)\r\n                }\r\n                break;\r\n            case 1001:\r\n                vald_catg = \"10\"\r\n                if (typeof sub_result.Result.Response == \"string\"){\r\n                    error_Message = sub_result.Result.Response\r\n                } else {\r\n                    error_Message = \"Submission Error: \" + sub_result.Result.Status.toString() + \" - \" + JSON.stringify(sub_result.Result.Response)\r\n                }\r\n                break;\r\n            default:\r\n                vald_catg = \"20\"\r\n                if (typeof sub_result.Result.Response == \"string\"){\r\n                    error_Message = `Submission Error: ${sub_result.Result.Status.toString()} - ${sub_result.Result.Response}`\r\n                } else {\r\n                    error_Message = \"Submission Error: \" + sub_result.Result.Status.toString() + \" - \" + JSON.stringify(sub_result.Result.Response)\r\n                }\r\n                break;\r\n        }\r\n        docID?.forEach(doc =\u003e {\r\n            CreateValidation(doc, 0, vald_catg, sub_result.Result.Status.toString(), error_Message, \"\", \"Submission\", \"\")\r\n        })\r\n    }\r\n    return false\r\n}\r\n\r\nfunction SubmissionUpdate(submitted_obj){\r\n    debug(\"Submission Update\")\r\n    sub_results = []\r\n    debug(submitted_obj)\r\n    if (submitted_obj.acceptedDocuments != undefined || submitted_obj.acceptedDocuments != null || submitted_obj.acceptedDocuments.length != 0){\r\n        debug(\"In Submission\")\r\n        for (i = 0; i\u003csubmitted_obj.acceptedDocuments.length; i++){\r\n            debug(\"Accept\")\r\n            sub_doc = submitted_obj.acceptedDocuments[i]\r\n            sub_rec = CralDB.QueryByComp(\"select e_inv_no,sup_email,buy_email,sup_name,buy_name,dataset,comp from {{einv_header}} where e_inv_no='$1'\", jscall.company, sub_doc.invoiceCodeNumber)\r\n            debug(sub_rec)\r\n            // status_api = executeCWSCall(\"POST\", api_url[0].cws_url + \"/api/\" + jscall.company.toString() + \"/portaltoln\", input_data)\r\n            if (sub_rec.length != 0){\r\n                sub_rec_payload = sub_rec[0]\r\n                sub_rec_payload.submission_uid = submitted_obj.submissionUid\r\n                sub_rec_payload.doc_uuid = sub_doc.uuid\r\n                sub_rec_payload.einv_stat = \"20\"\r\n                sub_rec_payload.esta = \"20\"\r\n                sub_result = CralDB.PublishTopic(\"einv_header\", jscall.company, \"Update\", sub_rec_payload, jscall.user)\r\n                debug(sub_result)\r\n                sub_lines = CralDB.QueryByComp(\"select e_inv_no,line from {{einv_lines}} where e_inv_no='$1'\", jscall.company, sub_doc.invoiceCodeNumber)\r\n                sub_line_results = []\r\n                for (j = 0; j \u003c sub_lines.length; j++){\r\n                    sub_line_payload = sub_lines[j]\r\n                    sub_line_payload.lsta = \"20\"\r\n                    sub_line_results.push(CralDB.PublishTopic(\"einv_lines\", jscall.company, \"Update\", sub_line_payload, jscall.user))\r\n                }\r\n                sub_result.Lines = sub_line_results\r\n                sub_results.push(sub_result)\r\n                \r\n                if (UpdateStatusToSource(sub_doc.invoiceCodeNumber, \"SUBMITTED TO LHDN\", \"\") != true){\r\n                    // Source is not Updated. \r\n                }\r\n            } else {\r\n                // Accepted document E-Invoice Code Not Found.\r\n            }\r\n        }\r\n    } else {\r\n        // Submission Object has null value.\r\n    }\r\n\r\n    if (submitted_obj.rejectedDocuments != undefined || submitted_obj.rejectedDocuments != null || submitted_obj.rejectedDocuments.length != 0){\r\n        for (i = 0; i\u003csubmitted_obj.rejectedDocuments.length ; i++){\r\n            rej_doc = submitted_obj.rejectedDocuments[i]\r\n            validation_result = CreateLHDN_Validation(rej_doc.invoiceCodeNumber, 0, rej_doc.error, [])\r\n            sub_results.push(validation_result)\r\n        }\r\n    };\r\n    return sub_results\r\n}\r\nexports.SubmissionUpdate = SubmissionUpdate\r\n\r\nfunction executeCWSm(credentials, company, dllName, funcName, parameter){\r\n    in_Obj = {\r\n        verb: \"Push\",\r\n        Request: {\r\n            RequestID: generateUniqueId(),\r\n            CallBackBo: credentials.cb_bo,\r\n            CallBackFn: credentials.cb_func,\r\n            Method: \"getdata\",\r\n            Payload: {\r\n                CompanyNo: company,\r\n                DllName: dllName,\r\n                FuncName: funcName,\r\n                SetCommit: false,\r\n                Parameters: parameter\r\n            }\r\n        }\r\n    }\r\n    println(\"In Object\", JSON.stringify(in_Obj))\r\n    debug(JSON.stringify(in_Obj))\r\n    var out = SendToWS(credentials.ws_endpoint, in_Obj)\r\n    println(\"Out\",JSON.stringify(out))\r\n    debug(JSON.stringify(out))\r\n    return out\r\n}\r\nexports.executeCWSm = executeCWSm\r\n\r\nfunction UpdateStatusToSource(e_inv_no, stat, vld_time){\r\n    einvoice_data = CralDB.QueryByComp(`select e_inv_no,comp,tran,idoc,dataset,submission_uid,doc_uuid,src_type from {{einv_header}} where e_inv_no='${e_inv_no}'`, jscall.company)\r\n    // debug(einvoice_data)\r\n    // if (einvoice_data?.length != 0){\r\n    //     // Input einvoice_data[0].e_inv_no\r\n    // }\r\n    update_result = []\r\n    einv_data = CralDB.QueryByComp(`select data_set as dataset,tran,idoc,CONCAT(tran,idoc) as \"e_inv_no\", comp, src_type from {{conso_header}} where conso_inv='${e_inv_no}'`,jscall.company)\r\n    if (einv_data.length == 0){\r\n        update_result.push({\r\n            \"Status\": submission_update(einvoice_data[0], stat, vld_time),\r\n            \"InvoiceNumber\": einvoice_data[0].e_inv_no\r\n        })\r\n    } else {\r\n        einv_data.forEach(inv =\u003e {\r\n            inv[\"submission_uid\"] = einvoice_data[0].submission_uid\r\n            inv[\"doc_uuid\"] = einvoice_data[0].doc_uuid\r\n        })\r\n        for (var s=0; s\u003ceinv_data?.length; s++){\r\n            update_result.push({\r\n                \"Status\": submission_update(einv_data[s], stat, vld_time),\r\n                \"InvoiceNumber\": einv_data[s].e_inv_no\r\n            })\r\n        }\r\n    }\r\n    CralUtil.LogInfo(\"StatusUpdation\", e_inv_no, update_result)\r\n}\r\nexports.UpdateStatusToSource = UpdateStatusToSource\r\n\r\nfunction CreateOutStatus(dataset, company, inv_no, status, lhdn_date, submission_id, uuid, src_type) {\r\n    let statusObj = {}\r\n\r\n    statusObj[\"data_set\"] = dataset\r\n    statusObj[\"invoice_no\"] = inv_no\r\n    statusObj[\"company\"] = company\r\n    statusObj[\"status\"] = status \r\n    statusObj[\"lhdn_date\"] = lhdn_date \r\n    statusObj[\"sub_uid\"] = submission_id\r\n    statusObj[\"uuid\"] = uuid\r\n    statusObj[\"src_type\"] = src_type\r\n   let result = CralDB.PublishTopic(\"invoicestatusout\", jscall.company, \"Upsert\", statusObj,jscall.User)\r\n    if (result?.Success == true ){\r\n        return true \r\n    }\r\n    return false \r\n}\r\n\r\nfunction submission_update(inv_obj, stat, vld_time){\r\n    ds_credential = CralDB.QueryByComp(`select * from {{ds_parameter}} where data_set='${inv_obj.dataset}'`, jscall.company)\r\n    if (ds_credential?.length != 0){\r\n        switch(ds_credential[0].type){\r\n            case \"cwsm\":\r\n                input_parm = [\r\n                    {\r\n                        ParameterNo: 1,\r\n                        Type: \"json\",\r\n                        Value: {\r\n                            \"Company\": inv_obj.comp,\r\n                            \"E_InvNumber\": inv_obj.e_inv_no,\r\n                            \"InvoiceNumber\": inv_obj.idoc,\r\n                            \"E_InvDateTime\": vld_time,\r\n                            \"E_InvStatus\": stat,\r\n                            \"ErrorMessage\": \"\",\r\n                            \"TransactionType\": inv_obj.tran,\r\n                            \"SUID\": inv_obj.submission_uid,\r\n                            \"UUID\": inv_obj.doc_uuid\r\n                        }\r\n                    }\r\n                ]\r\n                cwsm_result = executeCWSm(ds_credential[0], jscall.company, \"otdeindll000100\", \"tdein.dll000100.update.status.Einvoice.portal2Ln\", input_parm)\r\n                return true\r\n            break;\r\n            default:\r\n                return CreateOutStatus(inv_obj.dataset, inv_obj.comp, inv_obj.e_inv_no, stat, \r\n                                vld_time, inv_obj.submission_uid, inv_obj.doc_uuid, \r\n                                CralUtil.GetListDesc(\"src_inv_type\", inv_obj.src_type))\r\n                // statusObj = {\r\n                //     \"data_set\": einvoice_data[0].dataset,\r\n                //     \"invoice_no\": einvoice_data[0].e_inv_no,\r\n                //     \"status\": stat,\r\n                //     \"company\": einvoice_data[0].comp,\r\n                //     \"lhdn_date\": vld_time,\r\n                //     \"sub_uid\": einvoice_data[0].submission_uid,\r\n                //     \"uuid\": einvoice_data[0].doc_uuid,\r\n                //     \"src_type\": CralUtil.GetListDesc(\"src_inv_type\", einvoice_data[0].src_type)\r\n                // }\r\n                // debug(statusObj)\r\n                // let result = CralDB.PublishTopic(\"invoicestatusout\", jscall.company, \"Upsert\", statusObj,jscall.User)\r\n                // if (result?.Success == true ){\r\n                //     return true \r\n                // }\r\n                // return false \r\n            break\r\n        }\r\n    }\r\n}\r\nfunction getLNtoken(){\r\n    api_data = CralDB.QueryByComp(\"select * from {{e_inv_parameter}} where seqn=0\", jscall.company)\r\n    api_info = {\r\n        \"url\":api_data[0].cws_url,\r\n        \"userdetails\":{\r\n            \"username\":api_data[0].cws_user,\r\n            \"password\":api_data[0].cws_pswd\r\n        }\r\n    }\r\n\r\n    token_info = jscall.ExecuteAPI(\"POST\", api_info.url + \"/auth\", api_info.userdetails)\r\n    if (token_info.StatusCode != 200){\r\n        return \"\"\r\n    } else {\r\n        response_data = JSON.parse(token_info.Data)\r\n        return response_data.Token\r\n    }\r\n}\r\n\r\nfunction executeCWSCall(method, url, payload) {\r\n    ln_token = getLNtoken()\r\n    if (ln_token == \"\"){\r\n        return \"Unable to get CWS Token.\"\r\n    } else {\r\n        return jscall.ExecuteAPI(method, url, payload, \"token\", ln_token)\r\n    }\r\n}\r\n// exports.executeCWSCall = executeCWSCall\r\n\r\n// function UpdateStatusToSource(einv_number, status, lhdn_vld_dt){\r\n//     src_update = CralDB.QueryByComp(\"select comp,tran,idoc,dataset from {{einv_header}} where e_inv_no='\" + einv_number +\"'\", jscall.company)\r\n//     src_update_lines = CralDB.QueryByComp(\"select line from {{einv_lines}} where e_inv_no='\" + einv_number + \"' order by line\", jscall.company)\r\n//     lines = []\r\n//     for (i=0;i\u003csrc_update_lines.length;i++){\r\n//         lines.push({\r\n//             \"Line_No\": src_update_lines[i].line,\r\n//             \"Status\": status,\r\n//             \"ErrorMessage\": \"\"\r\n//         })\r\n//     }\r\n//     update_payload = {\r\n//         \"Company\": src_update[0].comp,\r\n//         \"TransactionType\": src_update[0].tran,\r\n//         \"InvoiceNumber\": src_update[0].idoc,\r\n//         \"E_InvDateTime\": lhdn_vld_dt,\r\n//         \"E_InvStatus\": status,\r\n//         \"ErrorMessage\": \"\",\r\n//         \"DocumentType\": \"\",\r\n//         \"Lines\": lines\r\n//     }\r\n//     ds_type = CralDB.QueryByComp(\"select type from ds_parameter where data_set='$1'\", jscall.company, src_update[0].dataset)\r\n//     if (ds_type.length != 0){\r\n//         switch(ds_type[0].type){\r\n//             case \"cws\":\r\n//                     api_url = CralDB.QueryByComp(\"select cws_url from {{e_inv_parameter}} where seqn=0\", 0)\r\n//                     input_data = {\r\n//                         \"inpt.json\": update_payload\r\n//                     }\r\n//                     status_api = executeCWSCall(\"POST\", api_url[0].cws_url + \"/api/\" + jscall.company.toString() + \"/portaltolnDev\", input_data)\r\n//                     println(JSON.stringify(status_api))\r\n//                     if (status_api.StatusCode != 200){\r\n//                         return {\r\n//                             \"Error\":\"Unable to update to Source.\"\r\n//                         }\r\n//                     } else {\r\n//                         ret_stat = JSON.parse(status_api.Data)\r\n//                         ret_stat.Error_to_LN = \"\"\r\n//                         return ret_stat\r\n//                     }\r\n//             break\r\n//             case \"cwsm\":\r\n//             break\r\n//             // To do for filelist\r\n//             default:\r\n//                 return {\r\n//                     \"Error\":\"Outgoing Type is not defined in DS Parameter.\"\r\n//                 }\r\n//             break\r\n//         }\r\n//     } else {\r\n//         return {\r\n//             \"Error\":\"Unable to update to Source.\"\r\n//         }\r\n//     }\r\n// }\r\n// exports.UpdateStatusToSource = UpdateStatusToSource\r\n\r\nfunction CreateValidation(invCode, line_num, val_catg, err_code, err_mess, err_trgt, prop_path, details){\r\n    if (val_catg == \"10\" \u0026\u0026 err_code == \"\"){\r\n        err_code = \"PV\"\r\n    }\r\n    vald_payload = {\r\n        \"einv_code\": invCode,\r\n        \"einv_line\": line_num,\r\n        \"val_catg\": val_catg,\r\n        \"err_code\": err_code,\r\n        \"mess\": err_mess,\r\n        \"trgt\": err_trgt,\r\n        \"prop_path\": prop_path,\r\n        \"details\": details\r\n    }\r\n    // update_header = CralDB.QueryByComp(\"select comp,tran,idoc,line,e_inv_no from {{einv_header}} where e_inv_no='$1'\", jscall.company, invCode)[0]\r\n    // update_header.einv_stat = \"60\"\r\n    // update_header.val_err = val_catg\r\n    update_header = {\r\n        \"e_inv_no\": invCode,\r\n        \"einv_stat\": \"60\"\r\n    }\r\n    CralUtil.LogInfo(\"HeaderStatusUpdate\", invCode, CralDB.PublishTopic(\"einv_header\", jscall.company, \"Update\", update_header, jscall.user))\r\n    return CralDB.PublishTopic(\"einv_validation\", jscall.company, \"Insert\", vald_payload, jscall.user)\r\n}\r\nexports.CreateValidation = CreateValidation\r\n\r\nfunction CreatePortalValidation(invCode, line_num, err_mess, err_propPath){\r\n    return CreateValidation(invCode, line_num, \"10\", \"\", err_mess, \"\", err_propPath, \"\")\r\n}\r\nexports.CreatePortalValidation = CreatePortalValidation\r\n\r\nfunction CreateLHDN_Validation(invCode, line_num, err_obj, valid_result){\r\n    err_code = (err_obj.code == \"\" || err_obj.code == undefined || err_obj.code == null)?\"\":err_obj.code;\r\n    err_message = (err_obj.message == \"\" || err_obj.message == undefined || err_obj.message == null)?\"\":err_obj.message;\r\n    err_target = (err_obj.target == \"\" || err_obj.target == undefined || err_obj.target == null)?\"\":err_obj.target;\r\n    err_propPath = (err_obj.propertyPath == \"\" || err_obj.propertyPath == undefined || err_obj.propertyPath == null)?\"\":err_obj.propertyPath;\r\n    line_num = getInvoiceLineIndex(err_propPath)\r\n    if (line_num != null){\r\n        line_num = CralDB.QueryByComp(\"select line from {{einv_lines}} where e_inv_no='$1' order by line\", jscall.company, invCode)[line_num].line\r\n    } else {\r\n        line_num = 0\r\n    }\r\n    valid_result.push(CreateValidation(invCode, line_num, \"20\", err_code, err_message, err_target, err_propPath, \"\"))\r\n    if (err_obj.details?.length != 0 \u0026\u0026 err_obj.details != null \u0026\u0026 err_obj.details != undefined){\r\n        for (j = 0; j\u003cerr_obj.details.length; j++){\r\n            valid_result = CreateLHDN_Validation(invCode, 0, err_obj.details[j], valid_result)\r\n        }\r\n    }\r\n    return valid_result\r\n    // return CreateValidation(invCode, line_num, \"20\", err_code, err_mess, err_trgt, prop_path, details)\r\n}\r\nexports.CreateLHDN_Validation = CreateLHDN_Validation\r\n\r\nfunction getInvoiceLineIndex(input) {\r\n    const regex = /InvoiceLine\\[(\\d+)\\]/;\r\n    const match = regex.exec(input);\r\n    return match ? parseInt(match[1], 10) : null;\r\n}\r\nexports.getInvoiceLineIndex = getInvoiceLineIndex\r\n\r\nfunction SendSubmissionMail(mail_input){\r\n    debug(\"Sending Mail\")\r\n    mail = {}\r\n    mail.To = []\r\n    mail.Cc = []\r\n    if (mail_input.supplier_mailID != \"\" \u0026\u0026 mail_input.supplier_mailID != null \u0026\u0026 mail_input.supplier_mailID != undefined){\r\n        mail.Cc.push(mail_input.supplier_mailID)\r\n    }\r\n    if (mail_input.buyer_mailID != \"\" \u0026\u0026 mail_input.buyer_mailID != null \u0026\u0026 mail_input.buyer_mailID != undefined){\r\n        mail.To.push(mail_input.buyer_mailID)\r\n    } else {\r\n        return\r\n    }\r\n    mail.Subject = mail_input.sname.split(\" \")[0] + \"_Invoice Submission_\" + mail_input.invCodeNum\r\n    mail.Template = \"lhdnStatus\"\r\n    mail.InputObject = {\r\n        \"supplier\": mail_input.bname,\r\n        \"invoice\": mail_input.invCodeNum,\r\n        \"dsca\": mail_input.Submission_Uid,\r\n        \"status\": mail_input.LHDNStatus\r\n    }\r\n    // mail.FileAttachments = [mail_input.Attachment]\r\n    pdf = printReportLayout(mail_input.invCodeNum)\r\n    if (pdf.result != \"\" \u0026\u0026 pdf.result != null \u0026\u0026 pdf.result != undefined){\r\n        mail.FileAttachments = [pdf.result]\r\n    } else {\r\n        // mail.FileAttachments = [\"fa8e1ea3-3c9f-40cf-a20b-f719630afa4d\"]\r\n    }\r\n    debug(JSON.stringify(mail))\r\n    debug(\"Mail Sent\")\r\n    return CralUtil.SendMail(mail)\r\n}\r\nexports.SendSubmissionMail = SendSubmissionMail\r\n\r\nfunction check_validations(EInvoiceCodeNumber){\r\n    debug(\"Checking...\")\r\n\r\n    eih_data = CralDB.QueryByComp(\"select * from {{einv_header}} where e_inv_no='$1'\", jscall.company, EInvoiceCodeNumber)\r\n    if (eih_data?.length == 0){\r\n        // jscall_error = \"Record not found\"\r\n        CralUtil.LogInfo(\"Check Invoice Validation\", EInvoiceCodeNumber, eih_data)\r\n        return false\r\n    } else {\r\n\r\n        // Skip if skipMaster is Enabled.\r\n        isSkip = CralDB.QueryByComp(`select skip_master from {{entity_data_set}} where sup_company=${eih_data[0].comp} and data_set='${eih_data[0].dataset}'`, jscall.company)[0]?.skip_master\r\n        CralUtil.LogInfo(\"SkipPV\", eih_data[0].e_inv_no, isSkip)\r\n        if (isSkip){\r\n            return true\r\n        }\r\n\r\n        core_fields_valid(EInvoiceCodeNumber)\r\n        debug(\"After Core Validation\")\r\n        if (eih_data[0].s_line_cnt != eih_data[0].line_cnt){\r\n            CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Line Count Miss Match with Source.\", \"\")\r\n        }\r\n        debug(\"AFter Line Count\")\r\n\r\n        // TIN Checking From PV is Diabled\r\n        \r\n        // if (eih_data[0].sctg != \"30\"){\r\n        //     let [sup_id_val, sup_id_type] = get_reg_num_type(eih_data[0].sup_reg_brn, eih_data[0].sup_reg_nric, eih_data[0].sup_reg_army, eih_data[0].sup_reg_passport)\r\n        //     debug(eih_data[0].sup_tin, sup_id_type, sup_id_val)\r\n        //     if( validate_tin(eih_data[0].sup_tin, sup_id_type, sup_id_val) != true){\r\n        //         CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Supplier TIN Validation Failed\", \"Supplier\")\r\n        //     }\r\n        // }\r\n        // if (eih_data[0].sctg != \"20\"){\r\n        //     let [buy_id_val, buy_id_type] = get_reg_num_type(eih_data[0].buy_reg_brn, eih_data[0].buy_reg_nric, eih_data[0].buy_reg_army, eih_data[0].buy_reg_passport)\r\n        //     if (eih_data[0].inv_bp != \"\" \u0026\u0026 eih_data[0].inv_bp != null \u0026\u0026 eih_data[0].inv_bp != undefined){\r\n        //         if( validate_tin(eih_data[0].buy_tin, buy_id_type, buy_id_val) != true){\r\n        //             CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Buyer TIN Validation Failed\", \"Buyer\")\r\n        //         }\r\n        //     }\r\n        // }\r\n        // let [ship_id_val, ship_id_type] = get_reg_num_type(eih_data[0].ship_reg_brn, eih_data[0].ship_reg_nric, eih_data[0].ship_reg_army, eih_data[0].ship_reg_passport)\r\n        // if (eih_data[0].ship_tin \u0026\u0026 ship_id_val){\r\n        //     if( validate_tin(eih_data[0].ship_tin, ship_id_type, ship_id_val) != true){\r\n        //         CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Shipper TIN Validation Failed\", \"Shipper\")\r\n        //     }\r\n        // }\r\n        \r\n        if (eih_data[0].doct == \"02\" || eih_data[0].doct == \"12\"){\r\n            if (!eih_data[0].org_e_inv_no){\r\n                // To Change this as go to For filing\r\n                // CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Reference Document is missing (E-Invoice Number)\")\r\n            }\r\n            if (!eih_data[0].org_doc_uuid){\r\n                // To Change this as go to For filing\r\n                // CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Reference Document is missing (Document UUID)\")\r\n            }\r\n        }\r\n        if (CralDB.QueryByComp(\"select einv_code from {{einv_validation}} where einv_code='$1'\", jscall.company, eih_data[0].e_inv_no)?.length == 0){\r\n            if (eih_data[0].err_msg != \"\" || eih_data[0].einv_stat != \"10\"){\r\n                resolved_update = {\r\n                    \"e_inv_no\": eih_data[0].e_inv_no,\r\n                    \"err_msg\": \"\",\r\n                    \"einv_stat\": \"10\"\r\n                }\r\n                if (eih_data[0].esta == \"10\"){\r\n                    resolved_update[\"e_invdt\"] = getCurrentDateTimeUTC()\r\n                }\r\n                CralDB.PublishTopic(\"einv_header\", jscall.company, \"Update\", resolved_update, jscall.user)\r\n            };\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\nexports.check_validations = check_validations\r\n\r\nfunction validate_tin(tin, idType, idVal){\r\n    lhdn = NewLHDN()\r\n    token = get_lhdn_token()\r\n    if (token == false){\r\n        return false;   \r\n    } else {\r\n        lhdn_response = lhdn.ValidateTaxPayerTIN(token, tin, idType, idVal)\r\n        switch(lhdn_response.Result.Status){\r\n            case 200:\r\n                return lhdn_response.Result.Response\r\n                break;\r\n            default:\r\n                // jscall_error = lhdn_response.Result.Status + \" - \" + JSON.stringify(lhdn_response.Result.Response)\r\n                return false;\r\n                break\r\n        }\r\n    }\r\n    return false\r\n}\r\nexports.validate_tin = validate_tin\r\n// function check_mapping_header(currency, taxt, invNum){\r\n//     // if (currency != \"\" \u0026\u0026 taxt != \"\" \u0026\u0026 currency != undefined \u0026\u0026 taxt != undefined \u0026\u0026 currency != null \u0026\u0026 taxt != null){\r\n//     //     return true\r\n//     // }\r\n//     if (currency == \"\" || currency == null || currency == undefined){\r\n//         // CreatePortalValidation(invNum, 0, \"Unmapped Currency Code.\", \"Currency\")\r\n//         CreateValidation(invNum, 0, \"10\", \"MAP\", \"Unmapped Currency Code\", \"Invoice.Map\", \"\", \"\")\r\n//     }\r\n//     if (taxt == \"\" || taxt == null || taxt == undefined){\r\n//         // CreatePortalValidation(invNum, 0, \"Unmapped Tax Code\", \"Unmapped Tax Code\")\r\n//         CreateValidation(invNum, 0, \"10\", \"MAP\", \"Unmapped Tax Code\", \"Invoice.Map\", \"\", \"\")\r\n//     }\r\n// }\r\n\r\nfunction core_fields_valid(EInvoiceCodeNumber){\r\n    core_field_err = \"\"\r\n    doc_header = CralDB.QueryByComp(\"select * from {{einv_header}} where e_inv_no='$1'\", jscall.company, EInvoiceCodeNumber)\r\n    doc_line = CralDB.QueryByComp(\"select * from {{einv_lines}} where e_inv_no='$1'\", jscall.company, EInvoiceCodeNumber)\r\n    if (doc_header.length == 0 || doc_line == 0){\r\n        core_field_err = \"Record Not Found\"\r\n        return;\r\n    } else {\r\n        // if (doc_header[0].doct == \"11\" || doc_header[0].doct == \"12\"){\r\n        //     buyer_code = doc_header[0].ifbp\r\n        // } else {\r\n        //     buyer_code = doc_header[0].itbp\r\n        // }\r\n        // sup_field_vald(doc_header[0].comp, doc_header[0].e_inv_no)\r\n        // if (isConso != true){\r\n        //     buyer_field_vald(buyer_code, doc_header[0].e_inv_no)\r\n        // }\r\n\r\n        // Invoice Data\r\n        if (doc_header[0].doct == \"\"){\r\n            // core_field_err = core_field_err + \"E-Invoice Type Code is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"E-Invoice Type Code is Mandatory.\", \"Invoice\")\r\n        }\r\n        if (doc_header[0].ccur == \"\"){\r\n            // core_field_err = core_field_err + \"Currency code is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Currency code is Mandatory.\", \"Invoice\")\r\n        }\r\n\r\n        // Disabled on 23.12.2024 - FOC is applicable to LHDN Submission\r\n\r\n        // if (doc_header[0].tote == 0){\r\n        //     // core_field_err = core_field_err + \"Total Excluding Tax is Mandatory.\"\r\n        //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Total Excluding Tax is Mandatory.\", \"Invoice\")\r\n        // }\r\n        // if (doc_header[0].toti == 0){\r\n        //     // core_field_err = core_field_err + \"Total Including Tax is Mandatory\"\r\n        //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Total Including Tax is Mandatory.\", \"Invoice\")\r\n        // }\r\n        // if (doc_header[0].tpat == 0){\r\n        //     // core_field_err = core_field_err + \"Total Payable Amount is Mandatory\"\r\n        //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Total Payable Amount is Mandatory.\", \"Invoice\")\r\n        // }\r\n        \r\n\r\n\r\n        if (doc_header[0]?.cvat == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Tax Type is Mandatory\", \"Invoice\")\r\n        } //else {\r\n        //     // Total Tax amount per tax type\r\n        //     if (doc_header[0]?.tott == 0){\r\n        //         if (doc_header[0]?.cvat != \"06\" \u0026\u0026 doc_header[0]?.cvat != \"E\"){\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // Invoice Line\r\n        for (let i = 0; i \u003c doc_line.length; i++){\r\n            if (doc_line[i].clas == \"\"){\r\n                // core_field_err = core_field_err + \"Classification is Mandatory - Line \" + doc_line[i].line.toString() + \".\"\r\n                CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Classification is Mandatory.\", \"InvoiceLine\")\r\n            }\r\n            if (doc_line[i].item_desc == \"\"){\r\n                // core_field_err = core_field_err + \"Product Description is Mandatory - Line \" + doc_line[i].line.toString() + \".\"\r\n                CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Description of Product or Service is Mandatory.\", \"InvoiceLine\")\r\n            }\r\n            \r\n            // if (doc_line[i].pric == 0){\r\n            //     // core_field_err = core_field_err + \"Price is Mandatory - Line \" + doc_line[i].line.toString() + \".\"\r\n            //     CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Unit Price is Mandatory.\", \"InvoiceLine\")\r\n            // }\r\n            // if (doc_line[i].stot == 0){\r\n            //     // core_field_err = core_field_err + \"Sub Total is Mandatory - Line \" + doc_line[i].line.toString() + \".\"\r\n            //     CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Sub Total is Mandatory.\", \"InvoiceLine\")\r\n            // }\r\n            // if (doc_line[i].amti == 0){\r\n            //     // core_field_err = core_field_err + \"Total Excluding Tax is Mandatory - Line \" + doc_line[i].line.toString() + \".\"\r\n            //     CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Total Excluding Tax is Mandatory.\", \"InvoiceLine\")\r\n            // }\r\n\r\n            if (!doc_line[i].cvat){\r\n                CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Tax type is Mandatory.\", \"InvoiceLine\")\r\n            }\r\n\r\n            // if (doc_line[i].cvat == \"E\" \u0026\u0026 !doc_line[i].ceno){\r\n                // To check is exemption number is available.\r\n                \r\n                // To Change this as go to For Filing\r\n                // CreatePortalValidation(doc_header[0].e_inv_no, doc_line[i].line, \"Tax exemption reason is required\", \"TaxExemption\")\r\n            // }\r\n            // if (doc_line[i].cvat != \"E\" \u0026\u0026 doc_line[i].cvat != \"\" \u0026\u0026 doc_line[i].txai == 0){\r\n            //     //Tax Amount\r\n            // }\r\n\r\n        }\r\n\r\n        // Supplier Data\r\n        if (doc_header[0].sup_name == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Name is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_tin == \"\"){\r\n            // core_field_err = core_field_err + \"Supplier TIN is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier TIN is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_reg_nric == \"\" \u0026\u0026 doc_header[0].sup_reg_brn == \"\" \u0026\u0026 doc_header[0].sup_reg_passport == \"\" \u0026\u0026 doc_header[0].sup_reg_army == \"\"){\r\n            // core_field_err = core_field_err + \"Supplier Registeration No. is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Registration No. is Mandatory.\", \"Supplier\")\r\n        }\r\n        // if (doc_header[0].sup_sst == true \u0026\u0026 doc_header[0].sup_sst_reg == \"\"){\r\n        //     // core_field_err = core_field_err + \"Supplier SST is Mandatory.\"\r\n        //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier SST is Mandatory.\", \"Supplier\")\r\n        // }\r\n        // if (doc_header[0].sup_ttx == true \u0026\u0026 doc_header[0].sup_ttx_no == \"\"){\r\n        //     // core_field_err = core_field_err + \"Supplier Tourism Tax is Mandatory.\"\r\n        //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Tourism Tax is Mandatory.\", \"Supplier\")\r\n        // }\r\n        if (doc_header[0].sup_msic == \"\"){\r\n            // core_field_err = core_field_err + \"MSIC Code is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier MSIC code is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_badsca == \"\"){\r\n            // core_field_err = core_field_err + \"Business Activity is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Business Activity is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_adrs == \"\"){\r\n            // core_field_err = core_field_err + \"Supplier Address is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_cont_num == \"\"){\r\n            // core_field_err = core_field_err + \"Supplier Contact Number is Mandatory.\"\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Contact Number is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_adrs_line0 == \"\" \u0026\u0026 doc_header[0].sup_adrs_line1 == \"\" \u0026\u0026 doc_header[0].sup_adrs_line2 == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address - Line is Mandatory\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_city == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address - City is Mandatory.\", \"Supplier\")\r\n        }\r\n        if (doc_header[0].sup_cste == \"\"){\r\n            if (isSourceAddressAvil(doc_header[0].dataset, doc_header[0].sup_adrs, \"state\") == true){\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address - Unmapped State Code.\", \"Supplier\")\r\n            } else {\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address - State is Mandatory.\", \"Supplier\")\r\n            }\r\n        }\r\n        if (doc_header[0].sup_country == \"\"){\r\n            if (isSourceAddressAvil(doc_header[0].dataset, doc_header[0].sup_adrs, \"country\") == true){\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address - Unmapped Country Code.\", \"Supplier\")\r\n            } else {\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Supplier Address - Country is Mandatory.\", \"Supplier\")\r\n            }\r\n        }\r\n\r\n        // Buyer Data\r\n        if(doc_header[0].buy_name == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Name is Mandatory.\", \"Buyer\")\r\n        }\r\n        if(doc_header[0].buy_tin == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer TIN is Mandatory.\", \"Buyer\")\r\n        }\r\n        if(doc_header[0].buy_reg_nric == \"\" \u0026\u0026 doc_header[0].buy_reg_brn == \"\" \u0026\u0026 doc_header[0].buy_reg_passport == \"\" \u0026\u0026 doc_header[0].buy_reg_army == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Registration is Mandatory.\", \"Buyer\")\r\n        }\r\n        // if(doc_header[0].buy_sst == true \u0026\u0026 doc_buy[0].buy_sst_reg == \"\"){\r\n        //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer SST is Mandatory.\", \"Buyer\")\r\n        // }\r\n        if(doc_header[0].buy_adrs == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address is Mandatory.\", \"Buyer\")\r\n        }\r\n        if(doc_header[0].buy_cont_num == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Contact Number is Mandatory.\", \"Buyer\")\r\n        }\r\n        if(doc_header[0].buy_adrs_line0 == \"\" \u0026\u0026 doc_header[0].buy_adrs_line1 == \"\" \u0026\u0026 doc_header[0].buy_adrs_line2 == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address - Line is Mandatory.\", \"Buyer\")\r\n        }\r\n        if(doc_header[0].buy_city == \"\"){\r\n            CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address - City is Mandatory.\", \"Buyer\")\r\n        }\r\n        if(doc_header[0].buy_cste == \"\"){\r\n            if (isSourceAddressAvil(doc_header[0].dataset, doc_header[0].buy_adrs, \"country\") == true){\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address - Unmapped State Code.\", \"Buyer\")\r\n            } else {\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address - State is Mandatory.\", \"Buyer\")\r\n            }\r\n        }\r\n        if(doc_header[0].buy_country == \"\"){\r\n            if (isSourceAddressAvil(doc_header[0].dataset, doc_header[0].buy_adrs, \"country\") == true){\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address - Unmapped Country Code.\", \"Buyer\")\r\n            } else {\r\n                CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address - Country is Mandatory.\", \"Buyer\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isSourceAddressAvil(dset, adrCode, field){\r\n    adrs_data = CralDB.QueryByComp(\"select adrs_state,adrs_country from {{address_master}} where data_set='$1' and adrs_code='$2'\", jscall.company, dset, adrCode)\r\n    if (adrs_data?.length != 0){\r\n        switch(field){\r\n            case \"state\":\r\n                if(adrs_data[0]?.adrs_state != \"\" \u0026\u0026 adrs_data[0]?.adrs_state != null \u0026\u0026 adrs_data[0]?.adrs_state != undefined){\r\n                    return true\r\n                }\r\n            break\r\n            case \"country\":\r\n                if(adrs_data[0]?.adrs_country != \"\" \u0026\u0026 adrs_data[0]?.adrs_country != null \u0026\u0026 adrs_data[0]?.adrs_country != undefined){\r\n                    return true\r\n                }\r\n            break\r\n            default:\r\n            return false;\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction getClassificationGroup(){\r\n    clas_data = CralDB.QueryByComp(\"select classification from {{supplier_companies}} where sup_company=$1\", jscall.company, jscall.company)\r\n    if (clas_data.length != 0){\r\n        return clas_data[0].classification\r\n    }\r\n    return \"\"\r\n}\r\nexports.getClassificationGroup = getClassificationGroup\r\n\r\nfunction get_doc_type(doct_val)\r\n{\r\n    switch(doct_val.toUpperCase()){\r\n        case \"INVOICE\":\r\n            src_doc = \"10\"\r\n            break;\r\n        case \"CREDIT NOTE\":\r\n            src_doc = \"20\"\r\n            break;\r\n        case \"ADVANCE RECEIPT REQUEST\":\r\n            src_doc = \"40\"\r\n            break;\r\n        case \"PAY-FROM RECEIPT\":\r\n            src_doc = \"50\"\r\n            break;\r\n        case \"CORRECTION\":\r\n            src_doc = \"60\"\r\n            break;\r\n        case \"ADVANCE INVOICE\":\r\n            src_doc = \"30\"\r\n            break;\r\n        case \"ADVANCE PAYMENT REQUEST\":\r\n            src_doc = \"70\"\r\n            break;\r\n        case \"PRO FORMA INVOICE\":\r\n            src_doc = \"80\"\r\n            break;\r\n        case \"CUSTOMS INVOICE\":\r\n            src_doc = \"90\"\r\n            break;\r\n        case \"CONSIGNMENT INVOICE\":\r\n            src_doc = \"100\"\r\n            break;\r\n        case \"PURCHASE INVOICE\":\r\n            src_doc = \"200\"\r\n            break;\r\n        case \"PURCHASE CREDIT NOTE\":\r\n            src_doc = \"250\"\r\n            break;\r\n        case \"SALES INVOICE\":\r\n            src_doc = \"10\"\r\n            break;\r\n        default:\r\n            src_doc = doct_val\r\n            break;\r\n    }\r\n    doc_types = CralDB.QueryByComp(\"select * from {{e_inv_types}} where src_doc_type='$1'\", jscall.company, src_doc)\r\n    if (doc_types.length != 0){\r\n        if (doc_types[0].einv_code == \"\"){\r\n            // jscall_error = \"Mapping is Required for Document Type.\"\r\n        }\r\n        return doc_types[0].einv_code\r\n    }\r\n    // jscall_error = \"Document Type not Implemented.\"\r\n    return \"\"\r\n}\r\nexports.get_doc_type = get_doc_type\r\n\r\nfunction get_src_inv_type(get_src_type){\r\n    map_inv_typ = \"\"\r\n    switch(get_src_type?.toUpperCase()){\r\n        case \"MANUAL SALES\":\r\n            map_inv_typ = \"10\"\r\n            break;\r\n        case \"SALES ORDER\":\r\n            map_inv_typ = \"20\"\r\n            break;\r\n        case \"PURCHASE INVOICE\":\r\n            map_inv_typ = \"30\"\r\n            break;\r\n        case \"SALES INVOICE\":\r\n            map_inv_typ = \"40\"\r\n            break;\r\n         default:\r\n            map_inv_typ = get_src_type\r\n            break;\r\n    }\r\n    return map_inv_typ\r\n}\r\nexports.get_src_inv_type = get_src_inv_type\r\n\r\nfunction get_ccur(ccur_val, data_set){\r\n    ccur_data = CralDB.QueryByComp(\"select ccur from {{currency_codes}} where src_ccur='$1' and data_set='$2'\", jscall.company, ccur_val, data_set)\r\n    if (ccur_data.length != 0){\r\n        return ccur_data[0].ccur\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_ccur = get_ccur\r\n\r\nfunction get_paym(paym_val, data_set){\r\n    paym_data = CralDB.QueryByComp(\"select paym from {{payment_modes}} where src_paym='$1' and data_set='$2'\", jscall.company, paym_val, data_set)\r\n    if (paym_data.length != 0){\r\n        return paym_data[0].paym\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_paym = get_paym\r\n\r\nfunction get_cvat(cvat_val, data_set){\r\n    cvat_data = CralDB.QueryByComp(\"select ttype from {{tax_types}} where src_ttype='$1' and data_set='$2'\", jscall.company, cvat_val, data_set)\r\n    if (cvat_data.length != 0){\r\n        return cvat_data[0].ttype\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_cvat = get_cvat\r\n\r\nfunction get_cuni(cuni_val, data_set){\r\n    cuni_data = CralDB.QueryByComp(\"select unit from {{uom_codes}} where src_unit='$1' and data_set='$2'\", jscall.company, cuni_val, data_set)\r\n    if (cuni_data.length != 0){\r\n        return cuni_data[0].unit\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_cuni = get_cuni\r\n\r\nfunction get_clas(clas_val, data_set){\r\n    clas_data = CralDB.QueryByComp(\"select ccode from {{itm_classification_codes}} where src_ccode='$1' and data_set='$2'\", jscall.company, clas_val, data_set)\r\n    if (clas_data.length != 0){\r\n        return clas_data[0].ccode\r\n    } else {\r\n        clas_gl_data = CralDB.QueryByComp(\"select ccode from {{gl_codes}} where src_leac='$1' and data_set='$2'\", jscall.company, clas_val, data_set)\r\n        if (clas_gl_data.length != 0){\r\n            return clas_gl_data[0].ccode\r\n        }\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_clas = get_clas\r\n\r\nfunction get_reg_num_type(brn, nric, army, passport){\r\n    if (brn == \"\"){\r\n        if (nric == \"\"){\r\n            if (army == \"\"){\r\n                r_num = passport\r\n                r_type = \"PASSPORT\"\r\n            } else {\r\n                r_num = army\r\n                r_type = \"ARMY\"\r\n            }\r\n        } else {\r\n            r_num = nric\r\n            r_type = \"NRIC\"\r\n        }\r\n    } else {\r\n        r_num = brn\r\n        r_type = \"BRN\"\r\n    }\r\n\r\n    return [r_num, r_type]\r\n}\r\nexports.get_reg_num_type = get_reg_num_type\r\n\r\nfunction get_PartyID(tin, brn, nric, army, passport, sst, ttx, with_sst_ttx){\r\n    [reg, reg_attr] = get_reg_num_type(brn, nric, army, passport)\r\n    id = [\r\n        {\r\n            \"SchemeID\": \"TIN\",\r\n            \"Value\": tin\r\n        },\r\n        {\r\n            \"SchemeID\": reg_attr,\r\n            \"Value\": reg\r\n        }\r\n    ]\r\n    if (sst != \"\" \u0026\u0026 sst != null \u0026\u0026 sst != undefined){\r\n        id.push({\r\n            \"SchemeID\": \"SST\",\r\n            \"Value\": sst\r\n        })\r\n    } else {\r\n        if (with_sst_ttx == true){\r\n            id.push({\r\n                \"SchemeID\": \"SST\",\r\n                \"Value\": \"NA\"\r\n            })\r\n        }\r\n    }\r\n    if (ttx != \"\" \u0026\u0026 ttx != null \u0026\u0026 ttx != undefined){\r\n        id.push({\r\n            \"SchemeID\": \"TTX\",\r\n            \"Value\": ttx\r\n        })\r\n    } else {\r\n        if (with_sst_ttx == true){\r\n            id.push({\r\n                \"SchemeID\": \"TTX\",\r\n                \"Value\": \"NA\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return id\r\n}\r\n\r\nfunction get_state(ccty_val, state_val, data_set){\r\n    state_data = CralDB.QueryByComp(\"select cste from {{map_state_codes}} where src_ccty='$1' and src_cste='$2' and data_set='$3'\", jscall.company, ccty_val, state_val, data_set)\r\n    if (state_data.length != 0){\r\n        return state_data[0].cste\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_state = get_state\r\n\r\nfunction get_ccty(ccty_val, data_set){\r\n    ccty_data = CralDB.QueryByComp(\"select ccty from {{country_codes}} where src_ccty='$1' and data_set='$2'\", jscall.company, ccty_val, data_set)\r\n    if (ccty_data.length != 0){\r\n        return ccty_data[0].ccty\r\n    }\r\n    return \"\"\r\n}\r\nexports.get_ccty = get_ccty\r\n\r\nfunction get_country_state(src_country, src_state, data_set){\r\n    country = get_ccty(src_country, data_set)\r\n    if (country == \"\"){\r\n        // Mapping Not Found.\r\n    }\r\n    state = get_state(src_country, src_state, data_set)\r\n    if (state == \"\"){\r\n        // Mapping Not Found.\r\n    }\r\n    return [country, state]\r\n}\r\nexports.get_country_state = get_country_state\r\n\r\nfunction getPostalAddress(country, state, city, postal_zone, lines){\r\n    return {\r\n        \"CityName\": city,\r\n        \"PostalZone\": postal_zone,\r\n        \"CountrySubentityCode\": state, \r\n        \"AddressLine\": lines.map(line =\u003e ({ \"Line\": line })),\r\n        \"Country\":{\r\n            \"IdentificationCode\": {\r\n                \"ListAgencyID\": \"6\",\r\n\t\t\t\t\"ListID\": \"ISO3166-1\",\r\n                \"Value\": country\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getStringDateTime(input_date){\r\n\r\n    // Changed for optional Date Values\r\n    if (!input_date){\r\n        return [\"\", \"\"]\r\n    }\r\n\r\n    var str_date = input_date.toString()\r\n    date_array = str_date.split(\" \");\r\n    return [date_array[0], date_array[1] + \"Z\"]\r\n}\r\n\r\nfunction getAdditionalDocRef(frm1, ftrd, frm2, dtrm){\r\n    adoc_ref = []\r\n    if (frm1){\r\n        adoc_ref.push({\r\n            \"ID\": frm1,\r\n            \"DocumentType\":\"CustomsImportForm\"\r\n        })\r\n    }\r\n    if (ftrd){\r\n        adoc_ref.push({\r\n            \"ID\": \"FTA\",\r\n            \"DocumentType\":\"FreeTradeAgreement\",\r\n            \"DocumentDescription\": ftrd\r\n        })\r\n    }\r\n    if (frm2){\r\n        adoc_ref.push({\r\n            \"ID\": frm2,\r\n            \"DocumentType\":\"K2\"\r\n        })\r\n    }\r\n    if (dtrm){\r\n        adoc_ref.push(    {\r\n            \"ID\": dtrm\r\n        })\r\n    }\r\n    return adoc_ref;\r\n}\r\n\r\nfunction getContactDetails(tele_num, mail){\r\n    return {\r\n        \"Telephone\": tele_num,\r\n        \"ElectronicMail\": mail\r\n    }\r\n}\r\n\r\nfunction getAmount(amnt, ccur_code){\r\n    return {\r\n        \"Value\": amnt,\r\n        \"CurrencyID\": ccur_code\r\n    }\r\n}\r\n\r\nfunction BuildJSONFormat(einv_num){\r\n    \r\n    // Updating Current Version from Parameter.\r\n    version_update = CralDB.PublishTopic(\"einv_header\", jscall.company, \"Update\", {\r\n        \"e_inv_no\": einv_num,\r\n        \"einv_version\": CralDB.QueryByComp(`select version_id from {{e_inv_parameter}}`, jscall.company)[0].version_id\r\n    }, jscall.user)\r\n    if (!version_update?.Success){\r\n        return \"Unable to Update E-Invoice Version\"\r\n    }\r\n\r\n\r\n    doc_header = CralDB.QueryByComp(\"select * from {{einv_header}} where e_inv_no='$1'\", jscall.company, einv_num.toString())\r\n    debug(einv_num)\r\n    debug(doc_header)\r\n    doc_line = CralDB.QueryByComp(\"select * from {{einv_lines}} where e_inv_no='$1' order by line\", jscall.company, doc_header[0].e_inv_no)\r\n    if (doc_header.length == 0 || doc_line.length == 0){\r\n        return \"No Record Found for given data\"\r\n    }\r\n\r\n    // Supplier Details\r\n    sup_party_id = get_PartyID(doc_header[0].sup_tin, doc_header[0].sup_reg_brn, doc_header[0].sup_reg_nric, doc_header[0].sup_reg_army, doc_header[0].sup_reg_passport, doc_header[0].sup_sst_reg, doc_header[0].sup_ttx_no, true)\r\n\r\n    // Buyer Details\r\n    buy_party_id = get_PartyID(doc_header[0].buy_tin, doc_header[0].buy_reg_brn, doc_header[0].buy_reg_nric, doc_header[0].buy_reg_army, doc_header[0].buy_reg_passport, doc_header[0].buy_sst_reg, \"\", true)\r\n\r\n    // Shipment Details\r\n    ship_party_id = get_PartyID(doc_header[0].ship_tin, doc_header[0].ship_reg_brn, doc_header[0].ship_reg_nric, doc_header[0].ship_reg_army, doc_header[0].ship_reg_passport, \"\", \"\", false)\r\n\r\n    invoice_line = []\r\n    for (let i = 0 ; i \u003c doc_line.length ; i++){\r\n        c_clas = [\r\n            {\r\n                \"ItemClassificationCode\": doc_line[i].clas,\r\n                \"ListID\": \"CLASS\"\r\n            }\r\n        ]\r\n        if (doc_line[i].ccde != \"\"){\r\n            c_clas.push({\r\n                \"ItemClassificationCode\": doc_line[i].ccde,\r\n                \"ListID\": \"PTC\"\r\n            })\r\n        }\r\n        o_ccty = get_ccty(doc_line[i].ccty)\r\n\r\n        invoice_line.push({\r\n            \"ID\": {\r\n                // TBD\r\n                \"ID\": doc_line[i].line.toString()\r\n            },  \r\n            \"InvoicedQuantity\": {\r\n                \"Value\": doc_line[i].dqua.toString(),\r\n                \"UnitCode\": \"C62\"\r\n            },\r\n            \"LineExtensionAmount\": getAmount(doc_line[i].amti, doc_header[0].ccur),\r\n            \"AllowanceCharge\":[\r\n                {\r\n                    \"ChargeIndicator\": (doc_line[i].ldai == 0 \u0026\u0026 doc_line[i].disc == 0) ? false : true,\r\n                    \"AllowanceChargeReason\": doc_line[i].disc_reason,\r\n                    \"MultiplierFactorNumeric\": doc_line[i].disc.toString(),\r\n                    \"Amount\": getAmount(doc_line[i].ldai, doc_header[0].ccur)\r\n                },\r\n                {\r\n                    \"ChargeIndicator\": (doc_line[i].feea == 0 \u0026\u0026 doc_line[i].feer == 0) ? false : true,\r\n                    \"AllowanceChargeReason\": doc_line[i].fee_reason,\r\n                    \"MultiplierFactorNumeric\": doc_line[i].feer.toString(),\r\n                    \"Amount\": getAmount(doc_line[i].feea, doc_header[0].ccur)\r\n                }\r\n            ],\r\n            \"TaxTotal\":{\r\n                \"TaxAmount\": getAmount(doc_line[i].txai, doc_header[0].ccur),\r\n                \"TaxSubtotal\": {\r\n                    \"TaxableAmount\": getAmount(doc_line[i].stot, doc_header[0].ccur),\r\n                    \"TaxAmount\": getAmount(doc_line[i].txai, doc_header[0].ccur),\r\n                    \"TaxCategory\":{\r\n                        \"ID\": doc_line[i].cvat,\r\n                        \"Percent\": doc_line[i].pvat,\r\n                        \"TaxExemptionReason\": doc_line[i].ceno, \r\n                        \"TaxScheme\":{\r\n                            \"ID\": \"OTH\",\r\n                            \"SchemeID\": \"UN/ECE 5153\",\r\n                            \"SchemeAgencyID\": \"6\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            \"Item\":{\r\n                \"Description\": doc_line[i].item_desc,\r\n                \"OriginCountry\":{\r\n                    \"IdentificationCode\": {\r\n                        \"ListID\": \"\",\r\n                        \"ListAgencyID\": \"\",\r\n                        \"Value\": o_ccty\r\n                    }\r\n                },\r\n                \"CommodityClassification\": c_clas\r\n            },\r\n            \"Price\":{\r\n                \"PriceAmount\": getAmount(doc_line[i].pric, doc_header[0].ccur)\r\n            },\r\n            \"ItemPriceExtension\":getAmount(doc_line[i].stot, doc_header[0].ccur)\r\n        })\r\n    }\r\n    var [inv_dt, inv_tm] = getStringDateTime(doc_header[0].e_invdt)\r\n\r\n    // Date Conversion Added\r\n    var [bs_d, bs_t] = getStringDateTime(doc_header[0].bsdt)\r\n    var [be_d, be_t] = getStringDateTime(doc_header[0].bedt)\r\n    var [py_dt, py_tm] = getStringDateTime(doc_header[0].pydt)\r\n    var [pydt_date, pydt_time] = getStringDateTime(doc_header[0].pytm)\r\n\r\n    json_document = {\r\n        \"ID\": doc_header[0].e_inv_no,\r\n        \"IssueDate\": inv_dt, // TBD\r\n        \"IssueTime\": inv_tm, // TBD\r\n        \"InvoiceTypeCode\": {\r\n            \"ListVersionID\": doc_header[0].einv_version,\r\n            \"Value\":doc_header[0].doct\r\n        },\r\n        \"DocumentCurrencyCode\": doc_header[0].ccur,\r\n        \"TaxCurrencyCode\": doc_header[0].ccur,\r\n        \"InvoicePeriod\":{\r\n            \"StartDate\":bs_d,           // Date Conversion is changed form field to String\r\n            \"EndDate\":be_d,             // Date Conversion is changed form field to String\r\n            \"Description\":doc_header[0].fbil\r\n        },\r\n        \"BillingReference\":[\r\n            {\r\n                \"InvoiceDocumentReference\": {\r\n                    \"ID\": doc_header[0].org_e_inv_no,\r\n                    \"UUID\": doc_header[0].org_doc_uuid\r\n                }\r\n            },\r\n            {\r\n                \"AdditionalDocumentReference\":{\r\n                    \"ID\":doc_header[0].bref\r\n                }\r\n            }\r\n        ],\r\n        \"AdditionalDocumentReference\": getAdditionalDocRef(doc_header[0].frm1, doc_header[0].ftrd, doc_header[0].frm2, doc_header[0].dtrm),\r\n        \"AccountingSupplierParty\":{\r\n            \"AdditionalAccountID\": {\r\n                \"SchemeAgencyName\": \"CertEX\",\r\n                \"Value\": doc_header[0].anum\r\n            },\r\n            \"Party\":{\r\n                \"IndustryClassificationCode\": {\r\n                    \"Value\": doc_header[0].sup_msic,\r\n                    \"Name\": doc_header[0].sup_badsca\r\n                },\r\n                \"PartyIdentification\":sup_party_id,\r\n                \"PostalAddress\": getPostalAddress(doc_header[0].sup_country, doc_header[0].sup_cste, doc_header[0].sup_city, doc_header[0].sup_postal_zone, [doc_header[0].sup_adrs_line0, doc_header[0].sup_adrs_line1, doc_header[0].sup_adrs_line2]),\r\n                \"PartyLegalEntity\":{\r\n                    \"RegistrationName\": doc_header[0].sup_name\r\n                },\r\n                \"Contact\": getContactDetails(doc_header[0].sup_cont_num, doc_header[0].sup_email),\r\n            }\r\n        },\r\n        \"AccountingCustomerParty\":{\r\n            \"Party\":{\r\n                \"PartyIdentification\": buy_party_id,\r\n                \"PostalAddress\": getPostalAddress(doc_header[0].buy_country, doc_header[0].buy_cste, doc_header[0].buy_city, doc_header[0].buy_postal_zone, [doc_header[0].buy_adrs_line0, doc_header[0].buy_adrs_line1, doc_header[0].buy_adrs_line2]),\r\n                \"PartyLegalEntity\":{\r\n                    \"RegistrationName\": doc_header[0].buy_name\r\n                },\r\n                \"Contact\":getContactDetails(doc_header[0].buy_cont_num, doc_header[0].buy_email)\r\n            }\r\n        },\r\n        \"Delivery\":{\r\n            \"DeliveryParty\":{\r\n                \"PartyIdentification\": ship_party_id,\r\n                \"PostalAddress\": getPostalAddress(doc_header[0].ship_country, doc_header[0].ship_cste, doc_header[0].ship_city, doc_header[0].ship_postal_zone, [doc_header[0].ship_adrs_line0, doc_header[0].ship_adrs_line1, doc_header[0].ship_adrs_line2]),\r\n                \"PartyLegalEntity\":{\r\n                    \"RegistrationName\": doc_header[0].ship_name\r\n                }\r\n            },\r\n            \"Shipment\":{\r\n                \"ID\": \"\", // TBD\r\n                \"FreightAllowanceCharge\":{\r\n                    \"ChargeIndicator\": doc_header[0].ochg,\r\n                    \"AllowanceChargeReason\": doc_header[0].ochg_reason,\r\n                    \"Amount\": getAmount(doc_header[0].ochg_amnt, doc_header[0].ccur)\r\n                }\r\n            }\r\n        },\r\n        \"PaymentMeans\":{\r\n            \"PaymentMeansCode\": doc_header[0].paym,\r\n            \"PayeeFinancialAccount\":{\r\n                \"ID\": (doc_header[0].paym)?doc_header[0].sup_bank_acc:\"\"\r\n            }\r\n        },\r\n        \"PaymentTerms\":{\r\n            \"Note\": doc_header[0].term\r\n        },\r\n        \"PrepaidPayment\":{\r\n            \"ID\": {\r\n                \"ID\": doc_header[0].pref\r\n            },\r\n            \"PaidAmount\": getAmount(doc_header[0].pamt, doc_header[0].ccur),\r\n            \"PaidDate\": py_dt,         // Date Conversion is changed form field to String\r\n            \"PaidTime\": pydt_time // Conversion should be done as format \"12:00:00Z\" - Fixed\r\n        },\r\n        \"AllowanceCharge\":[\r\n            {\r\n                \"ChargeIndicator\": (doc_header[0].adis == 0) ? false : true,\r\n                \"AllowanceChargeReason\": doc_header[0].adis_reason,\r\n                \"Amount\": getAmount(doc_header[0].adis, doc_header[0].ccur)\r\n            },\r\n            {\r\n                \"ChargeIndicator\": (doc_header[0].afee == 0) ? false : true,\r\n                \"AllowanceChargeReason\": doc_header[0].afee_reason,\r\n                \"Amount\": getAmount(doc_header[0].afee, doc_header[0].ccur)\r\n            }\r\n        ], \r\n        \"TaxTotal\":{\r\n            \"TaxAmount\": getAmount(doc_header[0].tott, doc_header[0].ccur),\r\n            \"TaxSubtotal\":{\r\n                \"TaxableAmount\": getAmount(doc_header[0].ttax, doc_header[0].ccur),\r\n                \"TaxAmount\": getAmount(doc_header[0].ttat, doc_header[0].ccur),\r\n                \"TaxCategory\":{\r\n                    \"ID\": doc_header[0].cvat,\r\n                    \"TaxScheme\":{\r\n                        \"ID\": \"OTH\",\r\n                        \"SchemeID\": \"UN/ECE 5153\",\r\n                        \"SchemeAgencyID\": \"6\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"LegalMonetaryTotal\":{\r\n            \"LineExtensionAmount\":      getAmount(doc_header[0].tnat, doc_header[0].ccur),  \r\n            \"TaxExclusiveAmount\":       getAmount(doc_header[0].tote, doc_header[0].ccur),   \r\n            \"TaxInclusiveAmount\":       getAmount(doc_header[0].toti, doc_header[0].ccur),\r\n            \"AllowanceTotalAmount\":     getAmount(doc_header[0].tdis, doc_header[0].ccur),\r\n            \"ChargeTotalAmount\":        getAmount(doc_header[0].tfee, doc_header[0].ccur),\r\n            \"PayableRoundingAmount\":    getAmount(doc_header[0].ramt, doc_header[0].ccur),\r\n            \"PayableAmount\":            getAmount(doc_header[0].tpat, doc_header[0].ccur)\r\n        },\r\n        \"InvoiceLine\": invoice_line\r\n    }\r\n    if (doc_header[0].ccur != \"MYR\"){\r\n        json_document[\"TaxExchangeRate\"] = {\r\n            \"CalculationRate\": doc_header[0].rate,\r\n            \"SourceCurrencyCode\": doc_header[0].ccur,\r\n            \"TargetCurrencyCode\": \"MYR\"\r\n        }\r\n    }\r\n    return {\r\n        \"document\": json_document, \r\n        \"InvoiceCodeNumber\": doc_header[0].e_inv_no\r\n    }\r\n}\r\nexports.BuildJSONFormat = BuildJSONFormat\r\n"},{"Bizobj":{"ObjectName":"docUpload","Description":"Document Upload","external":true,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object docUpload Created by malai on 24-Jul-2024 22:00:56 ****//\r\n\r\nvar einvois = require(\"./scripts/Business_Objects/createEinvoice\")\r\nvar consoCheck = require(\"./scripts/Business_Objects/conso_checking\")\r\nfunction docUploadExcel(){\r\n    payload_obj = {}\r\n    inv_numbers = []\r\n    comp_miss_match = 0\r\n    message = \"\"\r\n    rejectedRecords = []\r\n    // submittedRecords = []\r\n    file_ret = {}\r\n\r\n    entity_ds = CralDB.QueryByComp(`select skip_master,skip_duplicate_files from {{entity_data_set}} where sup_company=${jscall.company} and data_set='${jscall.input.DataSet}'`, jscall.company)\r\n    if (entity_ds.length == 0){\r\n        message = `Entity Data set is not maintained for ${jscall.company} - ${jscall.input.DataSet}`\r\n        return {\r\n            \"AcceptedInvoices\": inv_numbers, \r\n            \"RejectedInvoices\": rejectedRecords,\r\n            \"Message\": message,\r\n            \"SubmissionResult\": {}\r\n        }\r\n    } else {\r\n        if (entity_ds[0].skip_duplicate_files \u0026\u0026\r\n            CralDB.QueryByComp(`select file_name from {{uploaded_file_details}} where file_name='${jscall.input.FileName}'`, jscall.company)?.length){\r\n            \r\n            return {\r\n                \"AcceptedInvoices\": inv_numbers, \r\n                \"RejectedInvoices\": rejectedRecords,\r\n                \"Message\": \"Filename already used for Upload.\",\r\n                \"SubmissionResult\": {}\r\n            }\r\n        }\r\n    }\r\n    skip_master = entity_ds[0].skip_master\r\n    \r\n    if (skip_master){\r\n        file_details = {\r\n            \"file_name\": jscall.input.FileName??\"\",\r\n            \"upload_user\": jscall.user,\r\n            \"upload_time\": einvois.getCurrentDateTimeUTC()\r\n        }\r\n        file_ret = CralDB.PublishTopic(\"uploaded_file_details\", jscall.company, \"Insert\", file_details, jscall.user)\r\n        if (!file_ret?.Success){\r\n            // message = \"Unable to Upload Excel.\"\r\n            return {\r\n                \"AcceptedInvoices\": inv_numbers, \r\n                \"RejectedInvoices\": rejectedRecords,\r\n                \"Message\": message,\r\n                \"SubmissionResult\": {}\r\n            }\r\n        }\r\n    }\r\n    payload_data = CralDB.QueryByComp(`select excl_einv_field,excl_interim_field,dval from {{fld_parameter}} where excl=true`, jscall.company)\r\n\r\n    // Need to add if Master Data should capture for Supplier Data.\r\n    // supplier_data = CralDB.QueryByComp(`select * from {{supplier_companies}} where sup_company=${jscall.company}`, jscall.company)\r\n    // supplier_adrs = CralDB.QueryByComp(`select * from {{address_master}} where data_set='${jscall.input?.DataSet}' and adrs_code='${supplier_data[0]?.sup_adrs}'`, jscall.company)\r\n    \r\n    \r\n    if (Array.isArray(jscall.input.Records) \u0026\u0026 (jscall.input.Records.length)){\r\n    //    na_fields = [\r\n    //        \"buy_sst_reg\", \"sup_sst_reg\", \r\n    //        \"sup_reg_brn\", \"buy_reg_brn\",\r\n    //     //    \"sup_badsca\", \r\n    //        \"org_e_inv_no\", \"org_doc_uuid\"\r\n    //     ]\r\n        for (i =0; i \u003c jscall.input.Records.length; i++){\r\n             let st = CralUtil.Date.Now()\r\n            payload_obj = {}\r\n            payload_data.forEach(rec =\u003e {\r\n                // if (jscall.input.Records[i][rec.excl_einv_field] \u0026\u0026 jscall.input.Records[i][rec.excl_einv_field] != \"NA\" ){\r\n                if (jscall.input.Records[i][rec.excl_einv_field] ){\r\n                    // \u0026\u0026 (jscall.input.Records[i][rec.excl_einv_field] != \"NA\"    // NA repalce to empty issue fixed 03/12/2024\r\n                    //     || (jscall.input.Records[i][rec.excl_einv_field] == \"NA\" \r\n                    //         \u0026\u0026 na_fields.includes(rec.excl_interim_field))) ){\r\n                    payload_obj[rec.excl_interim_field] = typeof jscall.input.Records[i][rec.excl_einv_field] == \"string\" ? jscall.input.Records[i][rec.excl_einv_field].trim() : jscall.input.Records[i][rec.excl_einv_field];\r\n                } else {\r\n                    if (rec.dval != \"null\"){\r\n                        payload_obj[rec.excl_interim_field] = rec.dval\r\n                    }\r\n                }\r\n                // payload_data[rec.excl_interim_field] = jscall.input.Records[i][rec.excl_einv_field]\r\n            })\r\n            // println(\"Mapping Completed\",CralUtil.Date.Sub(st, CralUtil.Date.Now()))\r\n            println(\"Mapping Completed\", st, CralUtil.Date.Now())\r\n            // println(payload_obj)\r\n            if (payload_obj[\"pytm\"]) {\r\n                payload_obj[\"pytm\"] = payload_obj[\"pydt\"] ? `${payload_obj[\"pydt\"]} ${payload_obj[\"pytm\"]}` : undefined\r\n            }\r\n            if (file_ret?.Message?.upload_id){\r\n                payload_obj[\"upload_id\"] = file_ret.Message.upload_id\r\n            }\r\n            if (payload_obj[\"idoc\"] == null){\r\n                payload_obj[\"idoc\"] = 0\r\n            }\r\n            payload_obj[\"data_set\"] = jscall.input.DataSet\r\n            payload_obj[\"line_cnt\"] = 0\r\n            payload_obj[\"fld_category\"] = \"\"\r\n            payload_obj[\"temp_code\"] = jscall.input.Template\r\n            payload_obj[\"mandatory\"] = []\r\n            payload_obj[\"unmapped\"] = []\r\n            payload_obj[\"sctg\"] = get_sctg(payload_obj[\"sctg\"])\r\n            //  println(\"Before Insert\",CralUtil.Date.Sub(st, CralUtil.Date.Now()))\r\n             println(\"Before Insert\", st, CralUtil.Date.Now())\r\n            if (payload_obj[\"comp\"] == jscall.company){\r\n                inv_creation = CralDB.PublishTopic(\"inv_interim_excl\", jscall.company, \"Upsert\", payload_obj, jscall.user)\r\n                if (inv_creation?.Success == true){\r\n                    CralUtil.LogInfo(\"Successfully Invoice Inserted\", \"ExcelUpload\", inv_creation)\r\n                    if (!inv_numbers.includes(inv_creation?.Message?.inv_no)) {\r\n                        inv_numbers.push(inv_creation?.Message?.inv_no);\r\n                    }\r\n                } else {\r\n                    // if (!submittedRecords.includes(payload_obj[\"inv_no\"]) \u0026\u0026 inv_creation?.Message == \"Invoice Already Submitted\") {\r\n                    //     submittedRecords.push(payload_obj[\"inv_no\"]);\r\n                    // } else {\r\n                        rejectedRecords.push(inv_creation)\r\n                    // }\r\n                    CralUtil.LogInfo(\"Unable to Insert to Interim Table\", \"ExcelUpload\", inv_creation)\r\n                }\r\n            } else {\r\n                comp_miss_match += 1\r\n            }\r\n             println(\"Insert Completed\", st, CralUtil.Date.Now())\r\n        }\r\n    }\r\n    if (comp_miss_match != 0){\r\n        if (comp_miss_match == jscall.input.Records.length){\r\n            message = \"Excel Upload Failed, due to Company miss match.\"\r\n        } else {\r\n            message = \"Company Miss match found in few records.\"\r\n        }\r\n    }\r\n    // if (submittedRecords.length){\r\n    //     message += ` ${submittedRecords.length} Invoices has been Already Submitted.`\r\n    // }\r\n\r\n\r\n\r\n    // Invoice Submission to another API\r\n    // inv_results = excelInvoiceCreation(inv_numbers, skip_master)\r\n\r\n    return {\r\n        \"AcceptedInvoices\": inv_numbers, \r\n        \"RejectedInvoices\": rejectedRecords,\r\n        \"Message\": message.trim(),\r\n        // \"SubmissionResult\": inv_results\r\n        \"SubmissionResult\": [],\r\n        \"SkipMaster\": skip_master\r\n    }\r\n}\r\n\r\nfunction checkAndCreateInvoice(){\r\n    return excelInvoiceCreation(jscall.input.inv_nums, jscall.input.skipMaster)\r\n}\r\n\r\nfunction excelInvoiceCreation(Invois, isMasterUpdate){\r\n    let excl_inv = []\r\n    let error = []\r\n    let conso_inv = []\r\n    if (Array.isArray(Invois) \u0026\u0026 Invois.length \u003e 0){\r\n        for (i2 = 0; i2 \u003c Invois.length; i2++){\r\n            if (CheckForConso(Invois[i2], isMasterUpdate)){\r\n                if (CreateConsoInvoice(Invois[i2], isMasterUpdate)){\r\n                    conso_inv.push(Invois[i2])\r\n                    CralUtil.LogInfo(\"ExcelUpload\", \"DeletingInvoice(Consolidation)\", Invois[i2])\r\n                    del_ret = CralDB.QueryByComp(`DELETE FROM {{inv_interim_excl}} WHERE inv_no='${Invois[i2]}'`, jscall.company)\r\n                }\r\n            } else {\r\n                if (CheckInvois(Invois[i2], isMasterUpdate) == true){\r\n                    if (CreateEinv(Invois[i2], isMasterUpdate) == true){\r\n                        excl_inv.push(Invois[i2])\r\n                        CralUtil.LogInfo(\"ExcelUpload\", \"DeletingInvoice\", Invois[i2])\r\n                        del_ret = CralDB.QueryByComp(`DELETE FROM {{inv_interim_excl}} WHERE inv_no='${Invois[i2]}'`, jscall.company)\r\n                    } else {\r\n                        error.push(`Error While Creation: ${Invois[i2]}`)\r\n                    }\r\n                } else {\r\n                    error.push(`Error While Validating: ${Invois[i2]}`)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        \"Input\": Invois,\r\n        \"CreatedInvoices\": excl_inv,\r\n        \"ConsolidationInvoices\": conso_inv,\r\n        \"Error\": error\r\n    }\r\n}\r\n\r\nfunction CheckForConso(inv_number, isOriginalValue){\r\n    if (CralDB.QueryByComp(\"select consolidation from {{einv_implementation}}\", jscall.company)[0]?.consolidation){\r\n        let check_data = CralDB.QueryByComp(`SELECT * from {{inv_interim_excl}} where inv_no='${inv_number}' limit 1`, jscall.company)\r\n        let docType = isOriginalValue?check_data[0].doct:einvois.get_doc_type(check_data[0].doct)\r\n        if (docType==='01'){\r\n            if (consoCheck.checkConsoInvoice(check_data[0])){\r\n                return true\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction CreateConsoInvoice(inv_number, isOriginalValue){\r\n    println(\"Creating Consolidation Invoice\")\r\n    create_inv_data = CralDB.QueryByComp(`select * from {{inv_interim_excl}} where inv_no='${inv_number}' ORDER BY line`, jscall.company)\r\n    header_data = {\r\n        \"comp\": create_inv_data[0].comp,\r\n        \"tran\": create_inv_data[0].tran,\r\n        \"idoc\": create_inv_data[0].idoc,\r\n        \"doct\": isOriginalValue ? create_inv_data[0].doct : einvois.get_doc_type(create_inv_data[0].doct),\r\n        \"itbp\": create_inv_data[0].inv_bp,\r\n        \"itoa\": create_inv_data[0].buy_adrs,\r\n        \"ccur\": isOriginalValue ? create_inv_data[0].ccur : einvois.get_ccur(create_inv_data[0].ccur, create_inv_data[0].data_set),\r\n        \"rate\": create_inv_data[0].rate,\r\n        \"paym\": isOriginalValue ? create_inv_data[0].paym : einvois.get_paym(create_inv_data[0].paym, create_inv_data[0].data_set),\r\n        \"term\": create_inv_data[0].term,\r\n        \"tote\": create_inv_data[0].tote,\r\n        \"toti\": create_inv_data[0].toti,\r\n        \"tott\": create_inv_data[0].tott,\r\n        \"cvat\": isOriginalValue ? create_inv_data[0].cvat : einvois.get_cvat(create_inv_data[0].cvat, create_inv_data[0].data_set),\r\n        \"stbp\": create_inv_data[0].ship_bp,\r\n        \"sadr\": create_inv_data[0].ship_adrs,\r\n        \"dtrm\": create_inv_data[0].dtrm,\r\n        \"styp\": create_inv_data[0].sctg,\r\n        \"cein\": false,\r\n        \"disb\": false,\r\n        \"dshp\": false,\r\n        \"sinc\": false,\r\n        \"fbil\": create_inv_data[0].fbil,\r\n        \"pamt\": create_inv_data[0].pamt,\r\n        \"pref\": create_inv_data[0].pref,\r\n        \"bref\": create_inv_data[0].bref,\r\n        \"tpat\": create_inv_data[0].tpat,\r\n        \"tnat\": create_inv_data[0].tnat,\r\n        \"tdis\": create_inv_data[0].tdis,\r\n        \"tfee\": create_inv_data[0].tfee,\r\n        \"ramt\": create_inv_data[0].ramt,\r\n        \"ttax\": create_inv_data[0].ttax,\r\n        \"ttat\": create_inv_data[0].ttat,\r\n        \"adis\": create_inv_data[0].adis,\r\n        \"afee\": create_inv_data[0].afee,\r\n        \"frm1\": create_inv_data[0].frm1,\r\n        \"ftrd\": create_inv_data[0].ftrd,\r\n        \"anum\": create_inv_data[0].anum,\r\n        \"frm2\": create_inv_data[0].frm2,\r\n        \"ochg\": create_inv_data[0].ochg,\r\n        \"ochg_amnt\": create_inv_data[0].ochg_amnt,\r\n        \"ochg_reason\": create_inv_data[0].ochg_reason,\r\n        \"esta\": \"10\",\r\n        \"submission_uid\": \"\",\r\n        \"err_msg\": \"\",\r\n        \"line_cnt\": 0,\r\n        \"trgt\": \"\",\r\n        \"val_err\": \"\",\r\n        \"cncl\": false,\r\n        \"det_tax\": \"\",\r\n        \"amnt_ex\": 0,\r\n        \"e_invdt\": \"\",\r\n        \"src_type\": isOriginalValue ? create_inv_data[0].src_type : einvois.get_src_inv_type(create_inv_data[0].src_type),\r\n        \"adis_reason\": \"\",\r\n        \"afee_reason\": \"\",\r\n        \"par_cncl\": false,\r\n        \"s_line_cnt\": create_inv_data[0].line_cnt,\r\n        \"einv_stat\": \"10\",\r\n        \"conso_inv\": \"\",\r\n        \"inv_date\": einvois.getCurrentDateTimeUTC(),\r\n        \"data_set\": create_inv_data[0].data_set,\r\n        \"inv_no\": create_inv_data[0].inv_no\r\n    }\r\n    headerResult = CralDB.PublishTopic(\"conso_header\", jscall.company, \"Upsert\", header_data, jscall.user)\r\n    if (headerResult?.Success){\r\n        err_line_cnt = 0\r\n        create_inv_data.forEach(lines =\u003e {\r\n            line_data = {\r\n                \"comp\": lines.comp,\r\n                \"tran\": lines.tran,\r\n                \"idoc\": lines.idoc,\r\n                \"line\": lines.line,\r\n                \"item\": lines.item,\r\n                \"item_desc\": lines.item_desc,\r\n                \"pric\": lines.pric,\r\n                \"cvat\": isOriginalValue ? lines.l_cvat : einvois.get_cvat(l_cvat, lines.data_set),\r\n                \"pvat\": lines.pvat,\r\n                \"txai\": lines.txai,\r\n                \"ceno\": lines.tex_cer_no,\r\n                \"amtt\": lines.amtt,\r\n                \"stot\": lines.stot,\r\n                \"amti\": lines.amti,\r\n                \"dqua\": lines.dqua,\r\n                \"cuni\": isOriginalValue ? lines.cuni : einvois.get_cuni(lines.cuni, lines.data_set),\r\n                \"disc\": lines.disc,\r\n                \"ldai\": lines.ldai,\r\n                \"ccde\": lines.ccde,\r\n                \"ccty\": isOriginalValue ? lines.ccty : einvois.get_ccty(lines.ccty, lines.data_set),\r\n                \"clas\": isOriginalValue ? lines.clas : einvois.get_clas(lines.clas, lines.data_set),\r\n                \"feer\": lines.feer,\r\n                \"feea\": lines.feea,\r\n                \"err_msg\": \"\",\r\n                \"lsta\":\"10\",\r\n                \"disc_reason\": \"\",\r\n                \"fee_reason\": \"\"\r\n            }\r\n            lineResult = CralDB.PublishTopic(\"conso_line\", jscall.company, \"Upsert\", line_data, jscall.user)\r\n            if (!lineResult?.Success){\r\n                CralUtil.LogInfo(\"ErrorInsertingLine\", \"ExcelUploadConso\", {\"Payload\": line_data, \"Result\": lineResult});\r\n                err_line_cnt += 1;\r\n            }\r\n        })\r\n        if (!err_line_cnt){\r\n            return true\r\n        }\r\n    } else {\r\n        CralUtil.LogInfo(\"ErrorCreatingConso\", \"ExcelUpload\", {\"Payload\": header_data, \"Result\": headerResult})\r\n        return false\r\n    }\r\n}\r\n\r\nfunction CreateEinv(inv_num, isOriginalValue){\r\n    println(\"Creating Excel Invoice\")\r\n    let header_payload = {};\r\n    err_cnt = 0\r\n    create_inv = CralDB.QueryByComp(\"select * from {{inv_interim_excl}} where inv_no='$1' ORDER BY line\", jscall.company, inv_num)\r\n    // println(\"CreateINV\" + JSON.stringify(create_inv))\r\n    inv_fields = CralDB.QueryByComp(`select topic,fld_name,excl,excl_interim_field,dval from {{fld_parameter}}`, jscall.company)\r\n    if (create_inv?.length != 0){\r\n        inv_fields.forEach(inv_field =\u003e {\r\n            if (inv_field.topic == \"einv_header\"){\r\n                if (inv_field.excl == true || inv_field.excl_interim_field == \"inv_no\"){\r\n                    header_payload[inv_field.fld_name] = create_inv[0][inv_field.excl_interim_field]\r\n                } else {\r\n                    if (inv_field.dval != \"null\"){\r\n                        header_payload[inv_field.fld_name] = inv_field.dval\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        // println(header_payload)\r\n        \r\n        // Map Master Data\r\n        if (!isOriginalValue) {\r\n            header_payload[\"doct\"] = einvois.get_doc_type(header_payload[\"doct\"])\r\n            header_payload[\"ccur\"] = einvois.get_ccur(header_payload[\"ccur\"], create_inv[0].data_set)\r\n            header_payload[\"paym\"] = einvois.get_paym(header_payload[\"paym\"], create_inv[0].data_set)\r\n            header_payload[\"cvat\"] = einvois.get_cvat(header_payload[\"cvat\"], create_inv[0].data_set)\r\n            // header_payload[\"sctg\"] = get_sctg(header_payload[\"sctg\"])\r\n            header_payload[\"sup_cste\"] = einvois.get_state(header_payload[\"sup_country\"], header_payload[\"sup_cste\"], create_inv[0].data_set)\r\n            header_payload[\"buy_cste\"] = einvois.get_state(header_payload[\"buy_country\"], header_payload[\"buy_cste\"], create_inv[0].data_set)\r\n            header_payload[\"ship_cste\"] = einvois.get_state(header_payload[\"ship_country\"], header_payload[\"ship_cste\"], create_inv[0].data_set)\r\n            header_payload[\"sup_country\"] = einvois.get_ccty(header_payload[\"sup_country\"], create_inv[0].data_set)\r\n            header_payload[\"buy_country\"] = einvois.get_ccty(header_payload[\"buy_country\"], create_inv[0].data_set)\r\n            header_payload[\"ship_country\"] = einvois.get_ccty(header_payload[\"ship_country\"], create_inv[0].data_set)\r\n        }\r\n\r\n        // Default Values\r\n        header_payload[\"dataset\"] = create_inv[0].data_set\r\n        header_payload[\"sup_code\"] = create_inv[0].comp\r\n        isInvAvil = (CralDB.QueryByComp(`select e_inv_no from {{einv_header}} where e_inv_no='${header_payload[\"e_inv_no\"]}' and einv_stat='60'`, jscall.company).length != 0)\r\n        if (isInvAvil){\r\n            einv_mode = \"Update\"\r\n            delete header_payload[\"line_cnt\"]\r\n            CralDB.QueryByComp(`DELETE FROM {{einv_validation}} where einv_code='${header_payload[\"e_inv_no\"]}'`, jscall.company)\r\n        } else {\r\n            einv_mode = \"Insert\"\r\n        }\r\n        header_result = CralDB.PublishTopic(\"einv_header\", create_inv[0].comp, einv_mode, header_payload, jscall.user)\r\n        if (header_result?.Success == true){\r\n            line_results = []\r\n            for (j = 0; j\u003ccreate_inv.length; j++){\r\n                line_payload = {}\r\n                inv_fields.forEach(inv_field =\u003e {\r\n                    if (inv_field.topic == \"einv_lines\"){\r\n                        if (inv_field.excl == true){\r\n                            line_payload[inv_field.fld_name] = create_inv[j][inv_field.excl_interim_field]\r\n                        } else {\r\n                            if (inv_field.dval != \"null\"){\r\n                                line_payload[inv_field.fld_name] = inv_field.dval\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                // Map Master Data\r\n                if (!isOriginalValue){\r\n                    line_payload[\"cvat\"] = einvois.get_cvat(line_payload[\"cvat\"], create_inv[j].data_set)\r\n                    line_payload[\"clas\"] = einvois.get_clas(line_payload[\"clas\"], create_inv[j].data_set)\r\n                    line_payload[\"cuni\"] = einvois.get_cuni(line_payload[\"cuni\"], create_inv[j].data_set)\r\n                }\r\n\r\n                line_payload[\"e_inv_no\"] = header_result.Message.e_inv_no\r\n                line_result = CralDB.PublishTopic(\"einv_lines\", create_inv[0].comp, einv_mode, line_payload, jscall.user)\r\n                if (line_result?.Success != true){\r\n                    err_cnt += 1\r\n                }\r\n                line_results.push(line_result)\r\n            }\r\n            if (err_cnt == 0){\r\n                if (header_result.Message.sctg == \"20\" || header_result.Message.sctg == \"30\"){\r\n                    CralUtil.LogInfo(\"InvoiceUnderForFiling\", \"ExcelInvoice\", {\"inv\": header_result.Message.e_inv_no, \"Category\": CralUtil.GetListDesc(\"sales_catg\", header_result.Message.sctg)})\r\n                    return true\r\n                }\r\n                inv_submission = einvois.submitEinvoiceToLHDN(header_result.Message.e_inv_no)\r\n                CralUtil.LogInfo(\"InvoiceSubmission\", header_result.Message.e_inv_no, inv_submission)\r\n                return true\r\n            } else {\r\n                CralUtil.LogInfo(\"Excel Upload\", \"einv_lines\", line_results)\r\n            }\r\n        } else {\r\n            CralUtil.LogInfo(\"Excel Upload\", \"einv_header\", [create_inv, isInvAvil, header_result, header_payload])\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction get_sctg(src_sctg){\r\n    switch(src_sctg.toUpperCase()){\r\n        case \"LOCAL\":\r\n            sctg = \"10\"\r\n            break\r\n        case \"EXPORT\":\r\n            sctg = \"20\"\r\n            break\r\n        case \"IMPORT\":\r\n            sctg = \"30\"\r\n            break\r\n        default:\r\n            sctg = src_sctg == \"10\" || src_sctg == \"20\" || src_sctg == \"30\" ? src_sctg : \"\"\r\n            break\r\n    }\r\n    return sctg\r\n}\r\n\r\nfunction CheckInvois(inv_number, check_master){\r\n    check_inv_result = []\r\n    map_check = []\r\n    err_lines_count = 0\r\n    // update_payload = {}\r\n    line_check = false\r\n    check_inv = CralDB.QueryByComp(\"select * from {{inv_interim_excl}} where inv_no='$1' ORDER BY line\", jscall.company, inv_number)\r\n    for(i1 = 0; i1 \u003c check_inv.length; i1++){\r\n        update_payload = {}\r\n        if (!check_master){\r\n            map_check = mapCheck(check_inv[i1])\r\n        }\r\n        core_fields = core_fields_valid(check_inv[i1])\r\n\r\n        update_payload[\"inv_no\"] = check_inv[i1].inv_no\r\n        update_payload[\"line\"] = check_inv[i1].line\r\n        \r\n        if (core_fields?.length != 0){\r\n            update_payload[\"fld_category\"] = \"10\"\r\n            update_payload[\"mandatory\"] = core_fields\r\n            update_payload[\"err_msg\"] = getSupplierErrorMessage(core_fields)\r\n            debug(update_payload)\r\n        }\r\n        if (map_check?.length != 0){\r\n            update_payload[\"fld_category\"] = \"100\"\r\n            update_payload[\"unmapped\"] = map_check\r\n            debug(update_payload)\r\n        }\r\n\r\n        if (!check_master){ // Check the Document Type only when Skip Master is Enabled.\r\n            if (!(CralDB.QueryDSByComp(\"getref\", jscall.company, \"code\", \"einv_doc_types\", \"code\", check_inv[i1].doct)).length){\r\n                update_payload[\"err_msg\"] = update_payload[\"err_msg\"] ? update_payload[\"err_msg\"] + \" Invalid Invoice Type.\" : \"Invalid Invoice Type.\"\r\n            }\r\n        }\r\n\r\n        // To check Other Chagres Details. (If Other Charges is true then Other Charges amount and Reason is mandatory.)\r\n        if (check_inv[i1].ochg){\r\n            if (!check_inv[i1].ochg_amnt){\r\n                CralUtil.LogInfo(\"ExcelUploadError\", inv_number, [check_inv[i1].ochg ,\"Other Charges Amount is Mandatory\"], update_payload[\"err_msg\"])\r\n                update_payload[\"err_msg\"] = update_payload[\"err_msg\"] ? update_payload[\"err_msg\"] + \" Other Charges Amount is Mandatory.\" : \"Other Charges Amount is Mandatory.\"\r\n            }\r\n            if (!check_inv[i1].ochg_reason){\r\n                CralUtil.LogInfo(\"ExcelUploadError\", inv_number, [check_inv[i1].ochg ,\"Other Charges Reason is Mandatory\"], update_payload[\"err_msg\"])\r\n                update_payload[\"err_msg\"] = update_payload[\"err_msg\"] ? update_payload[\"err_msg\"] + \" Other Charges Reason is Mandatory.\" : \"Other Charges Reason is Mandatory.\"\r\n            }\r\n        }\r\n\r\n        debug(\"final\", update_payload)\r\n        // debug(CralDB.PublishTopic(\"inv_interim_excl\", jscall.company, \"Update\", update_payload, jscall.user))\r\n        check_inv_result.push(CralDB.PublishTopic(\"inv_interim_excl\", jscall.company, \"Update\", update_payload, jscall.user))\r\n        if (core_fields?.length != 0 || map_check?.length != 0 || update_payload[\"err_msg\"]){\r\n            CralUtil.LogInfo(inv_number, \"Error in Line\", [core_fields, map_check, update_payload[\"err_msg\"]])\r\n            err_lines_count += 1\r\n        }\r\n    }\r\n    debug(check_inv.length)\r\n    // println(check_inv[0].s_line_cnt)\r\n    if (check_inv.length == check_inv[0].s_line_cnt){\r\n        if (err_lines_count == 0){\r\n            return true\r\n        } else {\r\n            // CralDB.QueryByComp(`UPDATE {{inv_interim_excl}} SET err_msg='${update_payload[\"err_msg\"] ? update_payload[\"err_msg\"] : \"\"} No. of Lines with error: ${err_lines_count}' where inv_no='${inv_number}'`, jscall.company)\r\n            CralDB.QueryByComp(`UPDATE {{inv_interim_excl}} SET err_msg = CONCAT(err_msg, ' No. of Lines with error: ', ${err_lines_count}) WHERE inv_no = '${inv_number}'`, jscall.company)\r\n            CralUtil.LogInfo(\"ErrorInLineLevel\", \"ExcelUpload\", `No. of Lines with error: ${err_lines_count}`)\r\n            return false\r\n        }\r\n    } else {\r\n        // CralDB.QueryByComp(`UPDATE {{inv_interim_excl}} SET err_msg='${update_payload[\"err_msg\"] ? update_payload[\"err_msg\"] : \"\"} Line Count Miss Match. Source Line Count ${check_inv[0].s_line_cnt}. No. of Lines Available ${check_inv.length}' where inv_no='${inv_number}'`, jscall.company)\r\n        CralDB.QueryByComp(`UPDATE {{inv_interim_excl}} SET err_msg = CONCAT(err_msg, ' Line Count Miss Match. Source Line Count ', ${check_inv[0].s_line_cnt}, '. No. of Lines Available ', ${check_inv.length}) WHERE inv_no = '${inv_number}'`, jscall.company)\r\n        CralUtil.LogInfo(\"LineCountMissMatch\", \"ExcelUpload\", `Line Count Miss Match. Source Line Count ${check_inv[0].s_line_cnt}. No. of Lines Available ${check_inv.length}`)\r\n        return false\r\n    }\r\n}\r\n\r\n// function checkCodeField(invoice_data){\r\n//     codeValidation = []\r\n//     if (invoice_data.doct){\r\n//         if (!(CralDB.QueryDSByComp(\"getref\", jscall.company, \"code\", \"einv_doc_types\", \"code\", invoice_data.doct)).length){\r\n//             codeValidation.push(\"doct\")\r\n//         }\r\n//     }\r\n//     return codeValidation\r\n// }\r\n\r\nfunction getSupplierErrorMessage(fields){\r\n    ret_message = \"\"\r\n    fields.forEach(field =\u003e {\r\n        if (field.includes(\"sup\")){\r\n            ret_message += `${CralDB.QueryByComp(`select excl_einv_field from {{fld_parameter}} where excl_interim_field='${field}'`, jscall.company)[0].excl_einv_field} is Mandatory. `\r\n        }\r\n    })\r\n    return ret_message\r\n}\r\nfunction mapCheck(invois){\r\n    unmap = []\r\n    if (einvois.get_cvat(invois.cvat, invois.data_set) == \"\"){\r\n        unmap.push(\"cvat\")\r\n    }\r\n    if (einvois.get_ccur(invois.ccur, invois.data_set) == \"\"){\r\n        unmap.push(\"ccur\")\r\n    }\r\n    if (einvois.get_clas(invois.clas, invois.data_set) == \"\"){\r\n        unmap.push(\"clas\")\r\n    }\r\n    if (einvois.get_doc_type(invois.doct) == \"\"){\r\n        unmap.push(\"doct\")\r\n    }\r\n    if (einvois.get_ccty(invois.sup_country, invois.data_set) == \"\"){\r\n        unmap.push(\"sup_country\")\r\n    }\r\n    if (einvois.get_ccty(invois.buy_country, invois.data_set) == \"\"){\r\n        unmap.push(\"buy_country\")\r\n    }\r\n    // if (invois.ship_country){\r\n    //     if (einvois.get_ccty(invois.ship_country) == \"\"){\r\n    //         unmap.push(\"ship_country\")\r\n    //     }\r\n    // }\r\n    if (einvois.get_state(invois.sup_country, invois.sup_cste, invois.data_set) == \"\"){\r\n        unmap.push(\"sup_cste\")\r\n    }\r\n    if (einvois.get_state(invois.buy_country, invois.buy_cste, invois.data_set) == \"\"){\r\n        unmap.push(\"buy_cste\")\r\n    }\r\n    // if (invois.ship_cste){\r\n    //     if (einvois.get_state(invois.ship_country, invois.ship_cste) == \"\"){\r\n    //         unmap.push(\"ship_cste\")\r\n    //     }\r\n    // }\r\n    return unmap\r\n}\r\n\r\nfunction core_fields_valid(invois){\r\n    core_flds = []\r\n    // Invoice Data\r\n    if (invois.doct == \"\"){\r\n        core_flds.push(\"dcot\")\r\n    }\r\n    if (invois.ccur == \"\"){\r\n        core_flds.push(\"ccur\")\r\n    }\r\n\r\n    // Not Mandatory for FOC Invoice\r\n    // if (invois.tote == 0){\r\n    //     core_flds.push(\"tote\")\r\n    // }\r\n    // if (invois.toti == 0){\r\n    //     core_flds.push(\"toti\")\r\n    // }\r\n    // if (invois.tpat == 0){\r\n    //     core_flds.push(\"tpat\")\r\n    // }\r\n    \r\n    if (invois?.cvat == \"\"){\r\n        core_flds.push(\"cvat\")\r\n    } //else {\r\n    //     // Total Tax amount per tax type\r\n    //     if (doc_header[0]?.tott == 0){\r\n    //         if (doc_header[0]?.cvat != \"06\" \u0026\u0026 doc_header[0]?.cvat != \"E\"){\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // Invoice Line\r\n    if (invois.clas == \"\"){\r\n        core_flds.push(\"clas\")\r\n    }\r\n    if (invois.item_desc == \"\"){\r\n        core_flds.push(\"item_desc\")\r\n    }\r\n\r\n    // Not Mandatory for Free of Cost Item or Service\r\n    // if (invois.pric == 0){\r\n    //     core_flds.push(\"pric\")\r\n    // }\r\n    // if (invois.stot == 0){\r\n    //     core_flds.push(\"stot\")\r\n    // }\r\n    // if (invois.amti == 0){\r\n    //     core_flds.push(\"amti\")\r\n    // }\r\n    \r\n    \r\n    if (invois?.l_cvat == \"\"){\r\n        core_flds.push(\"l_cvat\")\r\n        // tax Type\r\n    }\r\n    // if (doc_line[i].cvat != \"E\" \u0026\u0026 doc_line[i].cvat != \"\" \u0026\u0026 doc_line[i].txai == 0){\r\n    //     //Tax Amount\r\n    // }\r\n\r\n    // Supplier Data\r\n    if (invois.sup_name == \"\"){\r\n        core_flds.push(\"sup_name\")\r\n    }\r\n    if (invois.sup_tin == \"\"){\r\n        core_flds.push(\"sup_tin\")\r\n    }\r\n    if (invois.sup_reg_nric == \"\" \u0026\u0026 invois.sup_reg_brn == \"\" \u0026\u0026 invois.sup_reg_passport == \"\" \u0026\u0026 invois.sup_reg_army == \"\"){\r\n        core_flds.push(\"sup_reg_nric\", \"sup_reg_brn\", \"sup_reg_passport\", \"sup_reg_army\")\r\n    }\r\n    if (invois.sup_msic == \"\"){\r\n        core_flds.push(\"sup_msic\")\r\n    }\r\n    if (invois.sup_badsca == \"\"){\r\n        core_flds.push(\"sup_badsca\")\r\n    }\r\n    // if (invois.sup_adrs == \"\"){\r\n    //     core_flds.push(\"sup_adrs\")\r\n    // }\r\n    if (invois.sup_cont_num == \"\"){\r\n        core_flds.push(\"sup_cont_num\")\r\n    }\r\n    if (invois.sup_adrs_line0 == \"\" \u0026\u0026 invois.sup_adrs_line1 == \"\" \u0026\u0026 invois.sup_adrs_line2 == \"\"){\r\n        core_flds.push(\"sup_adrs_line0\")\r\n    }\r\n    if (invois.sup_city == \"\"){\r\n        core_flds.push(\"sup_city\")\r\n    }\r\n    if (invois.sup_cste == \"\"){\r\n        core_flds.push(\"sup_cste\")\r\n    }\r\n    if (invois.sup_country == \"\"){\r\n        core_flds.push(\"sup_country\")\r\n    }\r\n\r\n    // Buyer Data\r\n    if(invois.buy_name == \"\"){\r\n        core_flds.push(\"buy_name\")\r\n    }\r\n    if(invois.buy_tin == \"\"){\r\n        core_flds.push(\"buy_tin\")\r\n    }\r\n    if(invois.buy_reg_nric == \"\" \u0026\u0026 invois.buy_reg_brn == \"\" \u0026\u0026 invois.buy_reg_passport == \"\" \u0026\u0026 invois.buy_reg_army == \"\"){\r\n        core_flds.push(\"buy_reg_nric\", \"buy_reg_brn\", \"buy_reg_passport\", \"buy_reg_army\")\r\n    }\r\n    // if(doc_header[0].buy_sst == true \u0026\u0026 doc_buy[0].buy_sst_reg == \"\"){\r\n    //     CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer SST is Mandatory.\", \"Buyer\")\r\n    // }\r\n    if(invois.buy_adrs == \"\"){\r\n        // CreatePortalValidation(doc_header[0].e_inv_no, 0, \"Buyer Address is Mandatory.\", \"Buyer\")\r\n    }\r\n    if(invois.buy_cont_num == \"\"){\r\n        core_flds.push(\"buy_cont_num\")\r\n    }\r\n    if(invois.buy_adrs_line0 == \"\" \u0026\u0026 invois.buy_adrs_line1 == \"\" \u0026\u0026 invois.buy_adrs_line2 == \"\"){\r\n        core_flds.push(\"buy_adrs_line0\")\r\n    }\r\n    if(invois.buy_city == \"\"){\r\n        core_flds.push(\"buy_city\")\r\n    }\r\n    if(invois.buy_cste == \"\"){\r\n        core_flds.push(\"buy_cste\")\r\n    }\r\n    if(invois.buy_country == \"\"){\r\n        core_flds.push(\"buy_country\")\r\n    }\r\n    return core_flds\r\n}\r\n\r\nfunction check_validations(EInvoiceCodeNumber){\r\n    debug(\"Checking...\")\r\n\r\n    eih_data = CralDB.QueryByComp(\"select * from {{einv_header}} where e_inv_no='$1'\", jscall.company, EInvoiceCodeNumber)\r\n    if (eih_data.length == 0){\r\n        jscall_error = \"Record not found\"\r\n        return false\r\n    } else {\r\n         let [sup_id_val, sup_id_type] = get_reg_num_type(eih_data[0].sup_reg_brn, eih_data[0].sup_reg_nric, eih_data[0].sup_reg_army, eih_data[0].sup_reg_passport)\r\n        debug(eih_data[0].sup_tin, sup_id_type, sup_id_val)\r\n        if( validate_tin(eih_data[0].sup_tin, sup_id_type, sup_id_val) != true){\r\n            CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Supplier TIN Validation Failed\", \"Supplier\")\r\n        }\r\n        let [buy_id_val, buy_id_type] = get_reg_num_type(eih_data[0].buy_reg_brn, eih_data[0].buy_reg_nric, eih_data[0].buy_reg_army, eih_data[0].buy_reg_passport)\r\n        if (eih_data[0].inv_bp != \"\" \u0026\u0026 eih_data[0].inv_bp != null \u0026\u0026 eih_data[0].inv_bp != undefined){\r\n            if( validate_tin(eih_data[0].buy_tin, buy_id_type, buy_id_val) != true){\r\n                CreatePortalValidation(eih_data[0].e_inv_no, 0, \"Buyer TIN Validation Failed\", \"Buyer\")\r\n            }\r\n        }\r\n        if (CralDB.QueryByComp(\"select einv_code from {{einv_validation}} where einv_code='$1'\", jscall.company, eih_data[0].e_inv_no)?.length == 0){\r\n            if (eih_data[0].err_msg != \"\" || eih_data[0].einv_stat != \"10\"){\r\n                resolved_update = {\r\n                    \"e_inv_no\": eih_data[0].e_inv_no,\r\n                    \"err_msg\": \"\",\r\n                    \"einv_stat\": \"10\"\r\n                }\r\n                CralDB.PublishTopic(\"einv_header\", jscall.company, \"Update\", resolved_update, jscall.user)\r\n            };\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction validate_tin(tin, idType, idVal){\r\n    \r\n    lhdn = NewLHDN()\r\n    token = get_lhdn_token()\r\n    if (token == false){\r\n        return false;   \r\n    } else {\r\n        lhdn_response = lhdn.ValidateTaxPayerTIN(token, tin, idType, idVal)\r\n        switch(lhdn_response.Result.Status){\r\n            case 200:\r\n                return lhdn_response.Result.Response\r\n                break;\r\n            default:\r\n                // jscall_error = lhdn_response.Result.Status + \" - \" + JSON.stringify(lhdn_response.Result.Response)\r\n                return false;\r\n                break\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction test_DataUpsert(){\r\n    return DataUpsert(jscall.input.temp_code, jscall.input.records)\r\n}\r\nfunction DataUpsert(temp_code, input_data){\r\n    // temp_code = \"EX_TP0001\"\r\n    update_data = []\r\n    old_data = CralDB.QueryByComp(`SELECT * FROM {{inv_interim_excl}} WHERE temp_code='${temp_code}'`, jscall.company)\r\n    // return old_data\r\n    update_data = input_data.filter(old_rec =\u003e {\r\n        return !old_data.some(new_rec =\u003e {\r\n            return Object.keys(new_rec).every(keys =\u003e new_rec[keys] === old_rec[keys])\r\n        });\r\n    });\r\n    // const update_data = input_data.filter(obj1 =\u003e {\r\n    //     return !old_data.some(obj2 =\u003e {\r\n    //         return Object.keys(obj1).every(key =\u003e obj1[key] === obj2[key]);\r\n    //     });\r\n    // });\r\n    // const update_data = input_data.filter(obj2 =\u003e {\r\n    //     return !old_data.some(obj1 =\u003e {\r\n    //         return Object.keys(obj1).every(key =\u003e obj1[key] === obj2[key]);\r\n    //     });\r\n    // });\r\n    return update_data\r\n}\r\n\r\nfunction getMasterData(){\r\n    data_update = []\r\n    \r\n    inv_data = CralDB.QueryByComp(`SELECT * FROM {{inv_interim_excl}} WHERE temp_code='${jscall.input.temp_code}'`, jscall.company)\r\n    inv_data.forEach(inv =\u003e {\r\n        if (!CralDB.QueryByComp(`select skip_master from {{entity_data_set}} where sup_company=${inv.comp} and data_set='${inv.data_set}'`, jscall.company)[0]?.skip_master){\r\n            payload = {}\r\n            payload[\"inv_no\"] = inv.inv_no\r\n            payload[\"line\"] = inv.line\r\n            payload[\"inv_bp\"] = inv.inv_bp\r\n            payload[\"ship_bp\"] = inv.ship_bp\r\n            payload[\"sup_adrs\"] = inv.sup_adrs\r\n            payload[\"buy_adrs\"] = inv.buy_adrs\r\n            payload[\"ship_adrs\"] = inv.ship_adrs\r\n            buyer_data = CralDB.QueryByComp(`select * from {{buyer_companies}} where data_set='${inv.data_set}' and buy_code='${inv.inv_bp}'`, jscall.company)\r\n            if (buyer_data.length != 0){\r\n                payload[\"buy_name\"] = buyer_data[0].buy_name\r\n                payload[\"buy_cont_num\"] = buyer_data[0].buy_cont_num\r\n                payload[\"buy_email\"] = buyer_data[0].buy_email\r\n                payload[\"buy_sst_reg\"] = buyer_data[0].buy_sst_reg\r\n                payload[\"buy_tin\"] = buyer_data[0].buy_tin\r\n                payload[\"buy_reg_brn\"] = buyer_data[0].buy_reg_brn\r\n                payload[\"buy_reg_nric\"] = buyer_data[0].buy_reg_nric\r\n                payload[\"buy_reg_passport\"] = buyer_data[0].buy_reg_passport\r\n                payload[\"buy_reg_army\"] = buyer_data[0].buy_reg_army\r\n                if (!inv.buy_adrs){\r\n                    payload[\"buy_adrs\"] = buyer_data[0].buy_adrs\r\n                }\r\n            }\r\n            ship_data = CralDB.QueryByComp(`select * from {{buyer_companies}} where data_set='${inv.data_set}' and buy_code='${inv.ship_bp}'`, jscall.company)\r\n            if (ship_data.length != 0){\r\n                payload[\"ship_name\"] = ship_data[0].buy_name\r\n                payload[\"ship_tin\"] = ship_data[0].buy_tin\r\n                payload[\"ship_reg_brn\"] = ship_data[0].buy_reg_brn\r\n                payload[\"ship_reg_nric\"] = ship_data[0].buy_reg_nric\r\n                payload[\"ship_reg_passport\"] = ship_data[0].buy_reg_passport\r\n                payload[\"ship_reg_army\"] = ship_data[0].buy_reg_army\r\n                if (!inv.ship_adrs){\r\n                    payload[\"ship_adrs\"] = ship_data[0].buy_adrs\r\n                }\r\n            }\r\n            sup_address = CralDB.QueryByComp(`select * from {{address_master}} where data_set='${inv.data_set}' and adrs_code='${inv.sup_adrs}'`, jscall.company)\r\n            if (sup_address.length != 0){\r\n                payload[\"sup_city\"] = sup_address[0].adrs_city\r\n                payload[\"sup_postal_zone\"] = sup_address[0].postal_zone\r\n                payload[\"sup_adrs_line0\"] = sup_address[0].adrs_line0\r\n                payload[\"sup_adrs_line1\"] = sup_address[0].adrs_line1\r\n                payload[\"sup_adrs_line2\"] = sup_address[0].adrs_line2\r\n                payload[\"sup_country\"] = sup_address[0].adrs_country\r\n                payload[\"sup_cste\"] = sup_address[0].adrs_state\r\n            }\r\n            buy_address = CralDB.QueryByComp(`select * from {{address_master}} where data_set='${inv.data_set}' and adrs_code='${inv.buy_adrs}'`, jscall.company)\r\n            if (buy_address.length != 0){\r\n                payload[\"buy_city\"] = buy_address[0].adrs_city\r\n                payload[\"buy_postal_zone\"] = buy_address[0].postal_zone\r\n                payload[\"buy_adrs_line0\"] = buy_address[0].adrs_line0\r\n                payload[\"buy_adrs_line1\"] = buy_address[0].adrs_line1\r\n                payload[\"buy_adrs_line2\"] = buy_address[0].adrs_line2\r\n                payload[\"buy_country\"] = buy_address[0].adrs_country\r\n                payload[\"buy_cste\"] = buy_address[0].adrs_state\r\n            }\r\n            ship_address = CralDB.QueryByComp(`select * from {{address_master}} where data_set='${inv.data_set}' and adrs_code='${inv.ship_adrs}'`, jscall.company)\r\n            if (ship_address.length != 0){\r\n                payload[\"ship_city\"] = ship_address[0].adrs_city\r\n                payload[\"ship_postal_zone\"] = ship_address[0].postal_zone\r\n                payload[\"ship_adrs_line0\"] = ship_address[0].adrs_line0\r\n                payload[\"ship_adrs_line1\"] = ship_address[0].adrs_line1\r\n                payload[\"ship_adrs_line2\"] = ship_address[0].adrs_line2\r\n                payload[\"ship_country\"] = ship_address[0].adrs_country\r\n                payload[\"ship_cste\"] = ship_address[0].adrs_state\r\n            }\r\n            data_update.push({\r\n                \"input\": payload,\r\n                \"result\" : CralDB.PublishTopic(\"inv_interim_excl\", jscall.company, \"Update\", payload, jscall.user)\r\n            })\r\n        }\r\n    })\r\n    return data_update\r\n}"},{"Bizobj":{"ObjectName":"excel_data","Description":"Excel Data","external":true,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object excel_data Created by parthi on 13-Dec-2024 11:20:48 ****//\r\nvar query = require(\"./scripts/Business_Objects/initializeUserGroup\")\r\nfunction getReviewData(){\r\n    \r\n    if(query.userAccessBuildQuery() != \"\"){\r\n        reviewData = CralDB.QueryByComp(\r\n            \"select * from {{inv_interim_excl}} where temp_code = '$1' \"+(query.userAccessBuildQuery(false)).replaceAll('dataset', 'data_set'),\r\n            jscall.company,\r\n            jscall.input.layout_code\r\n        )\r\n    }else{\r\n        reviewData = CralDB.QueryByComp(\r\n            \"select * from {{inv_interim_excl}} where temp_code = '$1' \",\r\n            jscall.company,\r\n            jscall.input.layout_code\r\n        )\r\n    }\r\n    return reviewData\r\n}\r\n\r\nfunction getSubmissionUUID(){\r\n    if(query.userAccessBuildQuery() != \"\"){\r\n        return CralDB.QueryDSByComp(\"getSubmissionUUID\",jscall.company, jscall.input.from_date, jscall.input.to_date, query.userAccessBuildQuery(false))\r\n    }else{\r\n        return CralDB.QueryDSByComp(\"getSubmissionUUID\",jscall.company, jscall.input.from_date, jscall.input.to_date)\r\n    }\r\n}\r\n\r\nfunction getValidation(){\r\n    if(query.userAccessBuildQuery() != \"\"){\r\n        return CralDB.QueryDSByComp(\"getValidation\",jscall.company, jscall.input.from_date, jscall.input.to_date, (query.userAccessBuildQuery(false)).replaceAll('created_user','h.created_user'))\r\n    }else{\r\n        return CralDB.QueryDSByComp(\"getValidation\",jscall.company, jscall.input.from_date, jscall.input.to_date)\r\n    }\r\n}\r\n\r\nfunction getUploadedFile(){\r\n    // return query.userAccessBuildQuery(true).replaceAll('AND (  AND', 'AND (')\r\n    query_str = query.userAccessBuildQuery(true)\r\n    if(query_str == 'AND (  )'){\r\n        return CralDB.QueryDSByComp(\"getUploadedFile\",jscall.company, jscall.input.from_date, jscall.input.to_date, (query_str).replaceAll('AND (  )', \"\"))\r\n    }else{\r\n        return CralDB.QueryDSByComp(\"getUploadedFile\",jscall.company, jscall.input.from_date, jscall.input.to_date, (query_str).replaceAll('AND (  AND', 'AND ('))\r\n    }\r\n\r\n}"},{"Bizobj":{"ObjectName":"getInvDocs","Description":"Get All Documents Based on Document Types","external":true,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object getInvDocs Created by parthi on 01-May-2024 10:32:44 ****//\r\nvar query = require(\"./scripts/Business_Objects/initializeUserGroup\")\r\n\r\nfunction getSubmitted(){\r\n    // return query.buildQuery()\r\n    var types = checkDocumentType(jscall.input.DocumentType)\r\n    let additionalQuery = getQueryForSubmittedScreen() // To check for the cancellation Availability on submitted screen.\r\n   var result = CralDB.QueryByComp(\r\n       `SELECT * \r\n        FROM {{einv_header}} \r\n        WHERE ${additionalQuery}\r\n        AND doct IN ('$1', '$2')`\r\n        +query.userAccessBuildQuery(false)+\r\n        `ORDER BY idoc, e_inv_no;`, \r\n       jscall.company, \r\n       types[0],\r\n       types[1]\r\n   )\r\n\r\n    errValidation(jscall.input.DocumentType)\r\n\r\n    // To make the Invoice Visible for 72 hrs from Validation.\r\n    // result = result.filter(data =\u003e {\r\n    //     return checkInvoiceDate(data.einv_stat, data.etim, data.e_invdt)\r\n    // })\r\n\r\n    return result\r\n   // return types\r\n\r\n}\r\n\r\n// function checkInvoiceDate(einv_stat, etim, inv_dt){\r\n   \r\n//    const date_check = function(date_val) {\r\n//        date_val = date_val.toString().replace(/(\\d{4}-\\d{2}-\\d{2}) (\\d{2}:\\d{2}:\\d{2}) .*/, \"$1T$2.000\");\r\n//        let current_date = new Date().toISOString()\r\n//        return (CralUtil.Date.Add(date_val, \"72h00m00s\") \u003c current_date)\r\n//    }\r\n\r\n//    switch(einv_stat){\r\n//        case '20':\r\n//            return true;\r\n//        case '30':\r\n//            return !(date_check(etim))\r\n//        case '50':\r\n//            if (etim){\r\n//                return !(date_check(etim))\r\n//            } else {\r\n//                return !(date_check(inv_dt))\r\n//            }\r\n//        default:\r\n//            return !(date_check(inv_dt))\r\n//    }\r\n\r\n// }\r\n\r\nfunction getForSubmission(){\r\n\r\n    var types = checkDocumentType(jscall.input.DocumentType)\r\n\r\n    var result = CralDB.QueryByComp(\r\n        \"select * from {{einv_header}} where einv_stat='10' and (doct='$1' or doct ='$2')\"+query.userAccessBuildQuery(false)+\"order by idoc, e_inv_no\", jscall.company, types[0],types[1])\r\n\r\n    errValidation(jscall.input.DocumentType)\r\n\r\n    return result \r\n}\r\n\r\nfunction getValidation(){\r\n   if (errValidation(jscall.input.DocumentType) == false){\r\n       return false\r\n   }\r\n   PortalValidation = []\r\n   LHDNValidation = []\r\n   var types = checkDocumentType(jscall.input.DocumentType)\r\n   records = CralDB.QueryByComp(\"select * from {{einv_header}} where (doct='$1'or doct='$2') and einv_stat='60'\"+query.userAccessBuildQuery(false)+\"order by idoc,tran, e_inv_no\", jscall.company, types[0], types[1])\r\n   for (i = 0; i\u003c records.length ; i++){\r\n       switch(getRecordValidation(records[i].e_inv_no)){\r\n           case \"10\":\r\n               PortalValidation.push(records[i])\r\n               break\r\n           case \"20\":\r\n               LHDNValidation.push(records[i])\r\n               break\r\n           default:\r\n               break;\r\n       }\r\n   }\r\n   return {\r\n       \"PortalValidation\": PortalValidation,\r\n       \"LHDNValidation\":LHDNValidation\r\n   }\r\n}\r\n\r\nfunction getRecordValidation(invoice_number){\r\n   result =  CralDB.QueryByComp(\"select val_catg from {{einv_validation}} where einv_code='$1' limit 1\", jscall.company, invoice_number)\r\n   if (result.length != 0){\r\n       return result[0].val_catg\r\n   }\r\n   return \"\"\r\n}\r\n// function getValidation(){\r\n\r\n//      var types = checkDocumentType(jscall.input.DocumentType)\r\n   \r\n//      var result = CralDB.QueryByComp(\"select * from {{einv_header}} where einv_stat='60' and (doct='$1' or doct ='$2') order by idoc\", jscall.company, types[0],types[1])\r\n\r\n//      errValidation(jscall.input.DocumentType)\r\n\r\n//      return result \r\n// }\r\n\r\nfunction getCancelled(){\r\n\r\n    var types = checkDocumentType(jscall.input.DocumentType)\r\n   \r\n    var result = CralDB.QueryByComp(\"select * from {{cancel_header}} where (doct='$1'or doct ='$2')\"+(query.userAccessBuildQuery(false)).replaceAll('dataset', 'data_set')+\"order by idoc\", jscall.company, types[0],types[1])\r\n\r\n    errValidation(jscall.input.DocumentType)\r\n\r\n    return result\r\n}\r\n\r\nfunction checkDocumentType(doctype){\r\n   \r\n    types =[]\r\n    \r\n    if (doctype.trim().toUpperCase() == 'INVOICES'){\r\n         types = ['01','03'];\r\n    }else if(doctype.trim().toUpperCase() == 'SELFBILLEDINVOICE'){\r\n         types = ['11','13'];\r\n    }else if(doctype.trim().toUpperCase() == 'CREDITNOTE'){\r\n         types = ['02','04'];\r\n    }else if(doctype.trim().toUpperCase() == 'SELFBILLEDCREDITNOTE'){\r\n         types = ['12','14'];\r\n     }\r\n    return types\r\n}\r\n\r\nfunction errValidation(doctype){\r\n\r\n    if (doctype.trim().toUpperCase() != 'INVOICES' \u0026\u0026 doctype.trim().toUpperCase() != 'SELFBILLEDINVOICE' \u0026\u0026 doctype.trim().toUpperCase() != 'CREDITNOTE' \u0026\u0026 doctype.trim().toUpperCase() != 'SELFBILLEDCREDITNOTE'\u0026\u0026 doctype.trim().toUpperCase() != 'SELFBILLEDDEBITNOTE'\u0026\u0026 doctype.trim().toUpperCase() != 'DEBITNOTE'\u0026\u0026 doctype.trim().toUpperCase() != 'REFUNDNOTE'\u0026\u0026 doctype.trim().toUpperCase() != 'SELFBILLEDREFUNDNOTE'){\r\n         jscall_error = \"Invalid Document Type\";\r\n         return false;\r\n    }\r\n\r\n}\r\n\r\nfunction getDocCounts(){\r\n   //  var types = checkDocumentType(jscall.input.DocumentType)\r\n    accessUser = query.userAccessBuildQuery(false)\r\n    switch(jscall.input.Screen.trim().toUpperCase()){\r\n        case 'SUBMITTED':\r\n        // Query Changed for Submitted Screen Count - Cancellation\r\n        //    query_condition = \"(einv_stat='20' or einv_stat='50')\"\r\n            \r\n            query_condition = getQueryForSubmittedScreen() // To check cancellation \r\n           break;\r\n        case 'FORSUBMISSION':\r\n           query_condition = \"einv_stat='10'\"\r\n           break;\r\n        case 'FORVALIDATION':\r\n           query_condition = \"einv_stat='60'\"\r\n           break;\r\n        case 'PORTALVALIDATION':\r\n           return {\r\n               \"InvoiceCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='01' or doct ='03') and einv_stat='60'\"+accessUser, jscall.company), \"10\"),\r\n               \"SelfBilledCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='11' or doct ='13') and einv_stat='60'\"+accessUser, jscall.company), \"10\"),\r\n               \"CreditNoteCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='02' or doct = '04') and einv_stat='60'\"+accessUser, jscall.company), \"10\"),\r\n               \"SelfBilledCNCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='12' or doct = '14') and einv_stat='60'\"+accessUser, jscall.company), \"10\")\r\n           }\r\n           // query_condition = \"einv_stat='60' and val_err='10'\"\r\n           break;\r\n        case 'LHDNVALIDATION':\r\n           return {\r\n               \"InvoiceCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='01' or doct ='03') and einv_stat='60'\"+accessUser, jscall.company), \"20\"),\r\n               \"SelfBilledCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='11' or doct ='13') and einv_stat='60'\"+accessUser, jscall.company), \"20\"),\r\n               \"CreditNoteCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='02' or doct ='04') and einv_stat='60'\"+accessUser, jscall.company), \"20\"),\r\n               \"SelfBilledCNCount\": getCountNumber(CralDB.QueryByComp(\"select e_inv_no from {{einv_header}} where (doct='12' or doct ='14') and einv_stat='60'\"+accessUser, jscall.company), \"20\")\r\n           }\r\n           // query_condition = \"einv_stat='60' and val_err='20'\"\r\n           break;\r\n        case 'CONSOLIDATION':\r\n           return {\r\n               \"InvoiceCount\": CralDB.QueryByComp(\"select count(idoc) from {{conso_header}} where (doct='01' or doct = '03') and TRIM(conso_inv) = ''\"+ (accessUser).replaceAll('dataset', 'data_set'), jscall.company)[0].count\r\n           }\r\n       case 'CANCELLED':\r\n           return {\r\n               \"InvoiceCount\": CralDB.QueryByComp(\"select count(idoc) from {{cancel_header}} where (doct='01' or doct ='03')\"+ (accessUser).replaceAll('dataset', 'data_set'), jscall.company)[0].count,\r\n               \"SelfBilledCount\": CralDB.QueryByComp(\"select count(idoc) from {{cancel_header}} where (doct='11' or doct ='13')\"+ (accessUser).replaceAll('dataset', 'data_set'), jscall.company)[0].count,\r\n               \"CreditNoteCount\": CralDB.QueryByComp(\"select count(idoc) from {{cancel_header}} where (doct='02' or doct ='04')\"+ (accessUser).replaceAll('dataset', 'data_set'), jscall.company)[0].count,\r\n               \"SelfBilledCNCount\": CralDB.QueryByComp(\"select count(idoc) from {{cancel_header}} where (doct='12' or doct ='14')\"+ (accessUser).replaceAll('dataset', 'data_set'), jscall.company)[0].count\r\n           }\r\n           break;\r\n       default:\r\n           jscall_error = \"Invalid Screen Type\"\r\n           return false\r\n           break;\r\n    }\r\n    return {\r\n         \"InvoiceCount\": CralDB.QueryByComp(\"select count(idoc) from {{einv_header}} where \" + query_condition +\" and (doct='01' or doct ='03')\"+accessUser, jscall.company)[0].count,\r\n         \"SelfBilledCount\": CralDB.QueryByComp(\"select count(idoc) from {{einv_header}} where \" + query_condition +\" and (doct='11' or doct ='13')\"+accessUser, jscall.company)[0].count,\r\n         \"CreditNoteCount\": CralDB.QueryByComp(\"select count(idoc) from {{einv_header}} where \" + query_condition +\" and (doct='02' or doct ='04')\"+accessUser, jscall.company)[0].count,\r\n         \"SelfBilledCNCount\": CralDB.QueryByComp(\"select count(idoc) from {{einv_header}} where \" + query_condition +\" and (doct='12' or doct ='14')\"+accessUser, jscall.company)[0].count\r\n    }\r\n}\r\n\r\nfunction getSumDocCounts(){\r\naccessUserSum = query.userAccessBuildQuery(false)\r\n   let conso_count = 0\r\n   let cncl_count = 0\r\n\r\n        // Query Changed for Submitted Screen Count - Cancellation\r\n    einv_submit = CralDB.QueryByComp(`  SELECT e_inv_no FROM {{einv_header}} \r\n                                        WHERE ${getQueryForSubmittedScreen()}\r\n                                        AND doct!=''`+accessUserSum, \r\n                                    jscall.company)\r\n   \r\n    einv_forfilling = CralDB.QueryByComp(\"select comp,tran,idoc from {{einv_header}} where einv_stat='10' and doct!=''\"+accessUserSum, jscall.company)\r\n    einv_error = CralDB.QueryByComp(\"select comp,tran,idoc from {{einv_header}} where einv_stat='60' and doct!=''\"+accessUserSum, jscall.company)\r\n   //  einv_cancel = CralDB.QueryByComp(\"select comp,tran,idoc from {{cancel_header}}\", jscall.company)\r\n   //  einv_consolidation = CralDB.QueryByComp(\"select comp,tran,idoc from {{conso_header}} where doct='01' and TRIM(conso_inv) = ''\", jscall.company)\r\n    isImplemented = CralDB.QueryByComp(\"select consolidation,cancellation from {{einv_implementation}} limit 1\")\r\n    if (isImplemented[0]?.consolidation == true){\r\n        conso_count = CralDB.QueryByComp(\"select comp,tran,idoc from {{conso_header}} where doct='01' and TRIM(conso_inv) = ''\"+ (accessUserSum).replaceAll('dataset', 'data_set'), jscall.company).length\r\n    }\r\n    if (isImplemented[0]?.cancellation == true){\r\n        cncl_count = CralDB.QueryByComp(`select comp,tran,idoc from {{cancel_header}} where comp = $1 `+(accessUserSum).replaceAll('dataset', 'data_set'), jscall.company,jscall.company).length\r\n    }\r\n    return {\r\n         \"SubmittedCount\": einv_submit.length,\r\n         \"ForFilingCount\": einv_forfilling.length,\r\n         \"ForValidationCount\": einv_error.length,\r\n         \"CancelledCount\": cncl_count,\r\n         \"ConsolidationCount\": conso_count\r\n\r\n    }\r\n}\r\n\r\nfunction getConsolidation(){\r\n   if (jscall.input.DocumentType.trim().toUpperCase() == \"INVOICES\"){\r\n      return( CralDB.QueryByComp(\"select * from {{conso_header}} where TRIM(conso_inv) = ''\"+ (query.userAccessBuildQuery(false)).replaceAll('dataset', 'data_set')+\"order by idoc,tran\", jscall.company))\r\n   }\r\n   else{\r\n       return \"Invalid Document Type\"\r\n   }\r\n  }\r\n\r\nfunction getCountNumber(einvCode, catg){\r\n   docCount = 0\r\n   debug(einvCode)\r\n   for (i = 0; i \u003c einvCode.length; i++){\r\n       if (CralDB.QueryByComp(\"select einv_code from {{einv_validation}} where einv_code='$1' and val_catg='$2' limit 1\", jscall.company, einvCode[i].e_inv_no, catg).length != 0){\r\n           docCount += 1\r\n       }\r\n   }\r\n   return docCount\r\n}\r\n\r\nfunction getForFiling()\r\n{\r\n   var types = checkDocumentType(jscall.input.DocumentType)\r\n\r\n   forFiling = CralDB.QueryByComp(`select * from {{einv_header}} where einv_stat ='10' and (doct ='$1' or doct = '$2')`+query.userAccessBuildQuery(false)+`order by idoc,tran, e_inv_no`,jscall.company,types[0],types[1])\r\n\r\n    errValidation(jscall.input.DocumentType)\r\n\r\n    return forFiling\r\n}\r\n\r\n// Additional Function to get cancellation availability on submitted screen\r\nfunction getQueryForSubmittedScreen(){\r\n    if (CralDB.QueryByComp(`SELECT cancellation from {{einv_implementation}}`, jscall.company)[0]?.cancellation){\r\n        return `einv_stat IN ('20', '30', '50') \r\n                            AND ( einv_stat NOT IN ('30', '50') OR e_invdt \u003e CURRENT_TIMESTAMP AT TIME ZONE 'UTC' - INTERVAL '72 hours')`\r\n    } else {\r\n        return `einv_stat='20'`\r\n    }\r\n}"},{"Bizobj":{"ObjectName":"initializeUserGroup","Description":"Initialize User by Group","external":false,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object initializeUserGroup Created by parthi on 05-Dec-2024 11:56:10 ****//\r\nfunction initializeUserGroup() {\r\n    userDetails = []; // Array to hold user details\r\n\r\n    // Step 1: Query the user_access_control from the entity_data_set\r\n    userAccess = CralDB.QueryByComp(\r\n        \"SELECT user_access_control FROM {{entity_data_set}} WHERE sup_company = $1 and user_access_control = 'true'\",\r\n        jscall.company,\r\n        jscall.company\r\n    );\r\n    \r\n    // Proceed only if userAccess is not null or undefined\r\n    if (userAccess.length \u003e 0) {\r\n        // Step 2: Query details of users where by_group is true\r\n        details = CralDB.QueryByComp(\r\n            \"SELECT * FROM {{user_access_control}} WHERE by_group = true and user_name = '$1'\",\r\n            jscall.company,\r\n            jscall.user\r\n        );\r\n\r\n        if (details \u0026\u0026 details.length \u003e 0) {\r\n            // Step 3: Process each user and group combination\r\n            for (i = 0; i \u003c details.length; i++) {\r\n                userName = details[i].user_name;\r\n                groupName = details[i].group;\r\n\r\n                // debug(`Processing User: ${userName}, Group: ${groupName}`); // Purpose of find the response  \r\n\r\n                // Query to get users under the same group\r\n                grpName = CralDB.QueryByComp(\r\n                    `SELECT user_name FROM {{user_access_control}} WHERE \"group\" = '$1'`,\r\n                    jscall.company,\r\n                    groupName\r\n                );\r\n                \r\n                // debug(grpName.length)\r\n\r\n                if (grpName \u0026\u0026 grpName.length \u003e 0) {\r\n                    // Push user names to the userDetails array\r\n                    grpName.forEach(record =\u003e {\r\n                        userDetails.push(record.user_name);\r\n                    });\r\n\r\n                    // Step 4: Set the global variable for the user-group combination\r\n                    variableName = `${userName}_${groupName}`;\r\n                    CralUtil.SetLocal(variableName, userDetails);\r\n\r\n                    debug(`Global Variable '${variableName}' set with value:`, userDetails);// Purpose of find the response\r\n\r\n                    \r\n                } else {\r\n                    debug(`No users found in group: ${groupName} for user: ${userName}`);// Purpose of find the response\r\n                }\r\n\r\n\r\n                // return userDetails\r\n                // Clear userDetails for the next iteration\r\n                userDetails = [];\r\n            }\r\n        } else {\r\n            debug(\"No users found with by_group enabled.\");// Purpose of find the response\r\n        }\r\n    } else {\r\n        debug(\"No user access control found for the given company.\");// Purpose of find the response\r\n    }\r\n\r\n    debug(\"initializeUserGroup process completed.\");// Purpose of find the response\r\n}\r\n\r\n\r\n// function buildQuery(){\r\n\r\n//     allGroupUsers = []\r\n\r\n//     const entityDataSet = CralDB.QueryByComp(\r\n//         \"SELECT user_access_control FROM {{entity_data_set}} WHERE sup_company = $1\",\r\n//         jscall.company,\r\n//         jscall.company\r\n//     );\r\n\r\n//     // return entityDataSet\r\n//     if (entityDataSet != \"\") {\r\n//         debug(\"Entity Data Set user_access_control is enabled.\");\r\n\r\n//         // Step 2: Get all user access configurations\r\n//         userAccessConfig = CralDB.QueryByComp(\r\n//             \"SELECT * FROM {{user_access_control}} WHERE user_name = '$1'\",\r\n//             jscall.company,\r\n//             jscall.user\r\n            \r\n//         );\r\n        \r\n//     }else{\r\n//         return \"\"\r\n//     }\r\n\r\n//     // userAccessConfig.forEach(record =\u003e {\r\n//     //     existingQuery_fld = ` AND ${record.field}${record.condition}`;\r\n//     // });\r\n\r\n//     userAccessConfig.forEach(record =\u003e {\r\n//         if (record.by_group == true) {\r\n//             const groupName = record.group;\r\n//             const variableName = `${jscall.user}_${groupName}`;\r\n//             let groupUsers = CralUtil.GetLocal(variableName);\r\n\r\n//             if (!groupUsers) {\r\n//                 debug(`Global variable ${variableName} is undefined. Initializing...`);\r\n//                 initializeUserGroup(); // Call the BO function to initialize the variable\r\n//                 groupUsers = CralUtil.GetLocal(variableName);\r\n//             }\r\n\r\n//             if (groupUsers \u0026\u0026 Array.isArray(groupUsers)) {\r\n//                 debug(`Found users for group ${groupName}:`, groupUsers);\r\n\r\n//                 // Step 6: Filter records by created_user in the group array\r\n//                 // existingQuery = ` AND created_user IN (${groupUsers.map(user =\u003e `'${user}'`).join(\", \")})`;\r\n//                 allGroupUsers = [...allGroupUsers, ...groupUsers];\r\n//             } else {\r\n//                 debug(`No users found for group ${groupName}. Skipping group filtering.`);\r\n//             }\r\n//         }else{\r\n//             existingQuery = ` AND ${record.field}${record.condition}`;\r\n//         }\r\n//     });\r\n    \r\n//      // Filter the records using allGroupUsers if any\r\n//     if (allGroupUsers.length \u003e 0) {\r\n//         // Remove duplicates from the array\r\n//         allGroupUsers = [...new Set(allGroupUsers)];\r\n//         existingQuery = ` AND created_user IN (${allGroupUsers.map(user =\u003e `'${user}'`).join(\", \")})`;\r\n//     }\r\n\r\n//     return `${existingQuery}`\r\n\r\n// }\r\n\r\n\r\n\r\n// function buildQuery() {\r\n//     let allQueries = []; // Initialize an array to store all dataset-specific queries\r\n\r\n//     // Query to fetch user access control and dataset information\r\n//     const userAccess = CralDB.QueryByComp(\r\n//         \"SELECT user_access_control, data_set FROM {{entity_data_set}} WHERE sup_company = 1102\",\r\n//         jscall.company\r\n//     );\r\n\r\n//     if (!userAccess || userAccess.length === 0) {\r\n//         debug(\"No records found for the specified company.\");\r\n//         return allQueries; // Return an empty array if no records are found\r\n//     }\r\n\r\n//     // Iterate through each record\r\n//     userAccess.forEach(record =\u003e {\r\n//         let query = \"\"; // Initialize the query for the current dataset\r\n\r\n//         if (record.user_access_control) {\r\n//             debug(`Building query for dataset: ${record.data_set} with user access control enabled.`);\r\n            \r\n//             // Call buildQuery to create additional query conditions\r\n//             const extraConditions = baseQuery();\r\n//             return extraConditions\r\n//             // Base query for datasets with user access control\r\n//             query =`(data_set='${record.data_set}' ${extraConditions})`;\r\n//         } else {\r\n//             debug(`Building base query for dataset: ${record.data_set} without user access control.`);\r\n            \r\n//             // Base query for datasets without user access control\r\n//             query = `(data_set='${record.data_set}')`;\r\n//         }\r\n\r\n//         // Add the query to the list of all queries\r\n//         allQueries.push(query);\r\n//     });\r\n\r\n\r\n//     // mergedQuery =  `AND (${allQueries.map(q =\u003e `${q}`).join(\" OR \")})`;\r\n//     mergedQuery = `AND ( ${allQueries.join(\" OR \")} )`\r\n\r\n//     // debug(\"Final merged query:\", mergedQuery);\r\n//     return mergedQuery; // Return the merged query\r\n  \r\n// }\r\n\r\n\r\n// function baseQuery(){\r\n\r\n//     allGroupUsers = []\r\n//     existingQuery = \"\"\r\n\r\n//     const entityDataSet = CralDB.QueryByComp(\r\n//         \"SELECT user_access_control FROM {{entity_data_set}} WHERE sup_company = $1\",\r\n//         jscall.company,\r\n//         jscall.company\r\n//     );\r\n\r\n//     // return entityDataSet\r\n//     if (entityDataSet != \"\") {\r\n//         debug(\"Entity Data Set user_access_control is enabled.\");\r\n\r\n//         // Step 2: Get all user access configurations\r\n//         userAccessConfig = CralDB.QueryByComp(\r\n//             \"SELECT * FROM {{user_access_control}} WHERE user_name = '$1'\",\r\n//             jscall.company,\r\n//             jscall.user\r\n            \r\n//         );\r\n        \r\n//     }else{\r\n//         return \"\"\r\n//     }\r\n   \r\n\r\n//     userAccessConfig.forEach(record =\u003e {\r\n//         if (record.by_group == true) {\r\n//             const groupName = record.group;\r\n//             const variableName = `${jscall.user}_${groupName}`;\r\n//             let groupUsers = CralUtil.GetLocal(variableName);\r\n\r\n//             if (!groupUsers) {\r\n//                 debug(`Global variable ${variableName} is undefined. Initializing...`);\r\n//                 initializeUserGroup(); // Call the BO function to initialize the variable\r\n//                 groupUsers = CralUtil.GetLocal(variableName);\r\n//             }\r\n\r\n//             if (groupUsers \u0026\u0026 Array.isArray(groupUsers)) {\r\n//                 debug(`Found users for group ${groupName}:`, groupUsers);\r\n\r\n//                 // Step 6: Filter records by created_user in the group array\r\n//                 // existingQuery = ` AND created_user IN (${groupUsers.map(user =\u003e `'${user}'`).join(\", \")})`;\r\n//                 allGroupUsers = [...allGroupUsers, ...groupUsers]; // Merge the array\r\n//             } else {\r\n//                 debug(`No users found for group ${groupName}. Skipping group filtering.`);\r\n//             }\r\n//         }else{\r\n//             existingQuery += `AND (${record.field}${record.condition.replaceAll('or', `or ${record.field_name} `).replaceAll('and', `and ${record.field_name} `)})`;\r\n//         }\r\n//     });\r\n    \r\n//      // Filter the records using allGroupUsers if any\r\n//     if (allGroupUsers.length \u003e 0) {\r\n//         // Remove duplicates from the array\r\n//         allGroupUsers = [...new Set(allGroupUsers)];\r\n//         existingQuery += ` AND created_user IN (${allGroupUsers.map(user =\u003e `'${user}'`).join(\", \")})`;\r\n//     }\r\n\r\n//     return `${existingQuery}`\r\n\r\n// }\r\n\r\n\r\nfunction userAccessBuildQuery(withDataset) {\r\n    let allQueries = []; // Initialize an array to store all dataset-specific queries\r\n\r\n    // Query to fetch user access control and dataset information\r\n    const userAccess = CralDB.QueryByComp(\r\n        \"SELECT user_access_control, data_set FROM {{entity_data_set}} WHERE sup_company = $1\",\r\n        jscall.company,\r\n        jscall.company\r\n    );\r\n\r\n    if (!userAccess || userAccess.length === 0) {\r\n        debug(\"No records found for the specified company.\");\r\n        return allQueries; // Return an empty array if no records are found\r\n    }\r\n\r\n    // Iterate through each record\r\n    userAccess.forEach(record =\u003e {\r\n        let query = \"\"; // Initialize the query for the current dataset\r\n\r\n        if (record.user_access_control) {\r\n            debug(`Building query for dataset: ${record.data_set} with user access control enabled.`);\r\n            \r\n            // Call buildQuery to create additional query conditions\r\n            const extraConditions = buildQuery();\r\n            \r\n            if(withDataset == false){\r\n                // Base query for datasets with user access control\r\n                query =`(dataset='${record.data_set}' ${extraConditions})`;\r\n            }else{\r\n                query = extraConditions\r\n            }\r\n            \r\n        } else {\r\n            debug(`Building base query for dataset: ${record.dataset} without user access control.`);\r\n            if(withDataset == false){\r\n                // Base query for datasets without user access control\r\n                query = `(dataset='${record.data_set}')`; \r\n            }else{\r\n                query = \"\"\r\n            }\r\n            \r\n        }\r\n\r\n        // Add the query to the list of all queries\r\n        allQueries.push(query);\r\n    });\r\n\r\n\r\n    // mergedQuery =  `AND (${allQueries.map(q =\u003e `${q}`).join(\" OR \")})`;\r\n    mergedQuery = `AND ( ${allQueries.join(\" OR \")} )`\r\n\r\n    // debug(\"Final merged query:\", mergedQuery);\r\n    return mergedQuery; // Return the merged query\r\n  \r\n}\r\n\r\n\r\nfunction buildQuery(){\r\n\r\n    allGroupUsers = []\r\n    existingQuery = \"\"\r\n\r\n    const entityDataSet = CralDB.QueryByComp(\r\n        \"SELECT user_access_control FROM {{entity_data_set}} WHERE sup_company = $1\",\r\n        jscall.company,\r\n        jscall.company\r\n    );\r\n\r\n    // return entityDataSet\r\n    if (entityDataSet != \"\") {\r\n        debug(\"Entity Data Set user_access_control is enabled.\");\r\n\r\n        // Step 2: Get all user access configurations\r\n        userAccessConfig = CralDB.QueryByComp(\r\n            \"SELECT * FROM {{user_access_control}} WHERE user_name = '$1'\",\r\n            jscall.company,\r\n            jscall.user\r\n            \r\n        );\r\n        \r\n    }else{\r\n        return \"\"\r\n    }\r\n   \r\n\r\n    userAccessConfig.forEach(record =\u003e {\r\n        if (record.by_group == true) {\r\n            const groupName = record.group;\r\n            const variableName = `${jscall.user}_${groupName}`;\r\n            let groupUsers = CralUtil.GetLocal(variableName);\r\n\r\n            if (!groupUsers) {\r\n                debug(`Global variable ${variableName} is undefined. Initializing...`);\r\n                initializeUserGroup(); // Call the BO function to initialize the variable\r\n                groupUsers = CralUtil.GetLocal(variableName);\r\n            }\r\n\r\n            if (groupUsers \u0026\u0026 Array.isArray(groupUsers)) {\r\n                debug(`Found users for group ${groupName}:`, groupUsers);\r\n\r\n                // Step 6: Filter records by created_user in the group array\r\n                // existingQuery = ` AND created_user IN (${groupUsers.map(user =\u003e `'${user}'`).join(\", \")})`;\r\n                allGroupUsers = [...allGroupUsers, ...groupUsers]; // Merge the array\r\n            } else {\r\n                debug(`No users found for group ${groupName}. Skipping group filtering.`);\r\n            }\r\n        }else{\r\n            existingQuery += `AND (${record.field}${record.condition.replaceAll('or', `or ${record.field_name} `).replaceAll('and', `and ${record.field_name} `)})`;\r\n        }\r\n    });\r\n    \r\n     // Filter the records using allGroupUsers if any\r\n    if (allGroupUsers.length \u003e 0) {\r\n        // Remove duplicates from the array\r\n        allGroupUsers = [...new Set(allGroupUsers)];\r\n        existingQuery += ` AND created_user IN (${allGroupUsers.map(user =\u003e `'${user}'`).join(\", \")})`;\r\n    }\r\n\r\n    return `${existingQuery}`\r\n\r\n}\r\n\r\nexports.userAccessBuildQuery = userAccessBuildQuery"},{"Bizobj":{"ObjectName":"submitEinvoiceToPortal","Description":"Submit the E-Invoice to Portal","external":true,"input_struct":"","out_success":"","out_fail":""},"Script":"//**** Business Object submitEinvoiceToPortal Created by malai on 24-Apr-2024 11:17:26 ****//\r\n\r\nlet header_err_msg = \"\"\r\nlet line_err_msg = \"\"\r\nlet isSumbyQty = false\r\nvar einvois = require(\"./scripts/Business_Objects/createEinvoice\")\r\nvar consoCheck = require(\"./scripts/Business_Objects/conso_checking\")\r\nvar jsoncmp = require(\"./scripts/Business_Objects/json_sumqty_by_item\")\r\n// var jsoncmp = require(\"./scripts/Business_Objects/json_sumby_qty\")\r\n\r\nfunction submit_einv_to_portal(){\r\n    CralUtil.LogInfo(\"Einvois Input\", \"InvoiceCreation\", jscall.input)\r\n    entity_ds = CralDB.QueryByComp(`select sum_line250,sum_lineb250 from {{entity_data_set}} where sup_company=${jscall.input.comp} and data_set='${jscall.input.dataset}'`, jscall.company)\r\n    if (entity_ds.length == 0){\r\n        jscall_error = `Entity Data Set is Not Maintained for ${jscall.input.comp} - ${jscall.input.dataset}`\r\n        CralUtil.LogInfo(\"Einvois Output\", \"\", jscall_error)\r\n        return false;\r\n    } else {\r\n        if (entity_ds[0].sum_lineb250 == true \u0026\u0026 jscall.input.line_cnt \u003c= 250){\r\n            jscall.input.e_inv_no = jscall.input.tran + jscall.input.idoc.toString()\r\n            jscall.input.lines.forEach(line =\u003e {\r\n                line.e_inv_no = jscall.input.e_inv_no\r\n            })\r\n            comp_result = jsoncmp.sum_quantity_by_item(jscall.input)\r\n            CralUtil.LogInfo(\"AfterCompress\", \"Invoice\", comp_result)\r\n            if (comp_result.result){\r\n                jscall.input = comp_result.object\r\n                isSumbyQty = true\r\n            } else {\r\n                jscall_error = \"Unable to perform Sum by Quantity and Item.\"\r\n                CralUtil.LogInfo(\"Einvois Output\", \"Invoice\", jscall_error)\r\n                return false\r\n            }\r\n            CralUtil.LogInfo(\"InputAfterJsonCompress\", \"Invoice\", jscall.input)\r\n        } else {\r\n            if (entity_ds[0].sum_line250 == true \u0026\u0026 jscall.input.line_cnt \u003e 250){\r\n                jscall.input.e_inv_no = jscall.input.tran + jscall.input.idoc.toString()\r\n                jscall.input.lines.forEach(line =\u003e {\r\n                    line.e_inv_no = jscall.input.e_inv_no\r\n                })\r\n                comp_result = jsoncmp.sum_quantity_by_item(jscall.input)\r\n                if (comp_result.result){\r\n                    jscall.input = comp_result.object\r\n                    isSumbyQty = true\r\n                } else {\r\n                    jscall_error = \"Unable to perform Sum by Quantity and Item.\"\r\n                    CralUtil.LogInfo(\"Einvois Output\", \"Invoice\", jscall_error)\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (jscall.input.doct == \"\" || jscall.input.doct == null || jscall.input.doct == undefined){\r\n        jscall_error = \"Document Type is Mandatory\"\r\n        CralUtil.LogInfo(\"Einvois Output\", \"\", jscall_error)\r\n        return false;\r\n    }\r\n    document_Type = einvois.get_doc_type(jscall.input.doct)\r\n    if (document_Type == \"\"){\r\n        jscall_error = \"Unmapped or Invalid Document Type\"\r\n        CralUtil.LogInfo(\"Einvois Output\", \"\", jscall_error)\r\n        return false;\r\n    }\r\n    if (GetInvImpStatus(document_Type) != true){\r\n        jscall_error = \"Document Type Not Implemented.\"\r\n        CralUtil.LogInfo(\"Einvois Output\", \"\", jscall_error)\r\n        return false;\r\n    }\r\n    if (jscall.input.line_cnt == 0 || jscall.input.lines?.length == 0){\r\n        jscall_error = \"Lines is Empty.\"\r\n        CralUtil.LogInfo(\"Einvois Output\", \"\", jscall_error)\r\n        return false\r\n    }\r\n    if (document_Type == \"11\" || document_Type == \"12\"){\r\n        if (jscall.input.styp.toUpperCase() == \"LOCAL\"){\r\n            sb_imp = CralDB.QueryByComp(\"select src_tran_type from {{self_billed}} where src_tran_type='$1' and active=true and delf=false\", jscall.company, jscall.input.tran)\r\n            if (sb_imp.length == 0){\r\n                jscall_error = \"Transaction Type not defined in Self E-Invois\";\r\n                CralUtil.LogInfo(\"Einvois Output\", \"\", jscall_error)\r\n                // return false;\r\n                return{\r\n                    \"resend\":false\r\n                }\r\n            }\r\n        }\r\n    }\r\n    isConsoInv = CheckConsoInv(jscall.input.doct)\r\n    if (isConsoInv == true){\r\n        // return CreateConsoInvoice()\r\n        inv_out = CreateConsoInvoice()\r\n        inv_out[\"SumByQty\"] = isSumbyQty\r\n        // println(\"E-Invois Output(Consolidated Invoice): \" + JSON.stringify(inv_out))\r\n        CralUtil.LogInfo(\"Einvois Output\", \"Consolidated Invoice\", inv_out)\r\n        return inv_out\r\n    } else {\r\n        // if (jscall.input.line_cnt \u003e 120){\r\n        //     return CreateEInvoiceMultipleHeaders()\r\n        // } else {\r\n            // return CreateEInvoice()\r\n            inv_out = CreateEInvoice()\r\n            // println(\"E-Invois Output: \" + JSON.stringify(inv_out))\r\n            inv_out[\"SumByQty\"] = isSumbyQty\r\n            CralUtil.LogInfo(\"Einvois Output\", \"Invoice Created Successfully\", inv_out)\r\n            return inv_out\r\n        // }\r\n    }\r\n    // return header_result\r\n}\r\n\r\nfunction CreateEInvoice(){\r\n    header_result = insert_header()\r\n    println(\"Creating E-Invoice...\")\r\n    // header_result = einvoice.insert_header()\r\n    check_error = GetInsertErrorMessage(header_result, jscall.input.comp, jscall.input.tran, jscall.input.idoc, 0)\r\n    println(\"Header Inserted\")\r\n    println(JSON.stringify(check_error))\r\n    if (check_error.Status == true){\r\n        println(\"IN\")\r\n        if (header_result.Message.ccur == \"\" || header_result.Message.ccur == null || header_result.Message.ccur == undefined){\r\n            einvois.CreateValidation(header_result.Message.e_inv_no, 0, \"10\", \"MAP\", \"Unmapped Currency Code\", \"Invoice.Map\", \"ccur\", jscall.input.ccur)\r\n        }\r\n        if (header_result.Message.cvat == \"\" || header_result.Message.cvat == null || header_result.Message.cvat == undefined){\r\n            einvois.CreateValidation(header_result.Message.e_inv_no, 0, \"10\", \"MAP\", \"Unmapped Tax Code\", \"Invoice.Map\", \"cvat\", jscall.input.cvat)\r\n        }\r\n        println(\"Before Line Inserting\")\r\n        header_result.Lines = insert_multiple_lines(jscall.input.lines, \"einv_lines\", header_result.Message.e_inv_no)\r\n        println(\"Output To LN: \" + JSON.stringify(header_result))\r\n        println(\"Invoice Inserted Successfully \" + header_result.Message.e_inv_no)\r\n        if (einvois.check_validations(header_result.Message.e_inv_no) == true){\r\n            println(\"Validation Pass\")\r\n            debug(\"Validation Pass\")\r\n            if (header_result.Message.sctg == \"10\"){\r\n                einvois.submitEinvoiceToLHDN(header_result.Message.e_inv_no)\r\n                return header_result\r\n                // Moved to Function on Sept.5 \r\n                // var doc_json = einvois.BuildJSONFormat(header_result.Message.e_inv_no)\r\n                // println(\"After Doc\")\r\n                // if (typeof doc_json == \"string\"){\r\n                //     println(\"Error Doc\")\r\n                //     einvois.CreatePortalValidation(header_result.Message.e_inv_no, 0, doc_json, \"\")\r\n                //     return header_result\r\n                // } else {\r\n                //     // Convert JSON to XML and hash the doc to string.\r\n                //     println(\"Success Doc\")\r\n                //     submission_ret = einvois.SubmitTOLHDN(doc_json.document, doc_json.InvoiceCodeNumber)\r\n                //     if (submission_ret == false){\r\n                //         return header_result\r\n                //     } else {\r\n                //         sub_data = einvois.SubmissionUpdate(submission_ret)\r\n                //         return header_result\r\n                //     }\r\n                // }\r\n            }\r\n        }\r\n        println(\"Validation Fail\")\r\n        debug(\"Validation Fail\")\r\n        return header_result\r\n    } else {\r\n        return check_error.Result\r\n    }\r\n}\r\n\r\nfunction CreateConsoInvoice(){\r\n    conso_header = insert_conso_header()\r\n    check_error = GetInsertErrorMessage(conso_header, jscall.input.comp, jscall.input.tran, jscall.input.idoc, 0)\r\n    if (check_error.Status == true){\r\n        conso_header.Lines = insert_multiple_lines(jscall.input.lines, \"conso_line\", \"\")\r\n        return conso_header\r\n    }\r\n    return check_error.Result\r\n}\r\n\r\nfunction CreateEInvoiceMultipleHeaders(){\r\n    header_result = []\r\n    line_results = []\r\n    // src_header = einvoice.insert_header()\r\n    src_header = insert_header()\r\n    check_error = GetInsertErrorMessage(src_header, jscall.input.comp, jscall.input.tran, jscall.input.idoc, 0)\r\n    if (check_error.Status == true){\r\n        total_headers = parseInt(jscall.input.line_cnt/120) + 1\r\n        start_line = 0;\r\n        end_line = 120;\r\n        for (i = 1; i \u003c total_headers; i++){\r\n            temp_lines = jscall.input.lines.slice(start_line, end_line)\r\n            head_num_str = i.toString()\r\n            insert_result = insert_header()\r\n            // insert_result = einvoice.insert_header()\r\n            insert_error = GetInsertErrorMessage(insert_result, jscall.input.comp, jscall.input.tran, jscall.input.idoc, 0)\r\n            if (insert_error.Status == true){\r\n                temp_line_result = insert_multiple_lines(temp_lines, \"einv_lines\", insert_result.Message.e_inv_no)\r\n                Array.prototype.push.apply(line_results, temp_line_result)\r\n            } else {\r\n                ret = CralDB.PublishTopic(\"einv_header\", jscall.company, \"Delete\", jscall.input, jscall.user)\r\n                return insert_error.Result\r\n            }\r\n            start_line = end_line;\r\n            end_line = (i == total_headers)?(jscall.input.lines.length - 1):(end_line + 120)\r\n        }\r\n        src_header.Lines = line_results\r\n        return src_header\r\n    } else {\r\n        return check_error.Result\r\n    }\r\n}\r\n\r\nfunction submit_mlines_to_portal(){\r\n    header_data = CralDB.QueryByComp(\"select * from {{einv_header}} where comp=$1 and tran='$2' and idoc=$3 and src_type='$4'\", jscall.company, jscall.input.comp.toString(), jscall.input.tran, jscall.input.idoc.toString(), einvois.get_src_inv_type(jscall.input.src_type))\r\n    if (header_data.length == 0){\r\n        conso_data = CralDB.QueryByComp(\"select * from {{conso_header}} where comp=$1 and tran='$2' and idoc=$3 and src_type='$4'\", jscall.company, jscall.input.comp.toString(), jscall.input.tran, jscall.input.idoc.toString(), einvois.get_src_inv_type(jscall.input.src_type))\r\n        if (conso_data.length == 0){\r\n            jscall_error = \"Header Not Found in Portal.\"\r\n            return false\r\n        } else {\r\n            println(\"Inserting Missing Lines\")\r\n            line_results = insert_multiple_lines(jscall.input.lines, \"conso_line\", \"\")\r\n        }\r\n    } else {\r\n        missing_lines = []\r\n        for (i=0;i\u003cjscall.input.lines.length;i++){\r\n            isAvil = CralDB.QueryByComp(\"select line from {{einv_lines}} where e_inv_no='$1' and line=$2\", jscall.company, header_data[0].e_inv_no, jscall.input.lines[i].line)\r\n            if (isAvil.length == 0){\r\n                missing_lines.push(jscall.input.lines[i])\r\n            }\r\n        }\r\n        line_results = insert_multiple_lines(missing_lines, \"einv_lines\", header_data[0].e_inv_no)\r\n        // line_results = insert_multiple_lines(jscall.input.lines, \"einv_lines\", header_data[0].e_inv_no)\r\n        // Go to Check Validation...\r\n    }\r\n    return {\r\n        \"Lines\": line_results\r\n    }\r\n}\r\n\r\nfunction insert_multiple_lines(array_lines, table_code, einvNumber){\r\n    line_results = []\r\n    println(\"Inserting Line\")\r\n    for ( i = 0; i \u003c array_lines.length; i++){\r\n        line_result = insert_line(array_lines[i], table_code, einvNumber)\r\n        check_error = GetInsertErrorMessage(line_result, array_lines[i].comp, array_lines[i].tran, array_lines[i].idoc, array_lines[i].line)\r\n        if (table_code == \"einv_lines\" \u0026\u0026 check_error.Status == true){\r\n            println(\"Line Inserted Successfully\")\r\n            if (line_result.Message.cvat == \"\" || line_result.Message.cvat == undefined || line_result.Message.cvat == null){\r\n                einvois.CreateValidation(einvNumber, array_lines[i].line, \"10\", \"MAP\", \"Unmapped Tax Code\", \"InvoiceLine.Map\", \"cvat\", array_lines[i].cvat)\r\n            }\r\n            if (line_result.Message.clas == \"\" || line_result.Message.clas == undefined || line_result.Message.clas == null){\r\n                einvois.CreateValidation(einvNumber, array_lines[i].line, \"10\", \"MAP\", \"Unmapped Classification Code\", \"InvoiceLine.Map\", \"clas\", array_lines[i].clas)\r\n            }\r\n            println(\"After Map Validations\")\r\n        }\r\n        line_results.push(check_error.Result)\r\n    }\r\n    return line_results\r\n}\r\n\r\nfunction GetInsertErrorMessage(result, comp, tran, idoc, line){\r\n    if (typeof result == \"string\"){\r\n        return {\r\n            \"Status\": false,\r\n            \"Result\": {\r\n                \"comp\": comp,\r\n                \"tran\": tran,\r\n                \"idoc\": idoc,\r\n                \"line\": line,\r\n                \"Message\": result,\r\n                \"Success\":false\r\n            }\r\n        }\r\n    } else {\r\n        if (result.Success == false){\r\n            result.comp = comp\r\n            result.tran = tran\r\n            result.idoc = idoc\r\n            result.line = line\r\n            return {\r\n                \"Status\": false,\r\n                \"Result\": result\r\n            }\r\n        } else {\r\n            return {\r\n                \"Status\": true,\r\n                \"Result\": result\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction GetInvImpStatus(inv_type){\r\n    switch (inv_type){\r\n        case \"01\":\r\n            // CralDB.QueryByComp(\"select imp_inv from {{einv_implementation}}\", jscall.company)\r\n            fld_name = \"imp_inv\"\r\n            break;\r\n        case \"02\":\r\n            fld_name = \"imp_crd_nt\"\r\n            break;\r\n        case \"11\":\r\n            fld_name = \"imp_slf_inv\"\r\n            break;\r\n        case \"12\":\r\n            fld_name = \"imp_slf_crd_nt\"\r\n            break;\r\n        default:\r\n            return false\r\n    }\r\n    imp_data = CralDB.QueryByComp(\"select \" + fld_name + \" from {{einv_implementation}}\", jscall.company)\r\n    if (imp_data.length == 0){\r\n        return false;\r\n    }\r\n    return imp_data[0][fld_name]\r\n}\r\n// function test_conso_check(){\r\n//     return CheckConsoInv(jscall.input.doct)\r\n// }\r\nfunction CheckConsoInv(docType){\r\n    println(\"Checking Conso......\")\r\n    imp_data = CralDB.QueryByComp(\"select consolidation from {{einv_implementation}}\", jscall.company)\r\n    // println(JSON.stringify(imp_data))\r\n    if (imp_data.length == 0){\r\n        return false\r\n    }\r\n    if (imp_data[0].consolidation == true){\r\n        srcType = einvois.get_src_inv_type(jscall.input.src_type)\r\n\r\n        // Additional Checking for Consolidation\r\n        if (einvois.get_doc_type(docType)==='01'){  // Only Invoices is Allowed for Consolidation.\r\n            if (consoCheck.checkConsoInvoice({\r\n                ...jscall.input,\r\n                doct : einvois.get_doc_type(docType),\r\n                src_type: srcType\r\n            })){\r\n                return true\r\n            }\r\n        }\r\n        // If the Criteria from conso_parameter becomes true then conso is created. \r\n\r\n        println(srcType)\r\n        // if (docType == \"01\"){ //Invoice or Sales Invoice\r\n        println(docType)\r\n        // if (docType.toUpperCase() == \"INVOICE\"){\r\n        //     switch (srcType){\r\n        //         case \"20\": //Sales Order\r\n        //             conso_fld = \"conso_sls\"\r\n        //             list_name = \"conso_sls_list\"\r\n        //             // get_conso_data = CralDB.QueryByComp(\"select conso_sls from {{conso_filing}} where comp=$1\", jscall.company, jscall.company)\r\n        //         break;\r\n        //         case \"10\": // Manual Sales\r\n        //             conso_fld = \"conso_man_sls\"\r\n        //             list_name = \"conso_man_sls_list\"\r\n        //         break;\r\n        //         default:\r\n        //         return false;\r\n        //         break;\r\n        //     }\r\n        // } else {\r\n        //     if (docType.toUpperCase() == \"SALES INVOICE\" \u0026\u0026 srcType == \"40\"){ //Sales Invoice\r\n        //         conso_fld = \"conso_acr\"\r\n        //         list_name = \"conso_acr_list\"\r\n        //     } else {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        if (docType.toUpperCase() == \"INVOICE\" || docType.toUpperCase() == \"SALES INVOICE\"){\r\n            switch (srcType){\r\n                case \"20\": //Sales Order\r\n                    conso_fld = \"conso_sls\"\r\n                    list_name = \"conso_sls_list\"\r\n                    // get_conso_data = CralDB.QueryByComp(\"select conso_sls from {{conso_filing}} where comp=$1\", jscall.company, jscall.company)\r\n                break;\r\n                case \"10\": // Manual Sales\r\n                    conso_fld = \"conso_man_sls\"\r\n                    list_name = \"conso_man_sls_list\"\r\n                break;\r\n                case \"40\":\r\n                    conso_fld = \"conso_acr\"\r\n                    list_name = \"conso_acr_list\"\r\n                break;\r\n                default:\r\n                return false;\r\n                break;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n        get_conso_data = CralDB.QueryByComp(\"select \" + conso_fld + \" from {{conso_filing}} where comp=$1\", jscall.company, jscall.input.comp)\r\n        // println(JSON.stringify(get_conso_data))\r\n        if (get_conso_data.length != 0){\r\n            println(CralUtil.GetListDesc(list_name, get_conso_data[0][conso_fld]))\r\n            switch (CralUtil.GetListDesc(list_name, get_conso_data[0][conso_fld]).toUpperCase()){\r\n                case \"BUYER\":\r\n                    println(jscall.input.inv_bp)\r\n                    if (jscall.input.inv_bp != undefined \u0026\u0026 jscall.input.inv_bp != null \u0026\u0026 jscall.input.inv_bp != \"\"){\r\n                        conso_data = CralDB.QueryByComp(\"select count(buy_code) from {{buyer_companies}} where buy_code='$1' and conso_buyer=true and data_set='$2'\", jscall.company, jscall.input.inv_bp, jscall.input.dataset)\r\n                        println(JSON.stringify(conso_data))\r\n                        // if (CralDB.QueryByComp(\"select buy_code from {{buyer_companies}} where buy_code='$1'\", jscall.company, jscall.input.itbp).length != 0){\r\n                        //     return true;\r\n                        // }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                break;\r\n                case \"ORDER TYPE\":\r\n                    if (jscall.input.ord_typ != undefined \u0026\u0026 jscall.input.ord_typ != null \u0026\u0026 jscall.input.ord_typ != \"\"){\r\n                        conso_data = CralDB.QueryByComp(\"select count(ord_typ) from {{conso_ord_type}} where ord_typ='$1' and data_set='$2'\", jscall.company, jscall.input.ord_typ, jscall.input.dataset)\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                break;\r\n                case \"SERIES\":\r\n                    if (jscall.input.ngrp != undefined \u0026\u0026 jscall.input.ngrp != null \u0026\u0026 jscall.input.ngrp != \"\" \u0026\u0026 jscall.input.seri != undefined \u0026\u0026 jscall.input.seri != null \u0026\u0026 jscall.input.seri != \"\"){\r\n                        conso_data = CralDB.QueryByComp(\"select count(seri) from {{conso_sls_seri}} where ngrp='$1' and seri='$2' and data_set='$3'\", jscall.company, jscall.input.ngrp, jscall.input.seri, jscall.input.dataset)\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                break;\r\n                case \"SALES OFFICE\":\r\n                    if (jscall.input.sls_ofc != undefined \u0026\u0026 jscall.input.sls_ofc != null \u0026\u0026 jscall.input.sls_ofc != \"\"){\r\n                        conso_data = CralDB.QueryByComp(\"select count(sls_ofc) from {{conso_sls_off}} where sls_ofc='$1' and data_set='$2'\", jscall.company, jscall.input.sls_ofc, jscall.input.dataset)\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                break;\r\n                case \"MANUAL ID\":\r\n                    println(jscall.input.ngrp)\r\n                    println(jscall.input.seri)\r\n                    if (jscall.input.ngrp != undefined \u0026\u0026 jscall.input.ngrp != null \u0026\u0026 jscall.input.ngrp != \"\" \u0026\u0026 jscall.input.seri != undefined \u0026\u0026 jscall.input.seri != null \u0026\u0026 jscall.input.seri != \"\"){\r\n                        conso_data = CralDB.QueryByComp(\"select count(seri) from {{conso_man_id}} where ngrp='$1' and seri='$2' and data_set='$3'\", jscall.company, jscall.input.ngrp, jscall.input.seri, jscall.input.dataset)\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                break;\r\n                case \"TRANSACTION TYPE\":\r\n                    println(jscall.input.tran)\r\n                    if (jscall.input.tran != undefined \u0026\u0026 jscall.input.tran != null \u0026\u0026 jscall.input.tran != \"\"){\r\n                        conso_data = CralDB.QueryByComp(\"select count(conso_tran_type) from {{conso_tran_types}} where conso_tran_type='$1' and data_set='$2'\", jscall.company, jscall.input.tran, jscall.input.dataset)\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                break;\r\n                default:\r\n                    return false;\r\n                break;\r\n            }\r\n            if (conso_data[0].count != 0){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction insert_header(){\r\n    header_err_msg = \"\"\r\n    temp_doct = einvois.get_doc_type(jscall.input.doct)\r\n    // if (temp_doct == \"\"){\r\n    //     header_err_msg = write_err_msg(header_err_msg, \"Document Type\")\r\n    // }\r\n    temp_ccur = einvois.get_ccur(jscall.input.ccur, jscall.input.dataset)\r\n    // if (temp_ccur == \"\"){\r\n    //     header_err_msg = write_err_msg(header_err_msg, \"Currency Code\")\r\n    // }\r\n    temp_paym = einvois.get_paym(jscall.input.paym, jscall.input.dataset)\r\n    // if (temp_paym == \"\"){\r\n    //     // header_err_msg = write_err_msg(header_err_msg, \"Payment Mode\")\r\n    // }\r\n    temp_cvat = einvois.get_cvat(jscall.input.cvat, jscall.input.dataset)\r\n    // if (temp_cvat == \"\"){\r\n    //     header_err_msg = write_err_msg(header_err_msg, \"Tax Code\")\r\n    // }\r\n\r\n    switch(jscall.input.styp.toUpperCase()){\r\n        case \"LOCAL\":\r\n            sctg = \"10\"\r\n            break\r\n        case \"EXPORT\":\r\n            sctg = \"20\"\r\n            break\r\n        case \"IMPORT\":\r\n            sctg = \"30\"\r\n            break\r\n        default:\r\n            sctg = \"\"\r\n            break\r\n    }\r\n    sup_data = false\r\n    sup_adrs = false\r\n    buy_data = false\r\n    buy_adrs = false\r\n    ship_data = false\r\n    ship_adrs = false\r\n\r\n    supplier_data = CralDB.QueryByComp(\"select * from {{supplier_companies}} where sup_company=$1\", jscall.company, jscall.input.comp)\r\n    if (supplier_data.length != 0){\r\n        sup_data = true\r\n        supplier_address = CralDB.QueryByComp(\"select * from {{address_master}} where data_set='$1' and adrs_code='$2'\", jscall.company, jscall.input.dataset, supplier_data[0].sup_adrs)\r\n        if (supplier_address.length != 0){\r\n            sup_adrs = true\r\n        }\r\n    }\r\n\r\n    buyer_adrs = (jscall.input.buy_adrs != \"\" \u0026\u0026 jscall.input.buy_adrs != undefined \u0026\u0026 jscall.input.buy_adrs != null)?jscall.input.buy_adrs:\"\";\r\n    buyer_data = CralDB.QueryByComp(\"select * from {{buyer_companies}} where data_set='$1' and buy_code='$2'\", jscall.company, jscall.input.dataset, jscall.input.inv_bp)\r\n    if (buyer_data.length != 0){\r\n        buy_data = true\r\n        buyer_adrs = (buyer_adrs == \"\")?buyer_data[0].buy_adrs:buyer_adrs;\r\n        buyer_address = CralDB.QueryByComp(\"select * from {{address_master}} where data_set='$1' and adrs_code='$2'\", jscall.company, jscall.input.dataset, buyer_adrs)\r\n        if (buyer_address.length != 0){\r\n            buy_adrs = true\r\n        }\r\n    }\r\n\r\n    if (jscall.input.stbp != \"\" \u0026\u0026 jscall.input.stbp != undefined \u0026\u0026 jscall.input.stbp != null){\r\n        if (jscall.input.stbp != jscall.input.inv_bp){\r\n            shipper_data = CralDB.QueryByComp(\"select * from {{buyer_companies}} where data_set='$1' and buy_code='$2'\", jscall.company, jscall.input.dataset, jscall.input.stbp)\r\n            if (shipper_data.length == 0){\r\n                // ship_data = buy_data\r\n                // shipper_data = buyer_data\r\n            } else {\r\n                ship_data = true\r\n                if (jscall.input.sadr != \"\" \u0026\u0026 jscall.input.sadr != undefined \u0026\u0026 jscall.input.sadr != null){\r\n                    shipper_address = CralDB.QueryByComp(\"select * from {{address_master}} where data_set='$1' and adrs_code='$2'\", jscall.company, jscall.input.dataset, jscall.input.sadr)\r\n                    if (shipper_address.length != 0){\r\n                        ship_adrs = true\r\n                    }\r\n                } else {\r\n                    shipper_address = CralDB.QueryByComp(\"select * from {{address_master}} where data_set='$1' and adrs_code='$2'\", jscall.company, jscall.input.dataset, shipper_data[0].buy_adrs)\r\n                    if (shipper_address.length != 0){\r\n                        ship_adrs = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    supplier_name = (sup_data == false)?\"\":supplier_data[0].sup_name\r\n    supplier_cn = (sup_data == false)?\"\":supplier_data[0].sup_cont_num\r\n    supplier_email = (sup_data == false)?\"\":supplier_data[0].sup_email\r\n    supplier_sst = (sup_data == false)?\"\":supplier_data[0].sup_sst_reg\r\n    supplier_ttx = (sup_data == false)?\"\":supplier_data[0].sup_ttx_no\r\n    supplier_tin = (sup_data == false)?\"\":supplier_data[0].sup_tin\r\n    supplier_brn = (sup_data == false)?\"\":supplier_data[0].sup_reg_brn\r\n    supplier_nric = (sup_data == false)?\"\":supplier_data[0].sup_reg_nric\r\n    supplier_passport = (sup_data == false)?\"\":supplier_data[0].sup_reg_passport\r\n    supplier_army = (sup_data == false)?\"\":supplier_data[0].sup_reg_army\r\n    supplier_badsca = (sup_data == false)?\"\":supplier_data[0].sup_badsca\r\n    supplier_bacc = (sup_data == false)?\"\":supplier_data[0].sup_bank_acc\r\n    supplier_msic = (sup_data == false)?\"\":supplier_data[0].sup_msic\r\n\r\n    supplier_adrs = (sup_data == false)?\"\":supplier_data[0].sup_adrs\r\n    supplier_city = (sup_adrs == false)?\"\":supplier_address[0].adrs_city\r\n    supplier_pz = (sup_adrs == false)?\"\":supplier_address[0].postal_zone\r\n    supplier_l0 = (sup_adrs == false)?\"\":supplier_address[0].adrs_line0\r\n    supplier_l1 = (sup_adrs == false)?\"\":supplier_address[0].adrs_line1\r\n    supplier_l2 = (sup_adrs == false)?\"\":supplier_address[0].adrs_line2\r\n    let [sup_ccty, sup_cste] = einvois.get_country_state((sup_adrs == false)?\"\":supplier_address[0].adrs_country, (sup_adrs == false)?\"\":supplier_address[0].adrs_state, jscall.input.dataset)\r\n    \r\n    buy_name = (buy_data == false)?\"\":buyer_data[0].buy_name\r\n    buy_cont_num = (buy_data == false)?\"\":buyer_data[0].buy_cont_num\r\n    buy_email = (buy_data == false)?\"\":buyer_data[0].buy_email\r\n    buy_sst_reg = (buy_data == false)?\"\":buyer_data[0].buy_sst_reg\r\n    buy_tin = (buy_data == false)?\"\":buyer_data[0].buy_tin\r\n    buy_reg_brn = (buy_data == false)?\"\":buyer_data[0].buy_reg_brn\r\n    buy_reg_nric = (buy_data == false)?\"\":buyer_data[0].buy_reg_nric\r\n    buy_reg_passport =(buy_data == false)?\"\":buyer_data[0].buy_reg_passport \r\n    buy_reg_army = (buy_data == false)?\"\":buyer_data[0].buy_reg_army\r\n\r\n    buyer_city = (buy_adrs == false)?\"\":buyer_address[0].adrs_city\r\n    buyer_pz = (buy_adrs == false)?\"\":buyer_address[0].postal_zone\r\n    buyer_l0 = (buy_adrs == false)?\"\":buyer_address[0].adrs_line0\r\n    buyer_l1 = (buy_adrs == false)?\"\":buyer_address[0].adrs_line1\r\n    buyer_l2 = (buy_adrs == false)?\"\":buyer_address[0].adrs_line2\r\n    let [buy_ccty, buy_cste] = einvois.get_country_state((buy_adrs == false)?\"\":buyer_address[0].adrs_country, (buy_adrs == false)?\"\":buyer_address[0].adrs_state, jscall.input.dataset)\r\n    \r\n    shipper_name = (ship_data == false)?\"\":shipper_data[0].buy_name\r\n    shipper_tin = (ship_data == false)?\"\":shipper_data[0].buy_tin\r\n    shipper_brn = (ship_data == false)?\"\":shipper_data[0].buy_reg_brn\r\n    shipper_nric = (ship_data == false)?\"\":shipper_data[0].buy_reg_nric\r\n    shipper_passport = (ship_data == false)?\"\":shipper_data[0].buy_reg_passport\r\n    shipper_army = (ship_data == false)?\"\":shipper_data[0].buy_reg_army\r\n\r\n    shipper_city = (ship_adrs == false)?\"\":shipper_address[0].adrs_city\r\n    shipper_pz = (ship_adrs == false)?\"\":shipper_address[0].postal_zone\r\n    shipper_l0 = (ship_adrs == false)?\"\":shipper_address[0].adrs_line0\r\n    shipper_l1 = (ship_adrs == false)?\"\":shipper_address[0].adrs_line1\r\n    shipper_l2 = (ship_adrs == false)?\"\":shipper_address[0].adrs_line2\r\n    let [ship_ccty, ship_cste] = einvois.get_country_state((ship_adrs == false)?\"\":shipper_address[0].adrs_country, (ship_adrs == false)?\"\":shipper_address[0].adrs_state, jscall.input.dataset)\r\n    \r\n    self_inv = false\r\n    if (temp_doct == \"11\" || temp_doct == \"12\" || temp_doct == \"13\" || temp_doct == \"14\"){\r\n        self_inv = true\r\n    }\r\n\r\n    let org_e_inv_no =\"\"\r\n    let org_doc_uuid = \"\"\r\n    if (temp_doct != \"01\" \u0026\u0026 temp_doct != \"11\" \u0026\u0026 jscall.input.refDoc){\r\n        [org_e_inv_no, org_doc_uuid] = getOriginalDocumentReference(jscall.input.refDoc)\r\n    }\r\n    \r\n    header_data = {\r\n        \"comp\": jscall.input.comp,\r\n        \"tran\": jscall.input.tran,\r\n        \"idoc\": jscall.input.idoc,\r\n        \"doct\": temp_doct,\r\n        \"ccur\": temp_ccur,\r\n        \"paym\": temp_paym,\r\n        \"cvat\": temp_cvat,\r\n        \"sctg\": sctg,\r\n        \"dataset\": jscall.input.dataset,\r\n        \"line_cnt\": 0,\r\n        \"s_line_cnt\": jscall.input.line_cnt,\r\n        \"sup_code\": (self_inv == true)?jscall.input.inv_bp:jscall.input.comp,\r\n        \"sup_name\":         (self_inv == true)?buy_name:supplier_name,\r\n        \"sup_cont_num\":     (self_inv == true)?buy_cont_num:supplier_cn,\r\n        \"sup_email\":        (self_inv == true)?buy_email:supplier_email,\r\n        \"sup_sst_reg\":      (self_inv == true)?buy_sst_reg:supplier_sst,\r\n        \"sup_ttx_no\":       (self_inv == true)?(buy_data == false)?\"\":buyer_data[0].buy_ttx_reg:supplier_ttx,\r\n        \"sup_tin\":          (self_inv == true)?buy_tin:supplier_tin,\r\n        \"sup_reg_brn\":      (self_inv == true)?buy_reg_brn:supplier_brn,\r\n        \"sup_reg_nric\":     (self_inv == true)?buy_reg_nric:supplier_nric,\r\n        \"sup_reg_passport\": (self_inv == true)?buy_reg_passport:supplier_passport,\r\n        \"sup_reg_army\":     (self_inv == true)?buy_reg_army:supplier_army,\r\n        \"sup_badsca\":       (self_inv == true)?(buy_data == false)?\"\":buyer_data[0].buy_badsca:supplier_badsca,\r\n        \"sup_bank_acc\":     (self_inv == true)?\"\":supplier_bacc,\r\n        \"sup_msic\":         (self_inv == true)?(buy_data == false)?\"\":buyer_data[0].buy_msic:supplier_msic,\r\n        \"sup_adrs\":         (self_inv == true)?buyer_adrs:supplier_adrs,\r\n        \"sup_city\":         (self_inv == true)?buyer_city:supplier_city,\r\n        \"sup_postal_zone\":  (self_inv == true)?buyer_pz:supplier_pz,\r\n        \"sup_adrs_line0\":   (self_inv == true)?buyer_l0:supplier_l0,\r\n        \"sup_adrs_line1\":   (self_inv == true)?buyer_l1:supplier_l1,\r\n        \"sup_adrs_line2\":   (self_inv == true)?buyer_l2:supplier_l2,\r\n        \"sup_country\":      (self_inv == true)?buy_ccty:sup_ccty,\r\n        \"sup_cste\":         (self_inv == true)?buy_cste:sup_cste,\r\n        \"inv_bp\":           (self_inv == true)?jscall.input.comp:jscall.input.inv_bp,\r\n        \"buy_name\":         (self_inv == true)?supplier_name:buy_name,\r\n        \"buy_cont_num\":     (self_inv == true)?supplier_cn:buy_cont_num,\r\n        \"buy_email\":        (self_inv == true)?supplier_email:buy_email,\r\n        \"buy_sst_reg\":      (self_inv == true)?supplier_sst:buy_sst_reg,\r\n        \"buy_tin\":          (self_inv == true)?supplier_tin:buy_tin,\r\n        \"buy_reg_brn\":      (self_inv == true)?supplier_brn:buy_reg_brn,\r\n        \"buy_reg_nric\":     (self_inv == true)?supplier_nric:buy_reg_nric,\r\n        \"buy_reg_passport\": (self_inv == true)?supplier_passport:buy_reg_passport,\r\n        \"buy_reg_army\":     (self_inv == true)?supplier_army:buy_reg_army,\r\n        \"buy_adrs\": (self_inv == true)?supplier_adrs:buyer_adrs,\r\n        \"buy_city\":         (self_inv == true)?supplier_city:buyer_city,\r\n        \"buy_postal_zone\":  (self_inv == true)?supplier_pz:buyer_pz,\r\n        \"buy_adrs_line0\":   (self_inv == true)?supplier_l0:buyer_l0,\r\n        \"buy_adrs_line1\":   (self_inv == true)?supplier_l1:buyer_l1,\r\n        \"buy_adrs_line2\":   (self_inv == true)?supplier_l2:buyer_l2,\r\n        \"buy_country\":      (self_inv == true)?sup_ccty:buy_ccty,\r\n        \"buy_cste\":         (self_inv == true)?sup_cste:buy_cste,\r\n        \"dtrm\": jscall.input.dtrm,\r\n        \"ship_bp\": jscall.input.stbp,\r\n        \"ship_name\":        shipper_name,\r\n        \"ship_tin\":         shipper_tin,\r\n        \"ship_reg_brn\":     shipper_brn,\r\n        \"ship_reg_nric\":    shipper_nric,\r\n        \"ship_reg_passport\":shipper_passport,\r\n        \"ship_reg_army\":    shipper_army,\r\n        \"ship_adrs\": jscall.input.sadr,\r\n        \"ship_city\":        shipper_city,\r\n        \"ship_postal_zone\": shipper_pz,\r\n        \"ship_adrs_line0\":  shipper_l0,\r\n        \"ship_adrs_line1\":  shipper_l1,\r\n        \"ship_adrs_line2\":  shipper_l2,\r\n        \"ship_country\":     ship_ccty,\r\n        \"ship_cste\":        ship_cste,\r\n        // \"ship_bp\": (self_inv == true)?jscall.input.comp:jscall.input.stbp,\r\n        // \"ship_name\":        (self_inv == true)?supplier_name:shipper_name,\r\n        // \"ship_tin\":         (self_inv == true)?supplier_tin:shipper_tin,\r\n        // \"ship_reg_brn\":     (self_inv == true)?supplier_brn:shipper_brn,\r\n        // \"ship_reg_nric\":    (self_inv == true)?supplier_nric:shipper_nric,\r\n        // \"ship_reg_passport\":(self_inv == true)?supplier_passport:shipper_passport,\r\n        // \"ship_reg_army\":    (self_inv == true)?supplier_army:shipper_army,\r\n        // \"ship_adrs\": (self_inv == true)?supplier_adrs:jscall.input.sadr,\r\n        // \"ship_city\":        (self_inv == true)?supplier_city:shipper_city,\r\n        // \"ship_postal_zone\": (self_inv == true)?supplier_pz:shipper_pz,\r\n        // \"ship_adrs_line0\":  (self_inv == true)?supplier_l0:shipper_l0,\r\n        // \"ship_adrs_line1\":  (self_inv == true)?supplier_l1:shipper_l1,\r\n        // \"ship_adrs_line2\":  (self_inv == true)?supplier_l2:shipper_l2,\r\n        // \"ship_country\":     (self_inv == true)?sup_ccty:ship_ccty,\r\n        // \"ship_cste\":        (self_inv == true)?sup_cste:ship_cste,\r\n        \"frm1\": jscall.input.frm1,\r\n        \"frm2\": jscall.input.frm2,\r\n        \"rate\": jscall.input.rate,\r\n        \"tote\": jscall.input.tote,\r\n        \"toti\": jscall.input.toti,\r\n        \"tott\": jscall.input.tott,\r\n        \"pamt\": jscall.input.pamt,\r\n        // \"pydt\": \"YYYY-MM-DD\",\r\n        // \"pytm\": \"YYYY-MM-DD HH:MM\",\r\n        \"pref\": jscall.input.pref,\r\n        \"tpat\": jscall.input.tpat,\r\n        \"tnat\": jscall.input.tnat,\r\n        \"tdis\": jscall.input.tdis,\r\n        \"tfee\": jscall.input.tfee,\r\n        \"ramt\": jscall.input.ramt,\r\n        \"ttax\": jscall.input.ttax,\r\n        \"ttat\": jscall.input.ttat,\r\n        \"adis\": jscall.input.adis,\r\n        \"adis_reason\": \"\",\r\n        \"afee\": jscall.input.afee,\r\n        \"afee_reason\": \"\",\r\n        \"fbil\": jscall.input.fbil,\r\n        \"org_e_inv_no\": org_e_inv_no,\r\n        \"term\": jscall.input.term,\r\n        \"bref\": jscall.input.bref,\r\n        \"ftrd\": jscall.input.ftrd,\r\n        \"anum\": jscall.input.anum,\r\n        \"ochg\": jscall.input.ochg,\r\n        \"ochg_amnt\": jscall.input.ochg_amnt,\r\n        \"ochg_reason\": jscall.input.ochg_reason,\r\n        \"det_tax\": (jscall.input?.det_tax)?jscall.input.det_tax:\"\",\r\n        // \"bsdt\": \"YYYY-MM-DD\",\r\n        // \"bedt\": \"YYYY-MM-DD\",\r\n        \"amnt_ex\": (jscall.input?.amnt_ex)?jscall.input.amnt_ex:0,\r\n        \"dshp\": jscall.input.dshp,\r\n        \"submission_uid\": \"\",\r\n        \"doc_uuid\": \"\",\r\n        \"esta\": \"10\",\r\n        \"err_msg\": \"\",\r\n        // \"e_invdt\": getCurrentDateTime(),\r\n        \"einv_stat\": \"10\",\r\n        // \"etim\": \"YYYY-MM-DD HH:MM\",\r\n        \"modi_stat\": \"\",\r\n        \"src_type\": einvois.get_src_inv_type(jscall.input.src_type),\r\n        \"inv_pdf\": \"\",\r\n        \"reference0\": jscall.input.reference0 ? jscall.input.reference0 : \"\",\r\n        \"reference1\": jscall.input.reference1 ? jscall.input.reference1 : \"\",\r\n        \"reference2\": jscall.input.reference2 ? jscall.input.reference2 : \"\",\r\n        \"reference3\": jscall.input.reference3 ? jscall.input.reference3 : \"\",\r\n        \"reference4\": jscall.input.reference4 ? jscall.input.reference4 : \"\",\r\n        \"reference5\": jscall.input.reference5 ? jscall.input.reference5 : \"\",\r\n        \"reference6\": jscall.input.reference6 ? jscall.input.reference6 : \"\",\r\n        \"reference7\": jscall.input.reference7 ? jscall.input.reference7 : \"\",\r\n        \"reference8\": jscall.input.reference8 ? jscall.input.reference8 : \"\",\r\n        \"reference9\": jscall.input.reference9 ? jscall.input.reference9 : \"\",\r\n        \"qr_code\": \"\",\r\n        \"org_doc_uuid\": org_doc_uuid,\r\n        \"einv_version\": \"\"\r\n    }\r\n\r\n    // if (temp_doct == \"11\" || temp_doct == \"12\"){\r\n    //     [header_data[\"comp\"], header_data[\"inv_bp\"]] = [header_data[\"inv_bp\"], header_data[\"comp\"]]\r\n    //     [header_data[\"sup_adrs\"], header_data[\"buy_adrs\"]] = [header_data[\"buy_adrs\"], header_data[\"sup_adrs\"]]\r\n    // }\r\n    return CralDB.PublishTopic(\"einv_header\", jscall.company, \"Insert\", header_data, jscall.user)\r\n}\r\n\r\nfunction getOriginalDocumentReference(refDocNum){\r\n    let invoice_number = \"\"\r\n    let document_uuid = \"\"\r\n    let refDocs = refDocNum.split(\",\")\r\n    refDocs.forEach(data =\u003e {\r\n        cancel_rec = CralDB.QueryByComp(`select e_inv_no from {{cancel_header}} where adcn='${data}'`, jscall.company)\r\n        if (cancel_rec?.length){\r\n            invoice_number = cancel_rec[0].e_inv_no\r\n            org_document_uuid = CralDB.QueryByComp(`select doc_uuid from {{einv_header}} where e_inv_no='${cancel_rec[0].e_inv_no}'`, jscall.company)\r\n            if (org_document_uuid?.length){\r\n                document_uuid = org_document_uuid[0].doc_uuid\r\n            }\r\n        }\r\n    })\r\n    return [invoice_number, document_uuid]\r\n}\r\nfunction insert_conso_header(){\r\n    header_err_msg = \"\"\r\n    temp_doct = einvois.get_doc_type(jscall.input.doct)\r\n    if (temp_doct == \"\"){\r\n        header_err_msg = write_err_msg(header_err_msg, \"Document Type\")\r\n    }\r\n    temp_ccur = einvois.get_ccur(jscall.input.ccur, jscall.input.dataset)\r\n    if (temp_ccur == \"\"){\r\n        header_err_msg = write_err_msg(header_err_msg, \"Currency Code\")\r\n    }\r\n    temp_paym = einvois.get_paym(jscall.input.paym, jscall.input.dataset)\r\n    if (temp_paym == \"\"){\r\n        // header_err_msg = write_err_msg(header_err_msg, \"Payment Mode\")\r\n    }\r\n    temp_cvat = einvois.get_cvat(jscall.input.cvat, jscall.input.dataset)\r\n    if (temp_cvat == \"\"){\r\n        header_err_msg = write_err_msg(header_err_msg, \"Tax Code\")\r\n    }\r\n    header_data = {\r\n        \"comp\": jscall.input.comp,\r\n        \"tran\": jscall.input.tran,\r\n        \"idoc\": jscall.input.idoc,\r\n        // \"line\": jscall.input.line,\r\n        \"doct\": temp_doct,\r\n        \"itbp\": jscall.input.inv_bp,\r\n        \"itoa\": jscall.input.buy_adrs,\r\n        \"ccur\": temp_ccur,\r\n        \"rate\": jscall.input.rate,\r\n        \"paym\": temp_paym,\r\n        \"term\": jscall.input.term,\r\n        \"tote\": jscall.input.tote,\r\n        \"toti\": jscall.input.toti,\r\n        \"tott\": jscall.input.tott,\r\n        \"cvat\": temp_cvat,\r\n        \"stbp\": jscall.input.stbp,\r\n        \"sadr\": jscall.input.sadr,\r\n        \"dtrm\": jscall.input.dtrm,\r\n        \"styp\": jscall.input.styp,\r\n        \"cein\": false,\r\n        \"disb\": false,\r\n        \"dshp\": false,\r\n        \"sinc\": false,\r\n        \"fbil\": jscall.input.fbil,\r\n        // \"bsdt\": jscall.input.bsdt,\r\n        // \"bedt\": jscall.input.bedt,\r\n        \"pamt\": jscall.input.pamt,\r\n        // \"pydt\": jscall.input.pydt,\r\n        // \"pytm\": jscall.input.pytm,\r\n        \"pref\": jscall.input.pref,\r\n        \"bref\": jscall.input.bref,\r\n        \"tpat\": jscall.input.tpat,\r\n        \"tnat\": jscall.input.tnat,\r\n        \"tdis\": jscall.input.tdis,\r\n        \"tfee\": jscall.input.tfee,\r\n        \"ramt\": jscall.input.ramt,\r\n        \"ttax\": jscall.input.ttax,\r\n        \"ttat\": jscall.input.ttat,\r\n        \"adis\": jscall.input.adis,\r\n        \"afee\": jscall.input.afee,\r\n        \"frm1\": jscall.input.frm1,\r\n        \"ftrd\": jscall.input.ftrd,\r\n        \"anum\": jscall.input.anum,\r\n        \"frm2\": jscall.input.frm2,\r\n        \"ochg\": jscall.input.ochg,\r\n        \"ochg_amnt\": jscall.input.ochg_amnt,\r\n        \"ochg_reason\": jscall.input.ochg_reason,\r\n        \"esta\": \"10\",\r\n        // \"etim\": jscall.input.etim,\r\n        \"submission_uid\": \"\",\r\n        \"err_msg\": \"\",\r\n        \"line_cnt\": 0,\r\n        \"trgt\": \"\",\r\n        \"val_err\": \"\",\r\n        \"cncl\": false,\r\n        \"det_tax\": \"\",\r\n        \"amnt_ex\": 0,\r\n        \"e_invdt\": \"\",\r\n        \"src_type\": einvois.get_src_inv_type(jscall.input.src_type),\r\n        \"adis_reason\": \"\",\r\n        \"afee_reason\": \"\",\r\n        \"par_cncl\": false,\r\n        \"s_line_cnt\": jscall.input.line_cnt,\r\n        \"einv_stat\": \"10\",\r\n        \"conso_inv\": \"\",\r\n        \"inv_date\": getCurrentDateTime(),\r\n        \"data_set\": jscall.input.dataset,\r\n        \"inv_no\": \"\"\r\n    }\r\n    return CralDB.PublishTopic(\"conso_header\", jscall.company, \"Insert\", header_data, jscall.user)\r\n}\r\n\r\nfunction insert_line(input_data, table_name, einvNumber){\r\n    line_err_msg = \"\"\r\n    \r\n    temp_cvat = einvois.get_cvat(input_data.cvat, jscall.input.dataset)\r\n    if (temp_cvat == \"\"){\r\n        line_err_msg = write_err_msg(line_err_msg, \"Tax Code\")\r\n    }\r\n    \r\n    // temp_ccty = einvois.get_ccty(input_data.ccty)\r\n    // if (temp_ccty == \"\"){\r\n    //     // line_err_msg = write_err_msg(line_err_msg, \"Country Code\")\r\n    // }\r\n    temp_clas = einvois.get_clas(input_data.clas, jscall.input.dataset)\r\n    if (temp_clas == \"\"){\r\n        line_err_msg = write_err_msg(line_err_msg, \"Classification Code\")\r\n    }\r\n    if (table_name == \"einv_lines\"){\r\n        line_data = {\r\n            \"e_inv_no\": einvNumber,\r\n            \"line\": input_data.line,\r\n            \"cuni\": einvois.get_cuni(input_data.cuni, jscall.input.dataset),\r\n            \"ccty\": einvois.get_ccty(input_data.ccty, jscall.input.dataset),\r\n            \"clas_grp\": einvois.getClassificationGroup(),\r\n            \"clas\": temp_clas,\r\n            \"item\": input_data.item,\r\n            \"item_desc\": input_data.item_desc,\r\n            \"pric\": input_data.pric,\r\n            \"pvat\": input_data.pvat,\r\n            \"txai\": input_data.txai,\r\n            \"ceno\": input_data.ceno,\r\n            \"amtt\": input_data.amtt,\r\n            \"stot\": input_data.stot,\r\n            \"amti\": input_data.amti,\r\n            \"dqua\": input_data.dqua,\r\n            \"disc\": input_data.disc,\r\n            \"ldai\": input_data.ldai,\r\n            \"ccde\": input_data.ccde,\r\n            \"feer\": input_data.feer,\r\n            \"feea\": input_data.feea,\r\n            \"disc_reason\": (input_data?.disc_reason)?input_data.disc_reason:\"\",\r\n            \"fee_reason\": (input_data?.fee_reason)?input_data.fee_reason:\"\",\r\n            \"err_msg\": \"\",  \r\n            \"lsta\": \"10\",\r\n            \"modi_lsta\": \"\",\r\n            \"cvat\": temp_cvat,\r\n            \"reference0\":  input_data.reference0 ?  input_data.reference0 : \"\",\r\n            \"reference1\":  input_data.reference1 ?  input_data.reference1 : \"\",\r\n            \"reference2\":  input_data.reference2 ?  input_data.reference2 : \"\",\r\n            \"reference3\":  input_data.reference3 ?  input_data.reference3 : \"\",\r\n            \"reference4\":  input_data.reference4 ?  input_data.reference4 : \"\",\r\n            \"reference5\":  input_data.reference5 ?  input_data.reference5 : \"\",\r\n            \"reference6\":  input_data.reference6 ?  input_data.reference6 : \"\",\r\n            \"reference7\":  input_data.reference7 ?  input_data.reference7 : \"\",\r\n            \"reference8\":  input_data.reference8 ?  input_data.reference8 : \"\",\r\n            \"reference9\":  input_data.reference9 ?  input_data.reference9 : \"\",\r\n            \"reference10\": input_data.reference10 ? input_data.reference10 : \"\",\r\n            \"reference11\": input_data.reference11 ? input_data.reference11 : \"\",\r\n            \"reference12\": input_data.reference12 ? input_data.reference12 : \"\",\r\n            \"reference13\": input_data.reference13 ? input_data.reference13 : \"\",\r\n            \"reference14\": input_data.reference14 ? input_data.reference14 : \"\",\r\n            \"reference15\": input_data.reference15 ? input_data.reference15 : \"\",\r\n            \"reference16\": input_data.reference16 ? input_data.reference16 : \"\",\r\n            \"reference17\": input_data.reference17 ? input_data.reference17 : \"\",\r\n            \"reference18\": input_data.reference18 ? input_data.reference18 : \"\",\r\n            \"reference19\": input_data.reference19 ? input_data.reference19 : \"\",\r\n            \"reference20\": input_data.reference20 ? input_data.reference20 : \"\"\r\n        }\r\n    } else {\r\n        line_data = {\r\n            \"comp\": input_data.comp,\r\n            \"tran\": input_data.tran,\r\n            // \"doct\": temp_doct,\r\n            \"idoc\": input_data.idoc,\r\n            \"line\": input_data.line,\r\n            \"item\": input_data.item,\r\n            \"item_desc\": input_data.item_desc,\r\n            \"pric\": input_data.pric,\r\n            \"cvat\": temp_cvat,\r\n            \"pvat\": input_data.pvat,\r\n            \"txai\": input_data.txai,\r\n            \"ceno\": input_data.ceno,\r\n            \"amtt\": input_data.amtt,\r\n            \"stot\": input_data.stot,\r\n            \"amti\": input_data.amti,\r\n            \"dqua\": input_data.dqua,\r\n            \"cuni\": einvois.get_cuni(input_data.cuni, jscall.input.dataset),\r\n            \"disc\": input_data.disc,\r\n            \"ldai\": input_data.ldai,\r\n            \"ccde\": input_data.ccde,\r\n            \"ccty\": einvois.get_ccty(input_data.ccty, jscall.input.dataset),\r\n            \"clas\": temp_clas,\r\n            \"feer\": input_data.feer,\r\n            \"feea\": input_data.feea,\r\n            \"err_msg\": line_err_msg,\r\n            \"lsta\":\"10\",\r\n            // \"cncl\": false,\r\n            \"disc_reason\": \"\",\r\n            \"fee_reason\": \"\"\r\n        }\r\n    }\r\n    return CralDB.PublishTopic(table_name, jscall.company, \"Insert\", line_data, jscall.user)\r\n}\r\n\r\nfunction write_err_msg(err_msg, err_code){\r\n    if (err_msg == \"\"){\r\n        err_msg = \"Code Validation Failed for \" + err_code\r\n    } else {\r\n        err_msg = err_msg + \", \" + err_code\r\n    }\r\n    return err_msg\r\n}\r\n\r\nfunction getCurrentDateTime() {\r\n    let now = new Date();\r\n    let year = now.getUTCFullYear();\r\n    let month = String(now.getUTCMonth() + 1).padStart(2, '0');\r\n    let day = String(now.getUTCDate()).padStart(2, '0');\r\n    let hours = String(now.getUTCHours()).padStart(2, '0');\r\n    let minutes = String(now.getUTCMinutes()).padStart(2, '0');\r\n    let seconds = String(now.getUTCSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}Z`;\r\n}"}],"Roles":[{"Role":{"RoleName":"ntpm_normal_user","Description":"NTPM Normal User Role","SystemRole":false,"ChildRoles":null,"AcessLevels":[{"Type":"Topic","ObjectID":"*","AccessLevel":3},{"Type":"Screen","ObjectID":"suppliers","AccessLevel":2},{"Type":"Screen","ObjectID":"buyers","AccessLevel":0},{"Type":"Screen","ObjectID":"master_einv_types","AccessLevel":0},{"Type":"Screen","ObjectID":"master_currency","AccessLevel":0},{"Type":"Screen","ObjectID":"master_country","AccessLevel":0},{"Type":"Screen","ObjectID":"master_paym","AccessLevel":0},{"Type":"Screen","ObjectID":"master_state","AccessLevel":0},{"Type":"Screen","ObjectID":"master_tax_types","AccessLevel":0},{"Type":"Screen","ObjectID":"master_itm_clas","AccessLevel":0},{"Type":"Screen","ObjectID":"master_clas_via_gl","AccessLevel":0},{"Type":"Screen","ObjectID":"master_unit","AccessLevel":0},{"Type":"Screen","ObjectID":"param_imp","AccessLevel":0},{"Type":"Screen","ObjectID":"param_entity_ds","AccessLevel":0},{"Type":"Screen","ObjectID":"param_self_einv","AccessLevel":0},{"Type":"Screen","ObjectID":"param_conso","AccessLevel":0},{"Type":"Screen","ObjectID":"param_cancel","AccessLevel":0},{"Type":"Screen","ObjectID":"layouts","AccessLevel":0},{"Type":"Screen","ObjectID":"submit_inv","AccessLevel":1},{"Type":"Screen","ObjectID":"submit_sinv","AccessLevel":1},{"Type":"Screen","ObjectID":"submit_scn","AccessLevel":1},{"Type":"Screen","ObjectID":"submit_scn","AccessLevel":1},{"Type":"Screen","ObjectID":"for_filing_inv","AccessLevel":2},{"Type":"Screen","ObjectID":"for_filing_sinv","AccessLevel":2},{"Type":"Screen","ObjectID":"for_filing_cn","AccessLevel":2},{"Type":"Screen","ObjectID":"for_filing_scn","AccessLevel":2},{"Type":"Screen","ObjectID":"for_vld_inv","AccessLevel":1},{"Type":"Screen","ObjectID":"for_vld_sinv","AccessLevel":1},{"Type":"Screen","ObjectID":"for_vld_cn","AccessLevel":1},{"Type":"Screen","ObjectID":"for_vld_scn","AccessLevel":1},{"Type":"Screen","ObjectID":"for_conso","AccessLevel":1},{"Type":"Screen","ObjectID":"cancel_inv","AccessLevel":0},{"Type":"Screen","ObjectID":"cancel_sinv","AccessLevel":0},{"Type":"Screen","ObjectID":"cancel_cn","AccessLevel":0},{"Type":"Screen","ObjectID":"cancel_scn","AccessLevel":0},{"Type":"Screen","ObjectID":"create_temp","AccessLevel":0},{"Type":"Screen","ObjectID":"upld_doc","AccessLevel":2},{"Type":"Screen","ObjectID":"download_doc_get_sub","AccessLevel":2},{"Type":"Screen","ObjectID":"download_doc_get_vld","AccessLevel":2}]}}],"DataSets":[{"Dataset":{"Id":"getSubmissionUUID","Description":"Get Submission UUID","Query":"SELECT \r\n    e_inv_no AS \"E-Invoice Number\", \r\n    submission_uid AS \"Submission UID\", \r\n    doc_uuid AS \"Document UUID\",\r\n    doct AS \"Invoice Type\",\r\n    sup_name AS \"Supplier Name\",\r\n    inv_bp AS \"Buyer Code\",\r\n    CASE \r\n        WHEN esta = '20' THEN 'Submitted'\r\n        WHEN esta = '30' THEN 'Valid'\r\n        ELSE 'Unknown'\r\n    END AS \"LHDN Status\",\r\n    etim AS \"LHDN Validated Date \u0026 Time\"\r\nFROM \r\n    {{einv_header}}\r\nWHERE \r\n    e_invdt BETWEEN '$1' AND '$2'\r\n    AND esta IN ('20', '30')\r\n    $3;"}},{"Dataset":{"Id":"getUploadedFile","Description":"Get Uploaded File","Query":"select \r\n    file_name as \"File Name\", \r\n    upload_user as \"Uploaded User\", \r\n    upload_time as \"Upload Time\"\r\nfrom \r\n    {{uploaded_file_details}} \r\nwhere \r\n    upload_time between '$1' and '$2'\r\n    $3;"}},{"Dataset":{"Id":"getValidation","Description":"Get Validation","Query":"SELECT \r\n    v.einv_code AS \"E-Invoice Number\", \r\n    v.einv_line AS \"Line\", \r\n    v.seqn AS \"Sequence\", \r\n    v.val_catg AS \"Validation Category\", \r\n    v.err_code AS \"Error Code\", \r\n    v.mess AS \"Message\"\r\nFROM \r\n    {{einv_validation}} v\r\nJOIN \r\n    {{einv_header}} h \r\nON \r\n    v.einv_code = h.e_inv_no\r\nWHERE \r\n    h.e_invdt BETWEEN '$1' and '$2'\r\n    $3;"}}],"Screens":[{"Screen":{"ScreenID":"buyers","ScreenName":"Buyers","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:28:36.961126+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:28:36.961126+08:00"}},{"Screen":{"ScreenID":"cancel_cn","ScreenName":"Cancelled - CN","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:36:51.012294+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:36:51.012294+08:00"}},{"Screen":{"ScreenID":"cancel_inv","ScreenName":"Cancelled - Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:36:18.373732+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:36:18.373732+08:00"}},{"Screen":{"ScreenID":"cancel_scn","ScreenName":"Cancelled - Self-Billed CN","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:36:59.528515+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:36:59.528515+08:00"}},{"Screen":{"ScreenID":"cancel_sinv","ScreenName":"Cancelled - Self-Billed Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:36:32.897072+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:36:32.897072+08:00"}},{"Screen":{"ScreenID":"create_temp","ScreenName":"Create Template","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:37:09.283851+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:37:09.283851+08:00"}},{"Screen":{"ScreenID":"download_doc_get_sub","ScreenName":"Download Document - Get Submission","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:37:35.848969+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:37:35.848969+08:00"}},{"Screen":{"ScreenID":"download_doc_get_vld","ScreenName":"Download Document - Get Validation","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:37:59.677402+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:37:59.677402+08:00"}},{"Screen":{"ScreenID":"for_conso","ScreenName":"For Consolidation","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:36:03.585639+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:36:03.585639+08:00"}},{"Screen":{"ScreenID":"for_filing_cn","ScreenName":"For Filing - Credit Note","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:34:46.556871+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:34:46.556871+08:00"}},{"Screen":{"ScreenID":"for_filing_inv","ScreenName":"For Filing - Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:34:26.400658+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:34:26.400658+08:00"}},{"Screen":{"ScreenID":"for_filing_scn","ScreenName":"For Filing Self-Billed CN","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:34:57.513916+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:34:57.513916+08:00"}},{"Screen":{"ScreenID":"for_filing_sinv","ScreenName":"For Filing - Self-Billed Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:34:37.047406+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:34:37.047406+08:00"}},{"Screen":{"ScreenID":"for_vld_cn","ScreenName":"For Validation - CN","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:35:43.994968+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:35:43.994968+08:00"}},{"Screen":{"ScreenID":"for_vld_inv","ScreenName":"For Validation - Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:35:15.627502+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:35:15.627502+08:00"}},{"Screen":{"ScreenID":"for_vld_scn","ScreenName":"For Validation - Self-Billed CN","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:35:54.309335+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:35:54.309335+08:00"}},{"Screen":{"ScreenID":"for_vld_sinv","ScreenName":"For Validation - Self-Billed Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:35:31.958176+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:35:31.958176+08:00"}},{"Screen":{"ScreenID":"layouts","ScreenName":"Layouts","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:33:02.645259+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:33:02.645259+08:00"}},{"Screen":{"ScreenID":"master_clas_via_gl","ScreenName":"Master - Item Classification Via GL Codes","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:30:43.122538+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:30:43.122538+08:00"}},{"Screen":{"ScreenID":"master_country","ScreenName":"Master - Country Codes","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:29:21.293924+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:29:21.293924+08:00"}},{"Screen":{"ScreenID":"master_currency","ScreenName":"Master - Currency Codes","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:29:08.061604+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:29:08.061604+08:00"}},{"Screen":{"ScreenID":"master_einv_types","ScreenName":"Master Data - E-Invoice Types","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:28:49.89907+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:28:49.89907+08:00"}},{"Screen":{"ScreenID":"master_itm_clas","ScreenName":"Master - Item Classification","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:30:23.666253+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:30:23.666253+08:00"}},{"Screen":{"ScreenID":"master_paym","ScreenName":"Master - Payment Modes","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:29:36.587836+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:29:36.587836+08:00"}},{"Screen":{"ScreenID":"master_state","ScreenName":"Master - State Codes","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:29:48.973553+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:29:48.973553+08:00"}},{"Screen":{"ScreenID":"master_tax_types","ScreenName":"Master - Tax Types","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:30:01.010184+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:30:01.010184+08:00"}},{"Screen":{"ScreenID":"master_unit","ScreenName":"Master - Unit of Measure","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:31:15.518554+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:31:15.518554+08:00"}},{"Screen":{"ScreenID":"param_cancel","ScreenName":"Cancellation Defaults","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:32:45.685397+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:32:45.685397+08:00"}},{"Screen":{"ScreenID":"param_conso","ScreenName":"Consolidation Filing Selector","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:32:30.081406+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:32:30.081406+08:00"}},{"Screen":{"ScreenID":"param_entity_ds","ScreenName":"Entity Data Set","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:31:52.992486+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:31:52.992486+08:00"}},{"Screen":{"ScreenID":"param_imp","ScreenName":"Implemented Components","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:31:29.475823+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:31:29.475823+08:00"}},{"Screen":{"ScreenID":"param_self_einv","ScreenName":"Self - E-Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:32:12.322952+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:32:12.322952+08:00"}},{"Screen":{"ScreenID":"submit_cn","ScreenName":"Submitted - Credit Note","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:34:00.849023+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:34:00.849023+08:00"}},{"Screen":{"ScreenID":"submit_inv","ScreenName":"Submitted - Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:33:16.484005+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:33:16.484005+08:00"}},{"Screen":{"ScreenID":"submit_scn","ScreenName":"Submitted - Self-Billed Credit Note","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:34:13.634489+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:34:13.634489+08:00"}},{"Screen":{"ScreenID":"submit_sinv","ScreenName":"Submitted - Self-Billed Invoice","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:33:42.197437+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:33:42.197437+08:00"}},{"Screen":{"ScreenID":"suppliers","ScreenName":"Suppliers","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:28:21.353231+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:28:21.353231+08:00"}},{"Screen":{"ScreenID":"test_screen","ScreenName":"Testing","CreatedUser":"malai","CreatedTime":"2024-11-26T17:30:19.037175+08:00","UpdatedUser":"malai","UpdatedTime":"2024-11-26T17:30:19.037175+08:00"}},{"Screen":{"ScreenID":"upld_doc","ScreenName":"Upload Document","CreatedUser":"parthi","CreatedTime":"2024-12-04T13:37:18.344235+08:00","UpdatedUser":"parthi","UpdatedTime":"2024-12-04T13:37:18.344235+08:00"}}],"EmailTemplates":null,"Lists":[{"List":{"ListID":"m_status","ListName":"Modification Status","Items":{"Items":[{"Value":"10","Label":"Corrected"},{"Value":"20","Label":"Cancelled"},{"Value":"30","Label":"Partially Cancelled"}]}}}],"Reports":null}